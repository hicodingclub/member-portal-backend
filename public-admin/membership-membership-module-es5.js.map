{"version":3,"sources":["webpack:///src/app/membership-cust/base/additionalinfo/additionalinfo-detail.cust.component.ts","webpack:///src/app/membership-cust/base/additionalinfo/additionalinfo-edit.cust.component.ts","webpack:///src/app/membership-cust/base/additionalinfo/additionalinfo-list.cust.component.ts","webpack:///src/app/membership-cust/base/board/board-detail.cust.component.ts","webpack:///src/app/membership-cust/base/board/board-edit.cust.component.ts","webpack:///src/app/membership-cust/base/board/board-list.cust.component.ts","webpack:///src/app/membership-cust/base/lead/lead-detail.cust.component.ts","webpack:///src/app/membership-cust/base/lead/lead-edit.cust.component.ts","webpack:///src/app/membership-cust/base/lead/lead-list.cust.component.ts","webpack:///src/app/membership-cust/base/member/member-detail.cust.component.ts","webpack:///src/app/membership-cust/base/member/member-edit.cust.component.ts","webpack:///src/app/membership-cust/base/member/member-list.cust.component.ts","webpack:///src/app/membership-cust/membership-routing.cust.path.ts","webpack:///src/app/membership-cust/membership.conf.ts","webpack:///src/app/membership-cust/membership.cust.module.ts","webpack:///src/app/membership-cust/membership.tokens.value.ts","webpack:///src/app/membership/additionalinfo/additionalinfo-detail/additionalinfo-detail-field.component.ts","webpack:///src/app/membership/additionalinfo/additionalinfo-detail/additionalinfo-detail-field.component.html","webpack:///src/app/membership/additionalinfo/additionalinfo-detail/additionalinfo-detail-sub.component.ts","webpack:///src/app/membership/additionalinfo/additionalinfo-detail/additionalinfo-detail-sub.component.html","webpack:///src/app/membership/additionalinfo/additionalinfo-detail/additionalinfo-detail.component.ts","webpack:///src/app/membership/additionalinfo/additionalinfo-detail/additionalinfo-detail.component.html","webpack:///src/app/membership/additionalinfo/additionalinfo-edit/additionalinfo-edit.component.ts","webpack:///src/app/membership/additionalinfo/additionalinfo-edit/additionalinfo-edit.component.html","webpack:///src/app/membership/additionalinfo/additionalinfo-list/additionalinfo-list-sub.component.ts","webpack:///src/app/membership/additionalinfo/additionalinfo-list/additionalinfo-list-sub.component.html","webpack:///src/app/membership/additionalinfo/additionalinfo-list/additionalinfo-list.component.ts","webpack:///src/app/membership/additionalinfo/additionalinfo-list/additionalinfo-list.component.html","webpack:///src/app/membership/additionalinfo/additionalinfo.base.service.ts","webpack:///src/app/membership/additionalinfo/additionalinfo.component.ts","webpack:///src/app/membership/additionalinfo/additionalinfo.service.ts","webpack:///src/app/membership/board/board-detail/board-detail-field.component.ts","webpack:///src/app/membership/board/board-detail/board-detail-field.component.html","webpack:///src/app/membership/board/board-detail/board-detail.component.ts","webpack:///src/app/membership/board/board-detail/board-detail.component.html","webpack:///src/app/membership/board/board-edit/board-edit.component.ts","webpack:///src/app/membership/board/board-edit/board-edit.component.html","webpack:///src/app/membership/board/board-list/board-list.component.ts","webpack:///src/app/membership/board/board-list/board-list.component.html","webpack:///src/app/membership/board/board.base.service.ts","webpack:///src/app/membership/board/board.component.ts","webpack:///src/app/membership/board/board.service.ts","webpack:///src/app/membership/lead/lead-detail/lead-detail-field.component.ts","webpack:///src/app/membership/lead/lead-detail/lead-detail-field.component.html","webpack:///src/app/membership/lead/lead-detail/lead-detail.component.ts","webpack:///src/app/membership/lead/lead-detail/lead-detail.component.html","webpack:///src/app/membership/lead/lead-edit/lead-edit.component.ts","webpack:///src/app/membership/lead/lead-edit/lead-edit.component.html","webpack:///src/app/membership/lead/lead-list/lead-list.component.ts","webpack:///src/app/membership/lead/lead-list/lead-list.component.html","webpack:///src/app/membership/lead/lead.base.service.ts","webpack:///src/app/membership/lead/lead.component.ts","webpack:///src/app/membership/lead/lead.service.ts","webpack:///src/app/membership/member/member-detail/member-detail-field.component.ts","webpack:///src/app/membership/member/member-detail/member-detail-field.component.html","webpack:///src/app/membership/member/member-detail/member-detail-pop.component.ts","webpack:///src/app/membership/member/member-detail/member-detail-pop.component.html","webpack:///src/app/membership/member/member-detail/member-detail-sel.component.ts","webpack:///src/app/membership/member/member-detail/member-detail-sel.component.html","webpack:///src/app/membership/member/member-detail/member-detail.component.ts","webpack:///src/app/membership/member/member-detail/member-detail.component.html","webpack:///src/app/membership/member/member-edit/member-edit.component.ts","webpack:///src/app/membership/member/member-edit/member-edit.component.html","webpack:///src/app/membership/member/member-list/member-list-select.component.ts","webpack:///src/app/membership/member/member-list/member-list-select.component.html","webpack:///src/app/membership/member/member-list/member-list.component.ts","webpack:///src/app/membership/member/member-list/member-list.component.html","webpack:///src/app/membership/member/member.base.service.ts","webpack:///src/app/membership/member/member.component.ts","webpack:///src/app/membership/member/member.service.ts","webpack:///src/app/membership/membership-routing.core.module.ts","webpack:///src/app/membership/membership-routing.core.path.ts","webpack:///src/app/membership/membership-routing.module.ts","webpack:///src/app/membership/membership.component.ts","webpack:///src/app/membership/membership.component.html","webpack:///src/app/membership/membership.core.module.ts","webpack:///src/app/membership/membership.module.ts","webpack:///src/app/membership/membership.tokens.ts"],"names":["AdditionalinfoDetailCustComponent","template","AdditionalinfoEditCustComponent","AdditionalinfoListCustComponent","BoardDetailCustComponent","BoardEditCustComponent","BoardListCustComponent","LeadDetailCustComponent","LeadEditCustComponent","LeadListCustComponent","MemberDetailCustComponent","MemberEditCustComponent","MemberListCustComponent","MembershipRoutingCustPath","MembershipCoreRoutes","path","component","children","redirectTo","pathMatch","data","mraLevel","item","MembershipRoutes","membership_server_root_uri","MembershipCustModule","imports","declarations","exports","providers","entryComponents","$event","AdditionalinfoDetailFieldComponent","additionalinfoService","injector","router","route","location","view","DETAIL","fieldDisplayNames","enums","stringFields","push","referenceFields","showFieldsStr","console","error","showFields","match","detailObj","onDetailReturned","id","populateDetail","selector","templateUrl","styleUrls","AdditionalinfoDetailSubComponent","inputData","AdditionalinfoDetailComponent","componentFactoryResolver","snapshot","paramMap","get","searchObj","populateDetailByFields","AdditionalinfoEditComponent","minDate","year","Date","getFullYear","month","day","EDIT","detail","formatDetail","embedMode","action","getDetailData","populateDetailForAction","cid","queryParamMap","populateDetailFromCopy","searchHintFieldValues","$","tooltip","initData","Object","keys","prop","hiddenFields","AdditionalinfoListSubComponent","listCategory1","listCategory2","clickItemAction","adjustListViewForWindowSize","ref","getParentRouteRefField","parentSchema","referenceFieldsReverseMap","parentItemId","getParentRouteItemId","parentData","arrayFields","some","x","searchList","target","blur","AdditionalinfoListComponent","LIST","listViewFilter","listCategories","itemMultiSelect","options","disableCatetory","searchDetailReady","queryParams","listSortField","listSortOrder","perPage","servicePath","AdditionalinfoBaseService","http","serverRootUrl","serviceUrl","itemCamelName","AdditionalinfoComponent","doneData","done","eventEmitter","selectComponents","setItemNames","briefFieldsInfo","referenceFieldsMap","requiredFields","emailFields","schemaName","modulePath","indexFields","style","AdditionalinfoService","membershipServerRootUri","providedIn","BoardDetailFieldComponent","boardService","numberFields","BoardDetailComponent","MembershipBoardDirectiveEmail","validators","validator","email","re","test","msg","control","value","validateValue","result","idx","length","obj","e","provide","useExisting","multi","BoardEditComponent","BoardListComponent","setListSort","BoardBaseService","BoardComponent","BoardService","LeadDetailFieldComponent","leadService","LeadDetailComponent","MembershipLeadDirectiveEmail","LeadEditComponent","LeadListComponent","LeadBaseService","LeadComponent","LeadService","MemberDetailFieldComponent","memberService","MemberDetailPopComponent","majorUi","uiOnEscapeKey","uiCloseModal","MemberDetailSelComponent","MemberDetailComponent","isChildRouterActivated","navigate","relativeTo","queryParamsHandling","MembershipMemberDirectiveEmail","MembershipMemberDirectivePhone","phone","MemberEditComponent","MemberListSelectComponent","selectedId","populateList","MemberListComponent","MemberBaseService","MemberComponent","MemberService","MembershipRoutingCoreModule","forChild","additionalinfoSubPath","memberDetailPath","memberRoutingCorePath","canActivate","additionalinfoRoutingCorePath","boardRoutingCorePath","leadRoutingCorePath","MembershipRoutingModule","MembershipRefSelectDirective","viewContainerRef","MembershipComponent","MembershipCoreModule","MembershipModule","Membership_SERVER_ROOT_URI","factory"],"mappings":"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","file":"membership-membership-module-es5.js","sourcesContent":["import { Input, Component } from '@angular/core';\n\nimport { AdditionalinfoComponent } from '../../../membership/additionalinfo/additionalinfo.component';\n\n@Component({\n    template: '',\n})\nexport class AdditionalinfoDetailCustComponent extends AdditionalinfoComponent {\n}\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Thu Jul 23 2020 23:36:05 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  AdditionalinfoComponent\n} from '../../../membership/additionalinfo/additionalinfo.component';\n@Component({\n  template: '',\n})\nexport class AdditionalinfoDetailCustComponent extends AdditionalinfoComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { AdditionalinfoComponent } from '../../../membership/additionalinfo/additionalinfo.component';\n\n@Component({\n    template: '',\n})\nexport class AdditionalinfoEditCustComponent extends AdditionalinfoComponent {        \n}\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Thu Jul 23 2020 23:36:05 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  AdditionalinfoComponent\n} from '../../../membership/additionalinfo/additionalinfo.component';\n@Component({\n  template: '',\n})\nexport class AdditionalinfoEditCustComponent extends AdditionalinfoComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { AdditionalinfoComponent } from '../../../membership/additionalinfo/additionalinfo.component';\n\n@Component({\n    template: '',\n})\nexport class AdditionalinfoListCustComponent extends AdditionalinfoComponent {\n}\n\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Thu Jul 23 2020 23:36:05 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  AdditionalinfoComponent\n} from '../../../membership/additionalinfo/additionalinfo.component';\n@Component({\n  template: '',\n})\nexport class AdditionalinfoListCustComponent extends AdditionalinfoComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { BoardComponent } from '../../../membership/board/board.component';\n\n@Component({\n    template: '',\n})\nexport class BoardDetailCustComponent extends BoardComponent {\n}\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Thu Jul 23 2020 23:36:05 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  BoardComponent\n} from '../../../membership/board/board.component';\n@Component({\n  template: '',\n})\nexport class BoardDetailCustComponent extends BoardComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { BoardComponent } from '../../../membership/board/board.component';\n\n@Component({\n    template: '',\n})\nexport class BoardEditCustComponent extends BoardComponent {        \n}\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Thu Jul 23 2020 23:36:05 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  BoardComponent\n} from '../../../membership/board/board.component';\n@Component({\n  template: '',\n})\nexport class BoardEditCustComponent extends BoardComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { BoardComponent } from '../../../membership/board/board.component';\n\n@Component({\n    template: '',\n})\nexport class BoardListCustComponent extends BoardComponent {\n}\n\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Thu Jul 23 2020 23:36:05 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  BoardComponent\n} from '../../../membership/board/board.component';\n@Component({\n  template: '',\n})\nexport class BoardListCustComponent extends BoardComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { LeadComponent } from '../../../membership/lead/lead.component';\n\n@Component({\n    template: '',\n})\nexport class LeadDetailCustComponent extends LeadComponent {\n}\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Thu Jul 23 2020 23:36:05 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  LeadComponent\n} from '../../../membership/lead/lead.component';\n@Component({\n  template: '',\n})\nexport class LeadDetailCustComponent extends LeadComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { LeadComponent } from '../../../membership/lead/lead.component';\n\n@Component({\n    template: '',\n})\nexport class LeadEditCustComponent extends LeadComponent {        \n}\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Thu Jul 23 2020 23:36:05 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  LeadComponent\n} from '../../../membership/lead/lead.component';\n@Component({\n  template: '',\n})\nexport class LeadEditCustComponent extends LeadComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { LeadComponent } from '../../../membership/lead/lead.component';\n\n@Component({\n    template: '',\n})\nexport class LeadListCustComponent extends LeadComponent {\n}\n\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Thu Jul 23 2020 23:36:05 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  LeadComponent\n} from '../../../membership/lead/lead.component';\n@Component({\n  template: '',\n})\nexport class LeadListCustComponent extends LeadComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { MemberComponent } from '../../../membership/member/member.component';\n\n@Component({\n    template: '',\n})\nexport class MemberDetailCustComponent extends MemberComponent {\n}\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Thu Jul 23 2020 23:36:05 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  MemberComponent\n} from '../../../membership/member/member.component';\n@Component({\n  template: '',\n})\nexport class MemberDetailCustComponent extends MemberComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { MemberComponent } from '../../../membership/member/member.component';\n\n@Component({\n    template: '',\n})\nexport class MemberEditCustComponent extends MemberComponent {        \n}\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Thu Jul 23 2020 23:36:05 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  MemberComponent\n} from '../../../membership/member/member.component';\n@Component({\n  template: '',\n})\nexport class MemberEditCustComponent extends MemberComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { MemberComponent } from '../../../membership/member/member.component';\n\n@Component({\n    template: '',\n})\nexport class MemberListCustComponent extends MemberComponent {\n}\n\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Thu Jul 23 2020 23:36:05 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  MemberComponent\n} from '../../../membership/member/member.component';\n@Component({\n  template: '',\n})\nexport class MemberListCustComponent extends MemberComponent {}**** End of recent updates.<<<*/\n","\n\n// Path under membership/cust/\nexport const MembershipRoutingCustPath = [\n  // your customization goes here\n];\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Thu Jul 23 2020 23:36:05 GMT-0700 (Pacific Daylight Time)\n\n// Path under membership/cust/\nexport const MembershipRoutingCustPath = [\n  // your customization goes here\n];**** End of recent updates.<<<*/\n","\n\nimport { Routes } from '@angular/router';\n\nimport { MembershipComponent } from '../membership/membership.component';\n\n//Import routing paths\nimport { \n  memberRoutingCorePath, \n  additionalinfoRoutingCorePath, \n  boardRoutingCorePath, \n  leadRoutingCorePath,  \n} from '../membership/membership-routing.core.path';\n\nexport const MembershipCoreRoutes: Routes = [\n  { \n    // Lazy Load: and add to app routing: \n    //     { path: 'membership', loadChildren: () => import('./membership/membership.module').then(m => m.MembershipModule) },\n    path: '',\n    // non lazy load config. Include module in app module.\n    // path: 'membership',\n\n    component: MembershipComponent,\n    children: [\n      {path: '',  redirectTo: 'member', pathMatch: 'full'},\n\n      { path: 'member',\n        children: memberRoutingCorePath,\n        data: {mraLevel: 1, item: 'member'}\n      },\n      { path: 'additionalinfo',\n        children: additionalinfoRoutingCorePath,\n        data: {mraLevel: 1, item: 'additionalinfo'}\n      },\n      { path: 'board',\n        children: boardRoutingCorePath,\n        data: {mraLevel: 1, item: 'board'}\n      },\n      { path: 'lead',\n        children: leadRoutingCorePath,\n        data: {mraLevel: 1, item: 'lead'}\n      },\n    ]\n  },\n];\n\nimport { MembershipRoutingCustPath } from './membership-routing.cust.path';\n\nexport const MembershipRoutes: Routes = [\n  {\n    // Lazy Load: and add to app routing: \n    //     { path: 'membership', loadChildren: () => import('./membership/membership.module').then(m => m.MembershipModule) },\n    path: 'cust',\n    // non lazy load config. Include module in app module.\n    // path: 'membership/cust',\n\n    children: MembershipRoutingCustPath,\n  },\n];\n\nexport const membership_server_root_uri: string = '/api/membership';\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Thu Jul 23 2020 23:36:05 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Routes\n} from '@angular/router';\nimport {\n  MembershipComponent\n} from '../membership/membership.component';\n//Import routing paths\nimport {\n  memberRoutingCorePath,\n  additionalinfoRoutingCorePath,\n  boardRoutingCorePath,\n  leadRoutingCorePath,\n} from '../membership/membership-routing.core.path';\nexport const MembershipCoreRoutes: Routes = [{\n  // Lazy Load: and add to app routing:\n  //     { path: 'membership', loadChildren: () => import('./membership/membership.module').then(m => m.MembershipModule) },\n  path: '',\n  // non lazy load config. Include module in app module.\n  // path: 'membership',\n  component: MembershipComponent,\n  children: [{\n    path: '',\n    redirectTo: 'member',\n    pathMatch: 'full'\n  }, {\n    path: 'member',\n    children: memberRoutingCorePath,\n    data: {\n      mraLevel: 1,\n      item: 'member'\n    }\n  }, {\n    path: 'additionalinfo',\n    children: additionalinfoRoutingCorePath,\n    data: {\n      mraLevel: 1,\n      item: 'additionalinfo'\n    }\n  }, {\n    path: 'board',\n    children: boardRoutingCorePath,\n    data: {\n      mraLevel: 1,\n      item: 'board'\n    }\n  }, {\n    path: 'lead',\n    children: leadRoutingCorePath,\n    data: {\n      mraLevel: 1,\n      item: 'lead'\n    }\n  }, ]\n}, ];\nimport {\n  MembershipRoutingCustPath\n} from './membership-routing.cust.path';\nexport const MembershipRoutes: Routes = [{\n  // Lazy Load: and add to app routing:\n  //     { path: 'membership', loadChildren: () => import('./membership/membership.module').then(m => m.MembershipModule) },\n  path: 'cust',\n  // non lazy load config. Include module in app module.\n  // path: 'membership/cust',\n  children: MembershipRoutingCustPath,\n}, ];**** End of recent updates.<<<*/\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { MembershipCoreModule } from '../membership/membership.core.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n\n    MembershipCoreModule,\n  ],\n  declarations: [\n  ],\n  exports: [\n  ],\n  providers: [\n  ],\n  entryComponents: [\n  ],\n})\nexport class MembershipCustModule { }\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Thu Jul 23 2020 23:36:05 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  NgModule\n} from '@angular/core';\nimport {\n  CommonModule\n} from '@angular/common';\nimport {\n  RouterModule\n} from '@angular/router';\nimport {\n  FormsModule\n} from '@angular/forms';\nimport {\n  MembershipCoreModule\n} from '../membership/membership.core.module';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    MembershipCoreModule,\n  ],\n  declarations: [],\n  exports: [],\n  providers: [],\n  entryComponents: [],\n})\nexport class MembershipCustModule {}**** End of recent updates.<<<*/\n","export const membership_server_root_uri: string = '/api/membership';\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Thu Jul 23 2020 23:36:05 GMT-0700 (Pacific Daylight Time)\n\nexport const membership_server_root_uri: string = '/api/membership';**** End of recent updates.<<<*/\n","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  AdditionalinfoComponent,\n  ViewType\n} from '../additionalinfo.component';\nimport {\n  AdditionalinfoService\n} from '../additionalinfo.service';\n@Component({\n  selector: 'app-additionalinfo-detail-field',\n  templateUrl: './additionalinfo-detail-field.component.html',\n  styleUrls: ['./additionalinfo-detail.component.css']\n})\nexport class AdditionalinfoDetailFieldComponent extends AdditionalinfoComponent\nimplements OnInit {\n  // @Input() id: string;\n  // @Input() detailObj: any;\n  // @Input() showFieldsStr: string;\n  showFields: string[];\n  constructor(public additionalinfoService: AdditionalinfoService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(null, additionalinfoService, injector, router, route, location);\n    this.view = ViewType.DETAIL;\n    this.fieldDisplayNames = {\n      'member': 'Member',\n      'grade': 'Grade',\n      'team': 'Team',\n      'guardianEmail': 'Guardian Email',\n      'programmingSkill': 'Programming Skill',\n      'designingSkill': 'Designing Skill',\n      'githubExp': 'Github Exp',\n    };\n    this.enums['grade'] = ['8', '9', '10', '11', '12', 'other', ];\n    this.enums['team'] = ['Web Development', 'UI Design', ];\n    this.enums['programmingSkill'] = ['1', '2', '3', '4', '5', ];\n    this.enums['designingSkill'] = ['1', '2', '3', '4', '5', ];\n    this.enums['githubExp'] = ['No', 'Yes, web access only', 'Yes, web and git access', ];\n    this.stringFields.push('grade');\n    this.stringFields.push('team');\n    this.stringFields.push('guardianEmail');\n    this.stringFields.push('programmingSkill');\n    this.stringFields.push('designingSkill');\n    this.stringFields.push('githubExp');\n    this.referenceFields = ['member', ];\n  }\n  ngOnInit() {\n    if (!this.showFieldsStr) {\n      console.error(\"A field has to be given to show it.\");\n      return;\n    }\n    this.showFields = this.showFieldsStr.match(/\\S+/g);\n    if (this.detailObj) {\n      this.onDetailReturned(this.detailObj, null);\n    } else {\n      if (!this.id) this.id = this.id;\n      if (this.id) this.populateDetail(this.id);\n      else {\n        console.error(\"No id provided to show info\");\n        return;\n      }\n    }\n  }\n}","<div *ngIf=\"detail && showFields.includes('member')\">\n  <a routerLink=\".\" (click)=\"onDisplayRefClicked('member', detail['member'], $event)\">\n    {{detail['member']?detail['member']['valueMedium']:\"\"}}\n  </a>\n</div>\n<div *ngIf=\"detail && showFields.includes('grade')\">\n  {{detail['grade']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('team')\">\n  {{detail['team']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('guardianEmail')\">\n  {{detail['guardianEmail']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('programmingSkill')\">\n  {{detail['programmingSkill']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('designingSkill')\">\n  {{detail['designingSkill']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('githubExp')\">\n  {{detail['githubExp']}}\n</div>","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  AdditionalinfoDetailComponent\n} from './additionalinfo-detail.component';\nimport {\n  AdditionalinfoService\n} from '../additionalinfo.service';\n@Component({\n  selector: 'app-additionalinfo-detail-sub',\n  templateUrl: './additionalinfo-detail-sub.component.html',\n  styleUrls: ['./additionalinfo-detail.component.css']\n})\nexport class AdditionalinfoDetailSubComponent extends AdditionalinfoDetailComponent\nimplements OnInit {\n  // @Input() inputData;\n  constructor(public additionalinfoService: AdditionalinfoService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(null, additionalinfoService, injector, router, route, location);\n  }\n  ngOnInit() {\n    if (!this.id) this.id = this.inputData;\n    if (this.id) this.populateDetail(this.id);\n    else console.error(\"Routing error for detail sub view... no id...\");\n  }\n  ngAfterViewInit() {}\n}","<div *ngIf=\"detail\">\n  <div class=\"card text-left\">\n    <div class=\"card-body\">\n      <div class=\"card-text\">\n        <div class=\"card-body\">\n          <div>\n            <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n              <div><label>Guardian Email:</label></div>\n              <div class=\"ml-3\">\n                {{detail['guardianEmail']}}</div>\n            </div>\n          </div>\n          <div>\n            <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n              <div><label>Programming Skill:</label></div>\n              <div class=\"ml-3\">\n                {{detail['programmingSkill']}}</div>\n            </div>\n          </div>\n          <div>\n            <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n              <div><label>Designing Skill:</label></div>\n              <div class=\"ml-3\">\n                {{detail['designingSkill']}}</div>\n            </div>\n          </div>\n          <div>\n            <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n              <div><label>Github Exp:</label></div>\n              <div class=\"ml-3\">\n                {{detail['githubExp']}}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  AdditionalinfoDetailCustComponent\n} from '../../../membership-cust/base/additionalinfo/additionalinfo-detail.cust.component';\nimport {\n  ViewType\n} from '../additionalinfo.component';\nimport {\n  AdditionalinfoService\n} from '../additionalinfo.service';\nimport {\n  ComponentFactoryResolver\n} from '@angular/core';\n@Component({\n  selector: 'app-additionalinfo-detail',\n  templateUrl: './additionalinfo-detail.component.html',\n  styleUrls: ['./additionalinfo-detail.component.css']\n})\nexport class AdditionalinfoDetailComponent extends AdditionalinfoDetailCustComponent implements OnInit, AfterViewInit {\n  // @Input() \n  // public id:string;\n  // @Input()\n  // public searchObj:any;\n  // @Input()\n  // public disableActionButtions:boolean;\n  // @Output()\n  // public eventEmitter: EventEmitter<any> = new EventEmitter();\n  constructor(public componentFactoryResolver: ComponentFactoryResolver, public additionalinfoService: AdditionalinfoService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(componentFactoryResolver, additionalinfoService, injector, router, route, location);\n    this.view = ViewType.DETAIL;\n    this.fieldDisplayNames = {\n      'member': 'Member',\n      'grade': 'Grade',\n      'team': 'Team',\n      'guardianEmail': 'Guardian Email',\n      'programmingSkill': 'Programming Skill',\n      'designingSkill': 'Designing Skill',\n      'githubExp': 'Github Exp',\n    };\n    this.enums['grade'] = ['8', '9', '10', '11', '12', 'other', ];\n    this.enums['team'] = ['Web Development', 'UI Design', ];\n    this.enums['programmingSkill'] = ['1', '2', '3', '4', '5', ];\n    this.enums['designingSkill'] = ['1', '2', '3', '4', '5', ];\n    this.enums['githubExp'] = ['No', 'Yes, web access only', 'Yes, web and git access', ];\n    this.stringFields.push('grade');\n    this.stringFields.push('team');\n    this.stringFields.push('guardianEmail');\n    this.stringFields.push('programmingSkill');\n    this.stringFields.push('designingSkill');\n    this.stringFields.push('githubExp');\n    this.referenceFields = ['member', ];\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    if (!this.id) this.id = this.route.snapshot.paramMap.get('id');\n    if (this.id) {\n      this.populateDetail(this.id);\n    } else if (this.searchObj) {\n      // search item based on the unique value\n      this.populateDetailByFields(this.searchObj);\n    } else {\n      console.error(\"Routing error for detail view... no id...\");\n      return;\n    }\n  }\n  ngAfterViewInit() {}\n}","<div class=\"detail\" *ngIf=\"detail\">\n  <div *ngIf=\"!options['disableActionButtions']\">\n    <div *ngIf=\"!disableActionButtions && !options['disableActionButtions']\" class=\"action-buttons\">\n      <a *ngIf=\"!options['disableActionList']\" routerLink=\"../../list\" class=\"action-go-list\"><i class=\"fas fa-list\" title=\"List\"></i><!--  span>&nbsp;&nbsp;{{ItemCamelName}} List</span--></a>\n      <a *ngIf=\"!options['disableActionEdit']\" [routerLink]=\"['../../edit', detail['_id'] ]\" [skipLocationChange]=\"false\" class=\"btn btn-outline-primary\">Edit</a>\n      <a *ngIf=\"!options['disableActionNew']\" [routerLink]=\"['../../new']\" [queryParams]=\"{cid: detail['_id']}\" [skipLocationChange]=\"false\" class=\"btn btn-outline-primary\">New</a>\n      <a *ngIf=\"!options['disableActionDelete']\" routerLink=\".\" class=\"btn btn-outline-primary\" (click)=\"onDelete(detail['_id'], null)\">Delete</a>\n      <a *ngIf=\"!options['disableActionArchive']\" routerLink=\".\" class=\"btn btn-outline-primary\" (click)=\"onArchive(detail['_id'], null, detail['archived'])\">\n        <ng-template [ngIf]=\"!detail['archived']\">Archive</ng-template>\n        <ng-template [ngIf]=\"detail['archived']\">Unarchive</ng-template>\n      </a>\n    </div>\n  </div>\n  <div class=\"card text-left transparent-border \">\n    <div class=\"grid-fields\">\n      <div class=\"card-body\">\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Member:</label></div>\n            <div class=\"ml-3\">\n              <a routerLink=\".\" (click)=\"onDisplayRefClicked('member', detail['member'], $event)\">\n                {{detail['member']?detail['member']['valueMedium']:\"\"}}\n              </a></div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Grade:</label></div>\n            <div class=\"ml-3\">\n              {{detail['grade']}}</div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Team:</label></div>\n            <div class=\"ml-3\">\n              {{detail['team']}}</div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Guardian Email:</label></div>\n            <div class=\"ml-3\">\n              {{detail['guardianEmail']}}</div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Programming Skill:</label></div>\n            <div class=\"ml-3\">\n              {{detail['programmingSkill']}}</div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Designing Skill:</label></div>\n            <div class=\"ml-3\">\n              {{detail['designingSkill']}}</div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Github Exp:</label></div>\n            <div class=\"ml-3\">\n              {{detail['githubExp']}}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"!options['disablePipeline']\">\n  </div>\n  <div *ngIf=\"!options['disableRefLink']\">\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  Directive,\n  EventEmitter\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\ndeclare const $: any;\nimport {\n  AdditionalinfoEditCustComponent\n} from '../../../membership-cust/base/additionalinfo/additionalinfo-edit.cust.component';\nimport {\n  ViewType\n} from '../additionalinfo.component';\nimport {\n  AdditionalinfoService\n} from '../additionalinfo.service';\nimport {\n  ComponentFactoryResolver\n} from '@angular/core';\n@Component({\n  selector: 'app-additionalinfo-edit',\n  templateUrl: './additionalinfo-edit.component.html',\n  styleUrls: ['./additionalinfo-edit.component.css']\n})\nexport class AdditionalinfoEditComponent extends AdditionalinfoEditCustComponent implements OnInit, AfterViewInit {\n  // @Input() \n  // public id: string;\n  // @Input()\n  // public cid: string; // copy id\n  // @Input()\n  // public initData: any; // some fields has data already. eg: {a: b}. Used for add\n  // @Output()\n  // public doneData = new EventEmitter<boolean>();\n  // @Output()\n  // public done = new EventEmitter<any>();\n  // @Input()\n  // public embeddedView: boolean;\n  // @Input()\n  // public embedMode: string; // parent to tell the action - create\n  public action: string;\n  public minDate = {\n    year: (new Date()).getFullYear() - 100,\n    month: 1,\n    day: 1\n  };\n  constructor(public componentFactoryResolver: ComponentFactoryResolver, public additionalinfoService: AdditionalinfoService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(componentFactoryResolver, additionalinfoService, injector, router, route, location);\n    this.view = ViewType.EDIT;\n    this.fieldDisplayNames = {\n      'grade': 'Grade',\n      'team': 'Team',\n      'guardianEmail': 'Guardian Email',\n      'programmingSkill': 'Programming Skill',\n      'designingSkill': 'Designing Skill',\n      'githubExp': 'Github Exp',\n      'member': 'Member',\n    };\n    this.enums['grade'] = ['8', '9', '10', '11', '12', 'other', ];\n    this.enums['team'] = ['Web Development', 'UI Design', ];\n    this.enums['programmingSkill'] = ['1', '2', '3', '4', '5', ];\n    this.enums['designingSkill'] = ['1', '2', '3', '4', '5', ];\n    this.enums['githubExp'] = ['No', 'Yes, web access only', 'Yes, web and git access', ];\n    this.stringFields.push('grade');\n    this.stringFields.push('team');\n    this.stringFields.push('guardianEmail');\n    this.stringFields.push('programmingSkill');\n    this.stringFields.push('designingSkill');\n    this.stringFields.push('githubExp');\n    this.referenceFields = ['member', ];\n    const detail = {};\n    this.detail = this.formatDetail(detail);\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.embedMode == 'create') { // parent ask to create\n      this.action = 'Create';\n      this.getDetailData();\n    } else {\n      if (!this.id) this.id = this.route.snapshot.paramMap.get('id');\n      if (this.id) {\n        this.action = 'Edit';\n        this.populateDetailForAction(this.id, 'edit'); //populate with action as 'edit'\n      } else {\n        this.action = 'Create';\n        if (!this.cid) this.cid = this.route.snapshot.queryParamMap.get('cid');\n        if (this.cid) {\n          this.populateDetailFromCopy(this.cid);\n        } else {\n          this.getDetailData();\n        }\n      }\n    }\n    // get editHintFields\n    this.searchHintFieldValues();\n  }\n  ngAfterViewInit() {\n    // Initialize all tooltips\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n  getDetailData() {\n    if (this.initData) {\n      this.action = 'Add';\n      let detail = {};\n      for (let prop of Object.keys(this.initData)) {\n        detail[prop] = this.initData[prop];\n        this.hiddenFields.push(prop);\n      }\n      this.detail = this.formatDetail(detail);\n    } else {\n      let detail = {};\n      this.detail = this.formatDetail(detail);\n    }\n  }\n}","<div class=\"edit\" *ngIf=\"detail\">\n  <div class=\"card\" style=\"text-align: left;\">\n    <div class=\"card-body\">\n      <h4 class=\"card-title\" *ngIf=\"!embeddedView && !options['title']\">{{action}} AdditionalInfo</h4>\n      <h4 class=\"card-title\" *ngIf=\"options['title']\" [ngStyle]=\"style['card-title']\">\n        {{options['title']}}\n      </h4>\n      <p *ngIf=\"options['subtitle']\" [ngStyle]=\"style['card-subtitle']\">\n        {{options['subtitle']}}\n      </p>\n      <form (ngSubmit)=\"onSubmit()\" #editForm=\"ngForm\">\n        <ng-template [ngIf]=\"action == 'Edit'\">\n          <ng-template [ngIf]=\"!hiddenFields.includes('grade')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditGrade\">Grade</label>\n              <div class=\"form-check\" [ngClass]=\"{'ng-valid': enums['grade'].includes(detail['grade']),\n                          'ng-invalid': !enums['grade'].includes(detail['grade'])}\">\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditGrade\" class=\"form-check-input\" required id=\"EditGrade8\" [value]=\"'8'\" [(ngModel)]=\"detail['grade']\" #EditGrade=\"ngModel\">\n                  <label class=\"form-check-label\">8</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditGrade\" class=\"form-check-input\" required id=\"EditGrade9\" [value]=\"'9'\" [(ngModel)]=\"detail['grade']\" #EditGrade=\"ngModel\">\n                  <label class=\"form-check-label\">9</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditGrade\" class=\"form-check-input\" required id=\"EditGrade10\" [value]=\"'10'\" [(ngModel)]=\"detail['grade']\" #EditGrade=\"ngModel\">\n                  <label class=\"form-check-label\">10</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditGrade\" class=\"form-check-input\" required id=\"EditGrade11\" [value]=\"'11'\" [(ngModel)]=\"detail['grade']\" #EditGrade=\"ngModel\">\n                  <label class=\"form-check-label\">11</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditGrade\" class=\"form-check-input\" required id=\"EditGrade12\" [value]=\"'12'\" [(ngModel)]=\"detail['grade']\" #EditGrade=\"ngModel\">\n                  <label class=\"form-check-label\">12</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditGrade\" class=\"form-check-input\" required id=\"EditGradeother\" [value]=\"'other'\" [(ngModel)]=\"detail['grade']\" #EditGrade=\"ngModel\">\n                  <label class=\"form-check-label\">other</label>\n                </div>\n              </div>\n              <div [hidden]=\"EditGrade.valid || EditGrade.pristine || EditGrade.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditGrade.errors && EditGrade.errors.required\"> Grade is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('team')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditTeam\">Team</label><span><i data-toggle=\"tooltip\" title=\"which team do you want to join first?\" class=\"far fa-question-circle\"></i></span>\n              <div class=\"form-check\" [ngClass]=\"{'ng-valid': enums['team'].includes(detail['team']),\n                          'ng-invalid': !enums['team'].includes(detail['team'])}\">\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditTeam\" class=\"form-check-input\" required id=\"EditTeamWeb Development\" [value]=\"'Web Development'\" [(ngModel)]=\"detail['team']\" #EditTeam=\"ngModel\">\n                  <label class=\"form-check-label\">Web Development</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditTeam\" class=\"form-check-input\" required id=\"EditTeamUI Design\" [value]=\"'UI Design'\" [(ngModel)]=\"detail['team']\" #EditTeam=\"ngModel\">\n                  <label class=\"form-check-label\">UI Design</label>\n                </div>\n              </div>\n              <div [hidden]=\"EditTeam.valid || EditTeam.pristine || EditTeam.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditTeam.errors && EditTeam.errors.required\"> Team is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('guardianEmail')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditGuardianEmail\">Guardian Email</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditGuardianEmail\" required maxlength=\"100\" [(ngModel)]=\"detail['guardianEmail']\" name=\"EditGuardianEmail\" #EditGuardianEmail=\"ngModel\">\n                <div *ngIf=\"detail['guardianEmail']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('guardianEmail')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditGuardianEmail.valid || EditGuardianEmail.pristine || EditGuardianEmail.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditGuardianEmail.errors && EditGuardianEmail.errors.required\"> GuardianEmail is required. </div>\n                <div *ngIf=\"EditGuardianEmail.errors && EditGuardianEmail.errors.maxlength\"> GuardianEmail must be at most 100 characters long. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('programmingSkill')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditProgrammingSkill\">Programming Skill</label><span><i data-toggle=\"tooltip\" title=\"How much do you know about programming? (1 is the lowest, 5 is the highest)\" class=\"far fa-question-circle\"></i></span>\n              <div class=\"form-check\" [ngClass]=\"{'ng-valid': enums['programmingSkill'].includes(detail['programmingSkill']),\n                          'ng-invalid': !enums['programmingSkill'].includes(detail['programmingSkill'])}\">\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditProgrammingSkill\" class=\"form-check-input\" required id=\"EditProgrammingSkill1\" [value]=\"'1'\" [(ngModel)]=\"detail['programmingSkill']\" #EditProgrammingSkill=\"ngModel\">\n                  <label class=\"form-check-label\">1</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditProgrammingSkill\" class=\"form-check-input\" required id=\"EditProgrammingSkill2\" [value]=\"'2'\" [(ngModel)]=\"detail['programmingSkill']\" #EditProgrammingSkill=\"ngModel\">\n                  <label class=\"form-check-label\">2</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditProgrammingSkill\" class=\"form-check-input\" required id=\"EditProgrammingSkill3\" [value]=\"'3'\" [(ngModel)]=\"detail['programmingSkill']\" #EditProgrammingSkill=\"ngModel\">\n                  <label class=\"form-check-label\">3</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditProgrammingSkill\" class=\"form-check-input\" required id=\"EditProgrammingSkill4\" [value]=\"'4'\" [(ngModel)]=\"detail['programmingSkill']\" #EditProgrammingSkill=\"ngModel\">\n                  <label class=\"form-check-label\">4</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditProgrammingSkill\" class=\"form-check-input\" required id=\"EditProgrammingSkill5\" [value]=\"'5'\" [(ngModel)]=\"detail['programmingSkill']\" #EditProgrammingSkill=\"ngModel\">\n                  <label class=\"form-check-label\">5</label>\n                </div>\n              </div>\n              <div [hidden]=\"EditProgrammingSkill.valid || EditProgrammingSkill.pristine || EditProgrammingSkill.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditProgrammingSkill.errors && EditProgrammingSkill.errors.required\"> ProgrammingSkill is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('designingSkill')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditDesigningSkill\">Designing Skill</label><span><i data-toggle=\"tooltip\" title=\"How much do you know about designing? (1 is the lowest, 5 is the highest)\" class=\"far fa-question-circle\"></i></span>\n              <div class=\"form-check\" [ngClass]=\"{'ng-valid': enums['designingSkill'].includes(detail['designingSkill']),\n                          'ng-invalid': !enums['designingSkill'].includes(detail['designingSkill'])}\">\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditDesigningSkill\" class=\"form-check-input\" required id=\"EditDesigningSkill1\" [value]=\"'1'\" [(ngModel)]=\"detail['designingSkill']\" #EditDesigningSkill=\"ngModel\">\n                  <label class=\"form-check-label\">1</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditDesigningSkill\" class=\"form-check-input\" required id=\"EditDesigningSkill2\" [value]=\"'2'\" [(ngModel)]=\"detail['designingSkill']\" #EditDesigningSkill=\"ngModel\">\n                  <label class=\"form-check-label\">2</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditDesigningSkill\" class=\"form-check-input\" required id=\"EditDesigningSkill3\" [value]=\"'3'\" [(ngModel)]=\"detail['designingSkill']\" #EditDesigningSkill=\"ngModel\">\n                  <label class=\"form-check-label\">3</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditDesigningSkill\" class=\"form-check-input\" required id=\"EditDesigningSkill4\" [value]=\"'4'\" [(ngModel)]=\"detail['designingSkill']\" #EditDesigningSkill=\"ngModel\">\n                  <label class=\"form-check-label\">4</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditDesigningSkill\" class=\"form-check-input\" required id=\"EditDesigningSkill5\" [value]=\"'5'\" [(ngModel)]=\"detail['designingSkill']\" #EditDesigningSkill=\"ngModel\">\n                  <label class=\"form-check-label\">5</label>\n                </div>\n              </div>\n              <div [hidden]=\"EditDesigningSkill.valid || EditDesigningSkill.pristine || EditDesigningSkill.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditDesigningSkill.errors && EditDesigningSkill.errors.required\"> DesigningSkill is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('githubExp')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditGithubExp\">Github Exp</label>\n              <div class=\"form-check\" [ngClass]=\"{'ng-valid': enums['githubExp'].includes(detail['githubExp']),\n                          'ng-invalid': !enums['githubExp'].includes(detail['githubExp'])}\">\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditGithubExp\" class=\"form-check-input\" required id=\"EditGithubExpNo\" [value]=\"'No'\" [(ngModel)]=\"detail['githubExp']\" #EditGithubExp=\"ngModel\">\n                  <label class=\"form-check-label\">No</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditGithubExp\" class=\"form-check-input\" required id=\"EditGithubExpYes, web access only\" [value]=\"'Yes, web access only'\" [(ngModel)]=\"detail['githubExp']\" #EditGithubExp=\"ngModel\">\n                  <label class=\"form-check-label\">Yes, web access only</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditGithubExp\" class=\"form-check-input\" required id=\"EditGithubExpYes, web and git access\" [value]=\"'Yes, web and git access'\" [(ngModel)]=\"detail['githubExp']\" #EditGithubExp=\"ngModel\">\n                  <label class=\"form-check-label\">Yes, web and git access</label>\n                </div>\n              </div>\n              <div [hidden]=\"EditGithubExp.valid || EditGithubExp.pristine || EditGithubExp.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditGithubExp.errors && EditGithubExp.errors.required\"> GithubExp is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n        </ng-template>\n        <ng-template [ngIf]=\"action == 'Create' || action == 'Add' \">\n          <ng-template [ngIf]=\"!hiddenFields.includes('member')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditMember\">Member</label>\n              <!-- <a class=\"icon-search\" [routerLink]=\"['.']\" (click)=\"onRefSelect('member')\"><i class=\"fas fa-list\" title=\"Search\"></i></a>  -->\n              <div class=\"input-group\">\n                <!--  [attr.disabled]=\"true\" -->\n                <input class=\"form-control rounded\" id=\"EditMember\" [ngClass]=\"{'pointer ref-badge': detail['member']['_id']}\" (focus)=\"onRefSelect('member')\" required [ngModel]=\"detail['member']['valueMedium']\" name=\"EditMember\" #EditMember=\"ngModel\">\n                <div *ngIf=\"detail['member']['valueMedium']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('member')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditMember.valid || EditMember.pristine\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditMember.errors && EditMember.errors.required && !(detail['member']?.date)\"> Member is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('grade')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditGrade\">Grade</label>\n              <div class=\"form-check\" [ngClass]=\"{'ng-valid': enums['grade'].includes(detail['grade']),\n                          'ng-invalid': !enums['grade'].includes(detail['grade'])}\">\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditGrade\" class=\"form-check-input\" required id=\"EditGrade8\" [value]=\"'8'\" [(ngModel)]=\"detail['grade']\" #EditGrade=\"ngModel\">\n                  <label class=\"form-check-label\">8</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditGrade\" class=\"form-check-input\" required id=\"EditGrade9\" [value]=\"'9'\" [(ngModel)]=\"detail['grade']\" #EditGrade=\"ngModel\">\n                  <label class=\"form-check-label\">9</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditGrade\" class=\"form-check-input\" required id=\"EditGrade10\" [value]=\"'10'\" [(ngModel)]=\"detail['grade']\" #EditGrade=\"ngModel\">\n                  <label class=\"form-check-label\">10</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditGrade\" class=\"form-check-input\" required id=\"EditGrade11\" [value]=\"'11'\" [(ngModel)]=\"detail['grade']\" #EditGrade=\"ngModel\">\n                  <label class=\"form-check-label\">11</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditGrade\" class=\"form-check-input\" required id=\"EditGrade12\" [value]=\"'12'\" [(ngModel)]=\"detail['grade']\" #EditGrade=\"ngModel\">\n                  <label class=\"form-check-label\">12</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditGrade\" class=\"form-check-input\" required id=\"EditGradeother\" [value]=\"'other'\" [(ngModel)]=\"detail['grade']\" #EditGrade=\"ngModel\">\n                  <label class=\"form-check-label\">other</label>\n                </div>\n              </div>\n              <div [hidden]=\"EditGrade.valid || EditGrade.pristine || EditGrade.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditGrade.errors && EditGrade.errors.required\"> Grade is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('team')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditTeam\">Team</label>\n              <span><i data-toggle=\"tooltip\" title=\"which team do you want to join first?\" class=\"far fa-question-circle\"></i></span>\n              <div class=\"form-check\" [ngClass]=\"{'ng-valid': enums['team'].includes(detail['team']),\n                          'ng-invalid': !enums['team'].includes(detail['team'])}\">\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditTeam\" class=\"form-check-input\" required id=\"EditTeamWeb Development\" [value]=\"'Web Development'\" [(ngModel)]=\"detail['team']\" #EditTeam=\"ngModel\">\n                  <label class=\"form-check-label\">Web Development</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditTeam\" class=\"form-check-input\" required id=\"EditTeamUI Design\" [value]=\"'UI Design'\" [(ngModel)]=\"detail['team']\" #EditTeam=\"ngModel\">\n                  <label class=\"form-check-label\">UI Design</label>\n                </div>\n              </div>\n              <div [hidden]=\"EditTeam.valid || EditTeam.pristine || EditTeam.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditTeam.errors && EditTeam.errors.required\"> Team is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('guardianEmail')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditGuardianEmail\">Guardian Email</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditGuardianEmail\" required maxlength=\"100\" [(ngModel)]=\"detail['guardianEmail']\" name=\"EditGuardianEmail\" #EditGuardianEmail=\"ngModel\">\n                <div *ngIf=\"detail['guardianEmail']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('guardianEmail')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditGuardianEmail.valid || EditGuardianEmail.pristine || EditGuardianEmail.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditGuardianEmail.errors && EditGuardianEmail.errors.required\"> GuardianEmail is required. </div>\n                <div *ngIf=\"EditGuardianEmail.errors && EditGuardianEmail.errors.maxlength\"> GuardianEmail must be at most 100 characters long. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('programmingSkill')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditProgrammingSkill\">Programming Skill</label>\n              <span><i data-toggle=\"tooltip\" title=\"How much do you know about programming? (1 is the lowest, 5 is the highest)\" class=\"far fa-question-circle\"></i></span>\n              <div class=\"form-check\" [ngClass]=\"{'ng-valid': enums['programmingSkill'].includes(detail['programmingSkill']),\n                          'ng-invalid': !enums['programmingSkill'].includes(detail['programmingSkill'])}\">\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditProgrammingSkill\" class=\"form-check-input\" required id=\"EditProgrammingSkill1\" [value]=\"'1'\" [(ngModel)]=\"detail['programmingSkill']\" #EditProgrammingSkill=\"ngModel\">\n                  <label class=\"form-check-label\">1</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditProgrammingSkill\" class=\"form-check-input\" required id=\"EditProgrammingSkill2\" [value]=\"'2'\" [(ngModel)]=\"detail['programmingSkill']\" #EditProgrammingSkill=\"ngModel\">\n                  <label class=\"form-check-label\">2</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditProgrammingSkill\" class=\"form-check-input\" required id=\"EditProgrammingSkill3\" [value]=\"'3'\" [(ngModel)]=\"detail['programmingSkill']\" #EditProgrammingSkill=\"ngModel\">\n                  <label class=\"form-check-label\">3</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditProgrammingSkill\" class=\"form-check-input\" required id=\"EditProgrammingSkill4\" [value]=\"'4'\" [(ngModel)]=\"detail['programmingSkill']\" #EditProgrammingSkill=\"ngModel\">\n                  <label class=\"form-check-label\">4</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditProgrammingSkill\" class=\"form-check-input\" required id=\"EditProgrammingSkill5\" [value]=\"'5'\" [(ngModel)]=\"detail['programmingSkill']\" #EditProgrammingSkill=\"ngModel\">\n                  <label class=\"form-check-label\">5</label>\n                </div>\n              </div>\n              <div [hidden]=\"EditProgrammingSkill.valid || EditProgrammingSkill.pristine || EditProgrammingSkill.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditProgrammingSkill.errors && EditProgrammingSkill.errors.required\"> ProgrammingSkill is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('designingSkill')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditDesigningSkill\">Designing Skill</label>\n              <span><i data-toggle=\"tooltip\" title=\"How much do you know about designing? (1 is the lowest, 5 is the highest)\" class=\"far fa-question-circle\"></i></span>\n              <div class=\"form-check\" [ngClass]=\"{'ng-valid': enums['designingSkill'].includes(detail['designingSkill']),\n                          'ng-invalid': !enums['designingSkill'].includes(detail['designingSkill'])}\">\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditDesigningSkill\" class=\"form-check-input\" required id=\"EditDesigningSkill1\" [value]=\"'1'\" [(ngModel)]=\"detail['designingSkill']\" #EditDesigningSkill=\"ngModel\">\n                  <label class=\"form-check-label\">1</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditDesigningSkill\" class=\"form-check-input\" required id=\"EditDesigningSkill2\" [value]=\"'2'\" [(ngModel)]=\"detail['designingSkill']\" #EditDesigningSkill=\"ngModel\">\n                  <label class=\"form-check-label\">2</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditDesigningSkill\" class=\"form-check-input\" required id=\"EditDesigningSkill3\" [value]=\"'3'\" [(ngModel)]=\"detail['designingSkill']\" #EditDesigningSkill=\"ngModel\">\n                  <label class=\"form-check-label\">3</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditDesigningSkill\" class=\"form-check-input\" required id=\"EditDesigningSkill4\" [value]=\"'4'\" [(ngModel)]=\"detail['designingSkill']\" #EditDesigningSkill=\"ngModel\">\n                  <label class=\"form-check-label\">4</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditDesigningSkill\" class=\"form-check-input\" required id=\"EditDesigningSkill5\" [value]=\"'5'\" [(ngModel)]=\"detail['designingSkill']\" #EditDesigningSkill=\"ngModel\">\n                  <label class=\"form-check-label\">5</label>\n                </div>\n              </div>\n              <div [hidden]=\"EditDesigningSkill.valid || EditDesigningSkill.pristine || EditDesigningSkill.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditDesigningSkill.errors && EditDesigningSkill.errors.required\"> DesigningSkill is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('githubExp')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditGithubExp\">Github Exp</label>\n              <div class=\"form-check\" [ngClass]=\"{'ng-valid': enums['githubExp'].includes(detail['githubExp']),\n                          'ng-invalid': !enums['githubExp'].includes(detail['githubExp'])}\">\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditGithubExp\" class=\"form-check-input\" required id=\"EditGithubExpNo\" [value]=\"'No'\" [(ngModel)]=\"detail['githubExp']\" #EditGithubExp=\"ngModel\">\n                  <label class=\"form-check-label\">No</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditGithubExp\" class=\"form-check-input\" required id=\"EditGithubExpYes, web access only\" [value]=\"'Yes, web access only'\" [(ngModel)]=\"detail['githubExp']\" #EditGithubExp=\"ngModel\">\n                  <label class=\"form-check-label\">Yes, web access only</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditGithubExp\" class=\"form-check-input\" required id=\"EditGithubExpYes, web and git access\" [value]=\"'Yes, web and git access'\" [(ngModel)]=\"detail['githubExp']\" #EditGithubExp=\"ngModel\">\n                  <label class=\"form-check-label\">Yes, web and git access</label>\n                </div>\n              </div>\n              <div [hidden]=\"EditGithubExp.valid || EditGithubExp.pristine || EditGithubExp.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditGithubExp.errors && EditGithubExp.errors.required\"> GithubExp is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n        </ng-template>\n        <div class=\"action-buttons-center\">\n          <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!editForm.form.valid\">Submit</button>\n          <button *ngIf=\"!options['disableCancel']\" class=\"btn btn-outline-success\" type=\"button\" (click)=\"editCancel()\">Cancel</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n<ng-template membership-ref-select></ng-template>","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  AdditionalinfoListComponent\n} from './additionalinfo-list.component';\nimport {\n  AdditionalinfoService\n} from '../additionalinfo.service';\n@Component({\n  selector: 'app-additionalinfo-list-sub',\n  templateUrl: './additionalinfo-list-sub.component.html',\n  styleUrls: ['./additionalinfo-list.component.css']\n})\nexport class AdditionalinfoListSubComponent extends AdditionalinfoListComponent implements OnInit {\n  public parentSchema;\n  public parentItemId;\n  constructor(public additionalinfoService: AdditionalinfoService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(null, additionalinfoService, injector, router, route, location);\n    this.listCategory1 = {}; // no do query based on category for sub view;\n    this.listCategory2 = {}; // no do query based on category for sub view;\n  }\n  ngOnInit() {\n    this.clickItemAction = ''; // don't go to details or select by clicking the card/row.\n    this.adjustListViewForWindowSize();\n    let ref = this.getParentRouteRefField();\n    this.parentSchema = this.referenceFieldsReverseMap[ref];\n    this.parentItemId = this.getParentRouteItemId();\n    let id = this.parentItemId;\n    this.detail = {};\n    this.parentData = {};\n    if (this.arrayFields.some(x => x[0] == ref)) {\n      this.parentData[ref] = {\n        'selection': [{\n          '_id': id\n        }]\n      };\n      this.detail[ref] = {\n        'selection': [{\n          '_id': id\n        }]\n      }; //search on array list\n    } else {\n      this.parentData[ref] = {\n        '_id': id\n      };\n      this.detail[ref] = {\n        '_id': id\n      }; //make this as the search context\n    }\n    this.searchList();\n  }\n}","<div>\n  <div class=\"add-area d-flex\">\n    <div class=\"d-flex ml-auto\">\n    </div>\n  </div>\n  <div *ngIf=\"list.length === 0\" class=\"no-records\">\n    <span *ngIf=\"loaded\">No records found.</span>\n    <span *ngIf=\"!loaded\">Loading...</span>\n  </div>\n  <div class=\"container search\">\n    <div class=\"row justify-content-end mt-3\">\n    </div>\n    <div class=\"d-flex justify-content-between\">\n      <div>\n      </div>\n      <div>\n        <div class=\"total_counts\">\n          <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n        </div>\n      </div>\n    </div>\n    <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n      <div *ngIf=\"totalPages > 1\">\n        <ul class=\"pagination justify-content-center\">\n          <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n            <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n              <span aria-hidden=\"true\">&laquo;</span>\n              <span class=\"sr-only\">Previous</span>\n            </a>\n          </li>\n          <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n          <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n            <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n          </li>\n          <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n          <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n            <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n              <span aria-hidden=\"true\">&raquo;</span>\n              <span class=\"sr-only\">Next</span>\n            </a>\n          </li>\n        </ul>\n      </div>\n      <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n        <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"list.length > 0\">\n    <table *ngIf=\"isShowListView('table')\" class=\"table table-bordered table-hover\">\n      <thead class=\"thead-light\">\n        <tr>\n          <th scope=\"col\">#</th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('member', 'Member')\" *ngIf=\"referenceFieldsMap['member'] != parentItem\"> Member <span *ngIf=\"listSortField === 'member'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('grade', 'Grade')\"> Grade <span *ngIf=\"listSortField === 'grade'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('team', 'Team')\"> Team <span *ngIf=\"listSortField === 'team'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th style=\"width: 2rem;\"></th>\n          <th scope=\"col\" style=\"width:4.8rem;\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        <ng-template ngFor let-detail [ngForOf]=\"list\" let-i=\"index\">\n          <tr [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i]}\">\n            <td scope=\"row\" (click)=\"clickOneItem(i)\" class=\"pointer read-more mt-3\">\n              {{(page-1)*perPage+i+1}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\" *ngIf=\"referenceFieldsMap['member'] != parentItem\">\n              <a routerLink=\".\" (click)=\"onDisplayRefClicked('member', detail['member'], $event)\">\n                {{detail['member']?detail['member']['valueMedium']:\"\"}}\n              </a>\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['grade']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['team']}}\n            </td>\n            <td>\n              <span class=\"pointer\" (click)=\"toggleShowDetailItem(i)\">\n                <i *ngIf=\"!detail.mddsShowDetail\" class=\"fas fa-caret-down\" title=\"More\"></i>\n                <i *ngIf=\"detail.mddsShowDetail\" class=\"fas fa-caret-up\" title=\"Less\"></i>\n              </span>\n            </td>\n            <td>\n              <span class=\"read-more font-size-75 mt-3\" (click)=\"onDetailLinkClicked(detail['_id'])\">Detail <i class=\"fas fa-arrow-right\"></i></span>\n            </td>\n          </tr>\n          <tr *ngIf=\"detail.mddsShowDetail\">\n            <td colspan=\"4\">\n              <app-additionalinfo-detail-sub [inputData]=\"detail['_id']\"></app-additionalinfo-detail-sub>\n            </td>\n          </tr>\n        </ng-template>\n      </tbody>\n    </table>\n    <div class=\"listview\" *ngIf=\"isShowListView('list')\">\n      <div class=\"list-block\" *ngFor=\"let detail of list;  let i = index; let list_index = index;\">\n        <hr *ngIf=\"i==0\" class=\"list-devider\">\n        <div class=\"list-card text-left\" [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i],\n\t\t\t\t\t\t\t'clickable-card': clickItemAction}\">\n          <div class=\"list-fields\" [ngClass]=\"{pointer: clickItemAction}\" (click)=\"clickOneItem(i)\">\n            <div class=\"list-body-fields\">\n              <h5>\n              </h5>\n              <div>\n                <div *ngIf=\"referenceFieldsMap['member'] != parentItem\">\n                  <div *ngIf=\"fieldHasValue(detail['member'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                    <div><label>Member:</label></div>\n                    <div class=\"ml-3\">\n                      <a routerLink=\".\" (click)=\"onDisplayRefClicked('member', detail['member'], $event)\">\n                        {{detail['member']?detail['member']['valueMedium']:\"\"}}\n                      </a>\n                    </div>\n                  </div>\n                </div>\n                <div *ngIf=\"fieldHasValue(detail['grade'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Grade:</label></div>\n                  <div class=\"ml-3\">\n                    {{detail['grade']}}\n                  </div>\n                </div>\n                <div *ngIf=\"fieldHasValue(detail['team'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Team:</label></div>\n                  <div class=\"ml-3\">\n                    {{detail['team']}}\n                  </div>\n                </div>\n              </div>\n              <div class=\"d-flex flex-row mt-1\">\n                <div class=\"read-more mr-5\">\n                  <span class=\"pointer\" (click)=\"toggleShowDetailItem(i)\">\n                    <i *ngIf=\"!detail.mddsShowDetail\" class=\"fas fa-caret-down\" title=\"More\"></i>\n                    <i *ngIf=\"detail.mddsShowDetail\" class=\"fas fa-caret-up\" title=\"Less\"></i>\n                  </span>\n                </div>\n                <div class=\"read-more\" (click)=\"onDetailLinkClicked(detail['_id'])\"> Detail <i class=\"fas fa-arrow-right\"></i>\n                </div>\n              </div>\n              <div *ngIf=\"detail.mddsShowDetail\">\n                <app-additionalinfo-detail-sub [inputData]=\"detail['_id']\"></app-additionalinfo-detail-sub>\n              </div>\n            </div>\n          </div>\n        </div>\n        <hr class=\"list-devider\">\n      </div>\n    </div>\n  </div>\n  <div class=\"container\">\n    <div class=\"row justify-content-end mt-3\">\n    </div>\n    <div class=\"d-flex justify-content-between\">\n      <div>\n      </div>\n      <div>\n        <div class=\"total_counts\">\n          <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n        </div>\n      </div>\n    </div>\n    <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n      <div *ngIf=\"totalPages > 1\">\n        <ul class=\"pagination justify-content-center\">\n          <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n            <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n              <span aria-hidden=\"true\">&laquo;</span>\n              <span class=\"sr-only\">Previous</span>\n            </a>\n          </li>\n          <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n          <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n            <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n          </li>\n          <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n          <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n            <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n              <span aria-hidden=\"true\">&raquo;</span>\n              <span class=\"sr-only\">Next</span>\n            </a>\n          </li>\n        </ul>\n      </div>\n      <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n        <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n      </div>\n    </div>\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  AdditionalinfoListCustComponent\n} from '../../../membership-cust/base/additionalinfo/additionalinfo-list.cust.component';\nimport {\n  ViewType\n} from '../additionalinfo.component';\nimport {\n  AdditionalinfoService\n} from '../additionalinfo.service';\nimport {\n  ComponentFactoryResolver\n} from '@angular/core';\n@Component({\n  selector: 'app-additionalinfo-list',\n  templateUrl: './additionalinfo-list.component.html',\n  styleUrls: ['./additionalinfo-list.component.css']\n})\nexport class AdditionalinfoListComponent extends AdditionalinfoListCustComponent implements OnInit {\n  // @Input() options: any; {disableCatetory: false, disablePagination: false, disbleActionButtons: false\n  //                        disableListSearch: false, disableTitle: false, disableRefs: false\n  //                        disableListHead: false, disableTitleRow: false}\n  // @Input()\n  // public inputData:any;\n  // @Input()\n  // public searchObj:any;\n  // @Input()\n  // public queryParams: any;  // {listSortField: 'a', listSortOrder: 'asc' / 'desc', perPage: 6}\n  // @Input()\n  // public categoryBy:string; //field name whose value is used as category\n  constructor(public componentFactoryResolver: ComponentFactoryResolver, public additionalinfoService: AdditionalinfoService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(componentFactoryResolver, additionalinfoService, injector, router, route, location);\n    this.view = ViewType.LIST;\n    this.fieldDisplayNames = {\n      'member': 'Member',\n      'grade': 'Grade',\n      'team': 'Team',\n    };\n    this.enums['grade'] = ['8', '9', '10', '11', '12', 'other', ];\n    this.enums['team'] = ['Web Development', 'UI Design', ];\n    this.stringFields.push('grade');\n    this.stringFields.push('team');\n    this.referenceFields = ['member', ];\n    this.listViewFilter = 'table';\n    const listCategories = [];\n    this.listCategory1 = listCategories[0] || {};\n    this.listCategory2 = listCategories[1] || {};\n    this.itemMultiSelect = true;\n    // initialize detail structure for search\n    let detail = {};\n    this.detail = this.formatDetail(detail);\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    this.adjustListViewForWindowSize();\n    this.clickItemAction = typeof this.options.clickItemAction === 'undefined' ? this.clickItemAction : this.options.clickItemAction;\n    this.itemMultiSelect = typeof this.options.itemMultiSelect === 'boolean' ? this.options.itemMultiSelect : this.itemMultiSelect;\n    if (!this.options) {\n      this.options = {};\n    }\n    if (this.options.disableCatetory) {\n      this.listCategory1 = {}; // no do query based on category for home view;\n      this.listCategory2 = {}; // no do query based on category for home view;\n    }\n    // this is to initialize the detail that will be used for search condition selection\n    let detail = {};\n    if (this.searchObj) {\n      this.searchDetailReady = true; // search provided from \"detail\", not from search bar.\n      detail = this.searchObj;\n    }\n    if (this.queryParams) {\n      this.listSortField = this.queryParams.listSortField;\n      this.listSortOrder = this.queryParams.listSortOrder;\n      if (this.queryParams.perPage) {\n        this.perPage = this.queryParams.perPage\n      }\n    }\n    this.detail = this.formatDetail(detail);\n    this.searchList();\n    // get editHintFields\n    this.searchHintFieldValues();\n  }\n  static getInstance() {\n    //used by others to call some common functions\n    return new AdditionalinfoListComponent(null, null, null, null, null, null);\n  }\n}","<div class=\"mt-4 mb-4 d-flex\" *ngIf=\"!options['disableTitleRow']\">\n</div>\n<ul *ngIf=\"listCategory1.listCategoryField\" class=\"nav nav-pills category-nav\">\n  <li *ngFor=\"let ele of categoryDisplays; let idx = index;\" class=\"nav-item\">\n    <a *ngIf=\" listCategory1.showEmptyCategory || (!listCategory1.showEmptyCategory && categoriesCounts[idx] > 0)\" class=\"nav-link\" [ngClass]=\"{'active': idx === selectedCategory }\" [routerLink]=\"['.']\" queryParamsHandling=\"preserve\" (click)=\"categorySelected(idx)\">\n      {{ele}} <span *ngIf=\"listCategory1.showCategoryCounts\">({{categoriesCounts[idx]}})</span>\n    </a>\n  </li>\n</ul>\n<div>\n  <div *ngIf=\"!options['disableListHead']\" class=\"container search\">\n    <div class=\"row\" *ngIf=\"!options['disableListSearch']\">\n      <div class=\"col\">\n        <div class=\"input-group\">\n          <input type=\"search\" class=\"form-control border border-secondary\" id=\"additionalinfoTextSearch\" #additionalinfoTextSearch [(ngModel)]=\"searchText\" (search)=\"$event.target.blur();searchList();\" placeholder=\"Search for grade, team\">\n          <div *ngIf=\"searchText\" class=\"input-group-append icon-search-clear\">\n            <span>\n              <i class=\"fas fa-times-circle\" (click)=\"onSearchTextClear()\" title=\"Clear\"></i>\n            </span>\n          </div>\n          <div class=\"input-group-append\">\n            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"searchList()\"><i class=\"fas fa-search\"></i></button>\n          </div>\n        </div>\n        <div class=\"text-center\">\n          <span class=\"pointer\" (click)=\"toggleMoreSearch()\">\n            <span class=\"refine-search-text\">Refine Search &nbsp;</span>\n            <span>\n              <i *ngIf=\"!moreSearchOpened\" class=\"fas fa-plus-circle\" title=\"More\"></i>\n              <i *ngIf=\"moreSearchOpened\" class=\"fas fa-minus-circle\" title=\"Less\"></i>\n            </span>\n          </span>\n        </div>\n        <div class=\"shadow\" *ngIf=\"moreSearchOpened\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <div class=\"d-flex flex-wrap align-items-center\">\n                <div class=\"container two-column-search small\">\n                  <div class=\"row col-gutter align-items-center\">\n                    <div class=\"col-12 col-sm-3\">\n                      <label for=\"additionalinfoEditMember\"> Member </label>\n                    </div>\n                    <div class=\"col-11 col-sm-8\">\n                      <div class=\"input-group input-group-sm\">\n                        <input class=\"form-control form-control-sm rounded\" id=\"additionalinfoEditMember\" [ngClass]=\"{'pointer ref-badge': detail['member']['_id']}\" (focus)=\"onRefSelect('member')\" [ngModel]=\"detail['member']['valueMedium']\" name=\"additionalinfoEditMember\" #additionalinfoEditMember=\"ngModel\">\n                      </div>\n                      <!-- (focus)=\"detail['member']['_id']?onRefShow('member', 'select', detail['member']['_id']):onRefSelect('member')\" -->\n                    </div>\n                    <div class=\"col-1\">\n                      <div class=\"pointer\" (click)=\"clearValueFromDetail('member')\" *ngIf=\"checkValueDefinedFromDetail('member')\"><i class=\"fas fa-times-circle\" title=\"Clear\"></i></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <hr>\n              <div class=\"container one-column-search mt-3 small\">\n                <div class=\"row col-gutter\">\n                  <div class=\"col-4 col-sm-3\"><label for=\"Archived\">Archived</label></div>\n                  <div class=\"col-8 col-sm-8\">\n                    <label class=\"mr-1\">No</label>\n                    <label class=\"switch\">\n                      <input type=\"checkbox\" [(ngModel)]=\"detail['archived']\" #EditArchived=\"ngModel\">\n                      <span class=\"slider round\"></span>\n                    </label>\n                    <label class=\"ml-1\">Yes</label>\n                  </div>\n                </div>\n              </div>\n              <hr>\n              <div class=\"action-buttons\">\n                <button type=\"button\" class=\"btn btn-outline-success\" (click)=\"onSearchClear()\">Reset</button>\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"searchList()\">Search</button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div *ngIf=\"!moreSearchOpened\" style=\"text-align: left;\">\n          <span class=\"badge badge-pill badge-info\" *ngFor=\"let value of searchMoreDetail\">\n            <a (click)=\"toggleMoreSearch()\" class=\"pointer\"> {{value[0]}}: {{value[1]}}</a>\n            <i class=\"fas fa-times-circle icon-clear-badge\" (click)=\"clearValueFromDetailAndSearchList(value[2])\" title=\"Clear\"></i>\n          </span>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"!options['disableActionButtions']\">\n      <div class=\"col\">\n        <div class=\"action-buttons\">\n          <a [routerLink]=\"['../new' ]\" [skipLocationChange]=\"false\" class=\"btn btn-outline-primary\">Create</a>\n          <a routerLink=\".\" class=\"btn btn-outline-primary\" (click)=\"onDeleteSelected()\" [ngClass]=\"{'disabled': !isItemSelected()}\">Delete</a>\n          <a routerLink=\".\" class=\"btn btn-outline-primary\" (click)=\"onArchiveSelected()\" [ngClass]=\"{'disabled': !isItemSelected()}\">\n            <span *ngIf=\"!archivedSearch\">Archive</span>\n            <span *ngIf=\"archivedSearch\">Unarchive</span>\n          </a>\n        </div>\n      </div>\n    </div>\n    <hr />\n    <div *ngIf=\"!options['disablePagination']\">\n      <div class=\"row justify-content-end mt-3\">\n        <div *ngIf=\"list.length > 2\" class=\"sort-selection mr-5\">\n          <div class=\"dropdown\" style=\"width: 100%;\">\n            <button class=\"sort-dropdown btn btn-light btn-sm dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> Sort: <span *ngIf=\"listSortField && !viewHiddenFields.includes(listSortField)\">{{listSortFieldDisplay}}\n                <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up\"></i>\n                <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down\"></i>\n              </span>\n            </button>\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('member', 'Member', 'asc')\">Member<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('member', 'Member', 'desc')\">Member<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('grade', 'Grade', 'asc')\">Grade<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('grade', 'Grade', 'desc')\">Grade<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('team', 'Team', 'asc')\">Team<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('team', 'Team', 'desc')\">Team<i class=\"fas fa-arrow-down\"></i></a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-between\">\n        <div>\n          <div *ngIf=\"list.length > 0\">\n            <input type=\"radio\" name=\"view-filter\" id=\"table-view\" class=\"view-radio\" (click)=\"setListViewFilter('table')\" [checked]=\"isShowListView('table')\">\n            <label for=\"table-view\"><i class=\"fa fa-list-alt\"></i></label>\n            <input type=\"radio\" name=\"view-filter\" id=\"list-view\" class=\"view-radio\" (click)=\"setListViewFilter('list')\" [checked]=\"isShowListView('list')\">\n            <label for=\"list-view\"><i class=\"fa fa-th-list\"></i></label>\n            <input type=\"radio\" name=\"view-filter\" id=\"grid-view\" class=\"view-radio\" (click)=\"setListViewFilter('grid')\" [checked]=\"isShowListView('grid')\">\n            <label for=\"grid-view\"><i class=\"fa fa-th\"></i></label>\n          </div>\n        </div>\n        <div>\n          <div class=\"total_counts\">\n            <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n            <span *ngIf=\"list.length > 1\"><input type=\"checkbox\" class=\"ml-3 mr-1\" [(ngModel)]=\"checkAll\" (change)=\"onCheckAllChange()\">All</span>\n            <a class=\"ml-3\" routerLink=\".\" (click)=\"onRefresh()\"><i class=\"fa fa-sync-alt\"></i></a>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n        <div *ngIf=\"totalPages > 1\">\n          <ul class=\"pagination justify-content-center\">\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n                <span aria-hidden=\"true\">&laquo;</span>\n                <span class=\"sr-only\">Previous</span>\n              </a>\n            </li>\n            <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n            </li>\n            <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n                <span class=\"sr-only\">Next</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n          <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-records\" *ngIf=\"list.length === 0\">\n    <span *ngIf=\"loaded\">No records found.</span>\n    <span *ngIf=\"!loaded\">Loading...</span>\n  </div>\n  <div *ngIf=\"list.length > 0\">\n    <table *ngIf=\"isShowListView('table')\" class=\"table table-bordered table-hover\">\n      <thead class=\"thead-light\">\n        <tr>\n          <th scope=\"col\">#</th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('member', 'Member')\" *ngIf=\"referenceFieldsMap['member'] != parentItem\"> Member <span *ngIf=\"listSortField === 'member'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('grade', 'Grade')\"> Grade <span *ngIf=\"listSortField === 'grade'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('team', 'Team')\"> Team <span *ngIf=\"listSortField === 'team'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th scope=\"col\" style=\"width:12.8rem;\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        <ng-template ngFor let-detail [ngForOf]=\"list\" let-i=\"index\">\n          <tr [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i]}\">\n            <td scope=\"row\" (click)=\"clickOneItem(i)\" class=\"pointer read-more mt-3\">\n              {{(page-1)*perPage+i+1}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\" *ngIf=\"referenceFieldsMap['member'] != parentItem\">\n              <a routerLink=\".\" (click)=\"onDisplayRefClicked('member', detail['member'], $event)\">\n                {{detail['member']?detail['member']['valueMedium']:\"\"}}\n              </a>\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['grade']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['team']}}\n            </td>\n            <td>\n              <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n              <a routerLink=\".\" (click)=\"onDelete(detail['_id'], i)\"><i class=\"fas fa-trash-alt\" title=\"Delete\"></i></a>\n              <a routerLink=\".\" (click)=\"onArchive(detail['_id'], i, archivedSearch)\">\n                <i *ngIf=\"!archivedSearch\" class=\"fa fa-archive\" title=\"Archive\"></i>\n                <i *ngIf=\"archivedSearch\" class=\"fas fa-trash-restore\" title=\"Unarchive\"></i>\n              </a>\n              <input class=\"list-check-box\" type=\"checkbox\" [ngModel]=\"checkedItem[i]\" (click)=\"selectOneItem(i)\" />\n              <span class=\"read-more font-size-75 mt-3\" (click)=\"onDetailLinkClicked(detail['_id'])\">Detail <i class=\"fas fa-arrow-right\"></i></span>\n            </td>\n          </tr>\n        </ng-template>\n      </tbody>\n    </table>\n    <div class=\"listview\" *ngIf=\"isShowListView('list')\">\n      <div class=\"list-block\" *ngFor=\"let detail of list;  let i = index; let list_index = index;\">\n        <hr *ngIf=\"i==0\" class=\"list-devider\">\n        <div class=\"list-card text-left\" [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i],\n\t\t\t\t\t\t\t'clickable-card': clickItemAction}\">\n          <div class=\"list-fields\" [ngClass]=\"{pointer: clickItemAction}\" (click)=\"clickOneItem(i)\">\n            <div class=\"list-body-fields\">\n              <h5>\n              </h5>\n              <div>\n                <div *ngIf=\"referenceFieldsMap['member'] != parentItem\">\n                  <div *ngIf=\"fieldHasValue(detail['member'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                    <div><label>Member:</label></div>\n                    <div class=\"ml-3\">\n                      <a routerLink=\".\" (click)=\"onDisplayRefClicked('member', detail['member'], $event)\">\n                        {{detail['member']?detail['member']['valueMedium']:\"\"}}\n                      </a>\n                    </div>\n                  </div>\n                </div>\n                <div *ngIf=\"fieldHasValue(detail['grade'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Grade:</label></div>\n                  <div class=\"ml-3\">\n                    {{detail['grade']}}\n                  </div>\n                </div>\n                <div *ngIf=\"fieldHasValue(detail['team'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Team:</label></div>\n                  <div class=\"ml-3\">\n                    {{detail['team']}}\n                  </div>\n                </div>\n              </div>\n              <div class=\"d-flex flex-row mt-1\">\n                <div class=\"read-more\" (click)=\"onDetailLinkClicked(detail['_id'])\"> Detail <i class=\"fas fa-arrow-right\"></i>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"card-action-icons\">\n            <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n            <a [routerLink]=\"['.']\" (click)=\"onDelete(detail['_id'], i)\"><i class=\"fas fa-trash-alt\" title=\"Delete\"></i></a>\n            <a [routerLink]=\"['.']\" (click)=\"onArchive(detail['_id'], i, archivedSearch)\">\n              <i *ngIf=\"!archivedSearch\" class=\"fa fa-archive\" title=\"Archive\"></i>\n              <i *ngIf=\"archivedSearch\" class=\"fas fa-trash-restore\" title=\"Unarchive\"></i>\n            </a>\n            <input class=\"list-check-box\" type=\"checkbox\" [ngModel]=\"checkedItem[i]\" (click)=\"selectOneItem(i)\" />\n          </div>\n        </div>\n        <hr class=\"list-devider\">\n      </div>\n    </div>\n    <div class=\"gridview\" *ngIf=\"isShowListView('grid')\">\n      <div class=\"grid-block\" *ngFor=\"let detail of list;  let i = index; let list_index = index;\">\n        <div class=\"card text-left h-100\" [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i],\n\t\t\t\t\t\t\t'clickable-card': clickItemAction}\">\n          <div class=\"grid-fields\" [ngClass]=\"{pointer: clickItemAction}\" (click)=\"clickOneItem(i)\">\n            <div class=\"card-header grid-head\">\n              <div>\n                <h5>\n                </h5>\n              </div>\n            </div>\n            <div class=\"card-body\">\n              <div *ngIf=\"fieldHasValue(detail['member'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>Member:</label></div>\n                <div class=\"ml-3\">\n                  <a routerLink=\".\" (click)=\"onDisplayRefClicked('member', detail['member'], $event)\">\n                    {{detail['member']?detail['member']['valueMedium']:\"\"}}\n                  </a></div>\n              </div>\n              <div *ngIf=\"fieldHasValue(detail['grade'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>Grade:</label></div>\n                <div class=\"ml-3\">\n                  {{detail['grade']}}</div>\n              </div>\n              <div *ngIf=\"fieldHasValue(detail['team'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>Team:</label></div>\n                <div class=\"ml-3\">\n                  {{detail['team']}}</div>\n              </div>\n              <div class=\"read-more mt-1\" (click)=\"onDetailLinkClicked(detail['_id'])\"> Detail <i class=\"fas fa-arrow-right\"></i>\n              </div>\n            </div>\n          </div>\n          <div class=\"card-action-icons\">\n            <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n            <a routerLink=\".\" (click)=\"onDelete(detail['_id'], i)\"><i class=\"fas fa-trash-alt\" title=\"Delete\"></i></a>\n            <a routerLink=\".\" (click)=\"onArchive(detail['_id'], i, archivedSearch)\">\n              <i *ngIf=\"!archivedSearch\" class=\"fa fa-archive\" title=\"Archive\"></i>\n              <i *ngIf=\"archivedSearch\" class=\"fas fa-trash-restore\" title=\"Unarchive\"></i>\n            </a>\n            <input class=\"list-check-box\" type=\"checkbox\" [ngModel]=\"checkedItem[i]\" (click)=\"selectOneItem(i)\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"container\">\n    <div *ngIf=\"!options['disablePagination']\">\n      <div class=\"row justify-content-end mt-3\">\n      </div>\n      <div class=\"d-flex justify-content-between\">\n        <div>\n        </div>\n        <div>\n          <div class=\"total_counts\">\n            <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n        <div *ngIf=\"totalPages > 1\">\n          <ul class=\"pagination justify-content-center\">\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n                <span aria-hidden=\"true\">&laquo;</span>\n                <span class=\"sr-only\">Previous</span>\n              </a>\n            </li>\n            <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n            </li>\n            <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n                <span class=\"sr-only\">Next</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n          <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template membership-ref-select></ng-template>","import {\n  HttpClient\n} from '@angular/common/http';\nimport {\n  MddsBaseService\n} from '@hicoder/angular-core';\nconst servicePath = '/additionalinfo/';\nexport class AdditionalinfoBaseService extends MddsBaseService {\n  constructor(http: HttpClient, serverRootUrl: string) {\n    const serviceUrl = serverRootUrl + servicePath;\n    super(http, serviceUrl);\n  }\n}","import {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  MddsBaseComponent,\n  ViewType\n} from '@hicoder/angular-core';\nimport {\n  Component,\n  OnInit,\n  Injector,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  AdditionalinfoService\n} from './additionalinfo.service';\nconst itemCamelName = 'additionalInfo';\nexport {\n  ViewType\n};\nimport {\n  ViewChild\n} from '@angular/core';\nimport {\n  ComponentFactoryResolver\n} from '@angular/core';\nimport {\n  MembershipRefSelectDirective\n} from '../membership.component';\nimport {\n  MemberDetailSelComponent\n} from '../member/member-detail/member-detail-sel.component';\nimport {\n  MemberDetailPopComponent\n} from '../member/member-detail/member-detail-pop.component';\nimport {\n  MemberListSelectComponent\n} from '../member/member-list/member-list-select.component';\n@Component({\n  template: '',\n})\nexport class AdditionalinfoComponent extends MddsBaseComponent implements OnInit {\n  // *** common input fields\n  @Input()\n  public style: any; // {}\n  @Input()\n  public options: any; // {} uiOptions\n  @Input()\n  public searchObj: any;\n  // *** list component\n  @Input()\n  public inputData: any;\n  @Input()\n  public queryParams: any; // {listSortField: 'a', listSortOrder: 'asc' / 'desc', perPage: 6}\n  @Input()\n  public categoryBy: string; //field name whose value is used as category\n  // list-asso component\n  @Input('asso') public associationField: string;\n  // list select component\n  @Output() outputData: any;\n  // *** edit / create component\n  @Input()\n  public id: string;\n  @Input()\n  public cid: string; // copy id\n  @Input()\n  public initData: any; // some fields has data already. eg: {a: b}. Used for add\n  @Input()\n  public embeddedView: boolean;\n  @Input()\n  public embedMode: string; // parent to tell the action - create\n  @Output()\n  public doneData = new EventEmitter < boolean > ();\n  @Output()\n  public done = new EventEmitter < any > ();\n  // *** detail component\n  // @Input() \n  // public id:string;\n  @Input()\n  public disableActionButtions: boolean;\n  @Output()\n  public eventEmitter: EventEmitter < any > = new EventEmitter();\n  // detail sub component\n  // @Input() inputData;\n  // detail show field component\n  // @Input() id: string;\n  @Input() detailObj: any;\n  @Input() showFieldsStr: string;\n  // detail sel component\n  //@Input() inputData;\n  //@Output() outputData;\n  // detail pop component\n  // @Input() inputData;\n  // @Output() outputData;\n  public selectComponents = {\n    'member': {\n      'select-type': MemberListSelectComponent,\n      'select-detail-type': MemberDetailSelComponent,\n      'pop-detail-type': MemberDetailPopComponent,\n      'componentRef': null\n    },\n  }\n  @ViewChild(MembershipRefSelectDirective, {\n    static: true\n  }) refSelectDirective: MembershipRefSelectDirective;\n  constructor(public componentFactoryResolver: ComponentFactoryResolver, public additionalinfoService: AdditionalinfoService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(additionalinfoService, injector, router, route, location);\n    this.setItemNames(itemCamelName);\n    this.briefFieldsInfo = [];\n    this.briefFieldsInfo.push(['member', 'Member']);\n    this.briefFieldsInfo.push(['grade', 'Grade']);\n    this.briefFieldsInfo.push(['team', 'Team']);\n    this.referenceFieldsMap = {\n      'member': 'member',\n    };\n    this.referenceFieldsReverseMap = {\n      'member': 'member',\n    };\n    this.requiredFields = ['grade', 'team', 'guardianEmail', 'programmingSkill', 'designingSkill', 'githubExp', 'member', ];\n    this.emailFields = [\n      ['Guardian Email', 'guardianEmail'],\n    ];\n    this.schemaName = 'additionalinfo';\n    this.modulePath = 'membership';\n    this.indexFields = [];\n  }\n  ngOnInit() {\n    this.style = this.style || {};\n    this.options = this.options || {};\n  }\n}","import {\n  Injectable,\n  Inject,\n  OnDestroy,\n  SkipSelf\n} from '@angular/core';\nimport {\n  HttpClient\n} from '@angular/common/http';\nimport {\n  AdditionalinfoBaseService\n} from './additionalinfo.base.service';\nimport {\n  Membership_SERVER_ROOT_URI\n} from '../membership.tokens';\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdditionalinfoService extends AdditionalinfoBaseService implements OnDestroy {\n  constructor(http: HttpClient, @Inject(Membership_SERVER_ROOT_URI) private membershipServerRootUri: string) {\n    super(http, membershipServerRootUri);\n  }\n  ngOnDestroy() {}\n}","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  BoardComponent,\n  ViewType\n} from '../board.component';\nimport {\n  BoardService\n} from '../board.service';\n@Component({\n  selector: 'app-board-detail-field',\n  templateUrl: './board-detail-field.component.html',\n  styleUrls: ['./board-detail.component.css']\n})\nexport class BoardDetailFieldComponent extends BoardComponent\nimplements OnInit {\n  // @Input() id: string;\n  // @Input() detailObj: any;\n  // @Input() showFieldsStr: string;\n  showFields: string[];\n  constructor(public boardService: BoardService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(boardService, injector, router, route, location);\n    this.view = ViewType.DETAIL;\n    this.fieldDisplayNames = {\n      'name': 'Name',\n      'title': 'Title',\n      'photo': 'Photo',\n      'email': 'Email',\n      'order': 'Order',\n    };\n    this.stringFields.push('name');\n    this.stringFields.push('title');\n    this.stringFields.push('photo');\n    this.stringFields.push('email');\n    this.numberFields = ['order', ];\n  }\n  ngOnInit() {\n    if (!this.showFieldsStr) {\n      console.error(\"A field has to be given to show it.\");\n      return;\n    }\n    this.showFields = this.showFieldsStr.match(/\\S+/g);\n    if (this.detailObj) {\n      this.onDetailReturned(this.detailObj, null);\n    } else {\n      if (!this.id) this.id = this.id;\n      if (this.id) this.populateDetail(this.id);\n      else {\n        console.error(\"No id provided to show info\");\n        return;\n      }\n    }\n  }\n}","<div *ngIf=\"detail && showFields.includes('name')\">\n  {{detail['name']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('title')\">\n  {{detail['title']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('photo')\">\n  <lib-mdds-file-display [downloadUrl]=\"detail['photo']\" [isLarge]=\"false\" [aspectRatio]=\"\"></lib-mdds-file-display>\n</div>\n<div *ngIf=\"detail && showFields.includes('email')\">\n  {{detail['email']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('order')\">\n  {{detail['order']}}\n</div>","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  BoardDetailCustComponent\n} from '../../../membership-cust/base/board/board-detail.cust.component';\nimport {\n  ViewType\n} from '../board.component';\nimport {\n  BoardService\n} from '../board.service';\n@Component({\n  selector: 'app-board-detail',\n  templateUrl: './board-detail.component.html',\n  styleUrls: ['./board-detail.component.css']\n})\nexport class BoardDetailComponent extends BoardDetailCustComponent implements OnInit, AfterViewInit {\n  // @Input() \n  // public id:string;\n  // @Input()\n  // public searchObj:any;\n  // @Input()\n  // public disableActionButtions:boolean;\n  // @Output()\n  // public eventEmitter: EventEmitter<any> = new EventEmitter();\n  constructor(public boardService: BoardService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(boardService, injector, router, route, location);\n    this.view = ViewType.DETAIL;\n    this.fieldDisplayNames = {\n      'name': 'Name',\n      'title': 'Title',\n      'photo': 'Photo',\n      'email': 'Email',\n      'order': 'Order',\n    };\n    this.stringFields.push('name');\n    this.stringFields.push('title');\n    this.stringFields.push('photo');\n    this.stringFields.push('email');\n    this.numberFields = ['order', ];\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    if (!this.id) this.id = this.route.snapshot.paramMap.get('id');\n    if (this.id) {\n      this.populateDetail(this.id);\n    } else if (this.searchObj) {\n      // search item based on the unique value\n      this.populateDetailByFields(this.searchObj);\n    } else {\n      console.error(\"Routing error for detail view... no id...\");\n      return;\n    }\n  }\n  ngAfterViewInit() {}\n}","<div class=\"detail\" *ngIf=\"detail\">\n  <div *ngIf=\"!options['disableActionButtions']\">\n    <div *ngIf=\"!disableActionButtions && !options['disableActionButtions']\" class=\"action-buttons\">\n      <a *ngIf=\"!options['disableActionList']\" routerLink=\"../../list\" class=\"action-go-list\"><i class=\"fas fa-list\" title=\"List\"></i><!--  span>&nbsp;&nbsp;{{ItemCamelName}} List</span--></a>\n      <a *ngIf=\"!options['disableActionEdit']\" [routerLink]=\"['../../edit', detail['_id'] ]\" [skipLocationChange]=\"false\" class=\"btn btn-outline-primary\">Edit</a>\n      <a *ngIf=\"!options['disableActionNew']\" [routerLink]=\"['../../new']\" [queryParams]=\"{cid: detail['_id']}\" [skipLocationChange]=\"false\" class=\"btn btn-outline-primary\">New</a>\n      <a *ngIf=\"!options['disableActionDelete']\" routerLink=\".\" class=\"btn btn-outline-primary\" (click)=\"onDelete(detail['_id'], null)\">Delete</a>\n      <a *ngIf=\"!options['disableActionArchive']\" routerLink=\".\" class=\"btn btn-outline-primary\" (click)=\"onArchive(detail['_id'], null, detail['archived'])\">\n        <ng-template [ngIf]=\"!detail['archived']\">Archive</ng-template>\n        <ng-template [ngIf]=\"detail['archived']\">Unarchive</ng-template>\n      </a>\n    </div>\n  </div>\n  <div class=\"card text-left transparent-border \">\n    <div class=\"grid-fields\">\n      <div class=\"card-header grid-head\">\n        <div class=\"grid-head-picture\">\n          <lib-mdds-file-display [downloadUrl]=\"detail['photo']\" [isLarge]=\"false\" [aspectRatio]=\"\"></lib-mdds-file-display>\n        </div>\n        <div class=\"ml-1\">\n          <h5>\n            <div class=\"mr-1 d-inline-block\">\n              {{detail['name']}}\n            </div>\n          </h5>\n        </div>\n      </div>\n      <div class=\"card-body\">\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Title:</label></div>\n            <div class=\"ml-3\">\n              {{detail['title']}}</div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Email:</label></div>\n            <div class=\"ml-3\">\n              {{detail['email']}}</div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Order:</label></div>\n            <div class=\"ml-3\">\n              {{detail['order']}}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"!options['disablePipeline']\">\n  </div>\n  <div *ngIf=\"!options['disableRefLink']\">\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  Directive,\n  EventEmitter\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\ndeclare const $: any;\nimport {\n  BoardEditCustComponent\n} from '../../../membership-cust/base/board/board-edit.cust.component';\nimport {\n  ViewType\n} from '../board.component';\nimport {\n  BoardService\n} from '../board.service';\nimport {\n  NG_VALIDATORS,\n  Validator,\n  ValidationErrors,\n  AbstractControl,\n  FormGroup\n} from '@angular/forms';\n@Directive({\n  selector: '[membershipBoardDirectiveEmail]',\n  providers: [{\n    provide: NG_VALIDATORS,\n    useExisting: MembershipBoardDirectiveEmail,\n    multi: true\n  }]\n})\nexport class MembershipBoardDirectiveEmail implements Validator {\n  validators: any[] = [{\n    validator: function(email) {\n      var re = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n      return re.test(email)\n    },\n    msg: `Please fill a valid email address.`\n  }, ];\n  validate(control: AbstractControl): ValidationErrors | null {\n    //TODO: For validator of NgModelGroup, need to get list of contained controls and do validation on the combined data.\n    let value = control.value;\n    return this.validateValue(value);\n  }\n  validateValue(value: any): ValidationErrors | null {\n    //only compare when input presents\n    let result = true;\n    if (typeof value == 'string') {\n      for (let idx = 0; idx < this.validators.length; idx++) {\n        let obj = this.validators[idx];\n        try {\n          result = obj.validator(value)\n          if (result == false) return {\n            'membershipBoardDirectiveEmail': obj.msg\n          };\n        } catch (e) {\n          return {\n            'membershipBoardDirectiveEmail': obj.msg\n          };\n        }\n      }\n    }\n    return null;\n  }\n}\n@Component({\n  selector: 'app-board-edit',\n  templateUrl: './board-edit.component.html',\n  styleUrls: ['./board-edit.component.css']\n})\nexport class BoardEditComponent extends BoardEditCustComponent implements OnInit, AfterViewInit {\n  // @Input() \n  // public id: string;\n  // @Input()\n  // public cid: string; // copy id\n  // @Input()\n  // public initData: any; // some fields has data already. eg: {a: b}. Used for add\n  // @Output()\n  // public doneData = new EventEmitter<boolean>();\n  // @Output()\n  // public done = new EventEmitter<any>();\n  // @Input()\n  // public embeddedView: boolean;\n  // @Input()\n  // public embedMode: string; // parent to tell the action - create\n  public action: string;\n  public minDate = {\n    year: (new Date()).getFullYear() - 100,\n    month: 1,\n    day: 1\n  };\n  constructor(public boardService: BoardService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(boardService, injector, router, route, location);\n    this.view = ViewType.EDIT;\n    this.fieldDisplayNames = {\n      'name': 'Name',\n      'title': 'Title',\n      'photo': 'Photo',\n      'email': 'Email',\n      'order': 'Order',\n    };\n    this.stringFields.push('name');\n    this.stringFields.push('title');\n    this.stringFields.push('photo');\n    this.stringFields.push('email');\n    this.numberFields = ['order', ];\n    const detail = {};\n    this.detail = this.formatDetail(detail);\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.embedMode == 'create') { // parent ask to create\n      this.action = 'Create';\n      this.getDetailData();\n    } else {\n      if (!this.id) this.id = this.route.snapshot.paramMap.get('id');\n      if (this.id) {\n        this.action = 'Edit';\n        this.populateDetailForAction(this.id, 'edit'); //populate with action as 'edit'\n      } else {\n        this.action = 'Create';\n        if (!this.cid) this.cid = this.route.snapshot.queryParamMap.get('cid');\n        if (this.cid) {\n          this.populateDetailFromCopy(this.cid);\n        } else {\n          this.getDetailData();\n        }\n      }\n    }\n    // get editHintFields\n    this.searchHintFieldValues();\n  }\n  ngAfterViewInit() {\n    // Initialize all tooltips\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n  getDetailData() {\n    if (this.initData) {\n      this.action = 'Add';\n      let detail = {};\n      for (let prop of Object.keys(this.initData)) {\n        detail[prop] = this.initData[prop];\n        this.hiddenFields.push(prop);\n      }\n      this.detail = this.formatDetail(detail);\n    } else {\n      let detail = {};\n      this.detail = this.formatDetail(detail);\n    }\n  }\n}","<div class=\"edit\" *ngIf=\"detail\">\n  <div class=\"card\" style=\"text-align: left;\">\n    <div class=\"card-body\">\n      <h4 class=\"card-title\" *ngIf=\"!embeddedView && !options['title']\">{{action}} Board Members</h4>\n      <h4 class=\"card-title\" *ngIf=\"options['title']\" [ngStyle]=\"style['card-title']\">\n        {{options['title']}}\n      </h4>\n      <p *ngIf=\"options['subtitle']\" [ngStyle]=\"style['card-subtitle']\">\n        {{options['subtitle']}}\n      </p>\n      <form (ngSubmit)=\"onSubmit()\" #editForm=\"ngForm\">\n        <ng-template [ngIf]=\"action == 'Edit'\">\n          <ng-template [ngIf]=\"!hiddenFields.includes('name')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditName\">Name</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditName\" required [(ngModel)]=\"detail['name']\" name=\"EditName\" #EditName=\"ngModel\">\n                <div *ngIf=\"detail['name']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('name')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditName.valid || EditName.pristine || EditName.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditName.errors && EditName.errors.required\"> Name is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('title')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditTitle\">Title</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditTitle\" required [(ngModel)]=\"detail['title']\" name=\"EditTitle\" #EditTitle=\"ngModel\">\n                <div *ngIf=\"detail['title']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('title')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditTitle.valid || EditTitle.pristine || EditTitle.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditTitle.errors && EditTitle.errors.required\"> Title is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('photo')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditPhoto\">Photo</label>\n              <div class=\"form-check\" [ngClass]=\"{'ng-valid': detail['photo'],\n                            'ng-invalid': !detail['photo']}\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditPhoto\" style=\"display: none;\" required [(ngModel)]=\"detail['photo']\" name=\"EditPhoto\" #EditPhoto=\"ngModel\">\n                <div style=\"display: inline-block; width: 80%;\">\n                  <lib-mdds-file-select [(downloadUrl)]=\"detail['photo']\" [aspectRatio]=\"\"></lib-mdds-file-select>\n                </div>\n                <span *ngIf=\"detail['photo']\" class=\"icon-clear\" (click)=\"clearValueFromDetail('photo')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </span>\n              </div>\n              <div [hidden]=\"EditPhoto.valid || EditPhoto.pristine\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditPhoto.errors && EditPhoto.errors.required\"> Photo is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('email')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditEmail\">Email</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditEmail\" required membershipBoardDirectiveEmail=\"\" [(ngModel)]=\"detail['email']\" name=\"EditEmail\" #EditEmail=\"ngModel\">\n                <div *ngIf=\"detail['email']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('email')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditEmail.valid || EditEmail.pristine || EditEmail.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditEmail.errors && EditEmail.errors.required\"> Email is required. </div>\n                <div *ngIf=\"EditEmail.errors && EditEmail.errors.membershipBoardDirectiveEmail\">\n                  {{EditEmail.errors.membershipBoardDirectiveEmail}}\n                </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('order')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditOrder\">Order</label>\n              <input type=\"number\" class=\"form-control\" id=\"EditOrder\" required [(ngModel)]=\"detail['order']\" name=\"EditOrder\" #EditOrder=\"ngModel\">\n              <div [hidden]=\"EditOrder.valid || EditOrder.pristine || EditOrder.errors.libMddsMinNumber\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditOrder.errors && EditOrder.errors.required\"> Order is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n        </ng-template>\n        <ng-template [ngIf]=\"action == 'Create' || action == 'Add' \">\n          <ng-template [ngIf]=\"!hiddenFields.includes('name')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditName\">Name</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditName\" required [(ngModel)]=\"detail['name']\" name=\"EditName\" #EditName=\"ngModel\">\n                <div *ngIf=\"detail['name']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('name')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditName.valid || EditName.pristine || EditName.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditName.errors && EditName.errors.required\"> Name is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('title')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditTitle\">Title</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditTitle\" required [(ngModel)]=\"detail['title']\" name=\"EditTitle\" #EditTitle=\"ngModel\">\n                <div *ngIf=\"detail['title']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('title')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditTitle.valid || EditTitle.pristine || EditTitle.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditTitle.errors && EditTitle.errors.required\"> Title is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('photo')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditPhoto\">Photo</label>\n              <div class=\"form-check\" [ngClass]=\"{'ng-valid': detail['photo'],\n                            'ng-invalid': !detail['photo']}\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditPhoto\" style=\"display: none;\" required [(ngModel)]=\"detail['photo']\" name=\"EditPhoto\" #EditPhoto=\"ngModel\">\n                <div style=\"display: inline-block; width: 80%;\">\n                  <lib-mdds-file-select [(downloadUrl)]=\"detail['photo']\" [aspectRatio]=\"\"></lib-mdds-file-select>\n                </div>\n                <span *ngIf=\"detail['photo']\" class=\"icon-clear\" (click)=\"clearValueFromDetail('photo')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </span>\n              </div>\n              <div [hidden]=\"EditPhoto.valid || EditPhoto.pristine\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditPhoto.errors && EditPhoto.errors.required\"> Photo is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('email')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditEmail\">Email</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditEmail\" required membershipBoardDirectiveEmail=\"\" [(ngModel)]=\"detail['email']\" name=\"EditEmail\" #EditEmail=\"ngModel\">\n                <div *ngIf=\"detail['email']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('email')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditEmail.valid || EditEmail.pristine || EditEmail.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditEmail.errors && EditEmail.errors.required\"> Email is required. </div>\n                <div *ngIf=\"EditEmail.errors && EditEmail.errors.membershipBoardDirectiveEmail\">\n                  {{EditEmail.errors.membershipBoardDirectiveEmail}}\n                </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('order')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditOrder\">Order</label>\n              <input type=\"number\" class=\"form-control\" id=\"EditOrder\" required [(ngModel)]=\"detail['order']\" name=\"EditOrder\" #EditOrder=\"ngModel\">\n              <div [hidden]=\"EditOrder.valid || EditOrder.pristine || EditOrder.errors.libMddsMinNumber\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditOrder.errors && EditOrder.errors.required\"> Order is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n        </ng-template>\n        <div class=\"action-buttons-center\">\n          <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!editForm.form.valid\">Submit</button>\n          <button *ngIf=\"!options['disableCancel']\" class=\"btn btn-outline-success\" type=\"button\" (click)=\"editCancel()\">Cancel</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  BoardListCustComponent\n} from '../../../membership-cust/base/board/board-list.cust.component';\nimport {\n  ViewType\n} from '../board.component';\nimport {\n  BoardService\n} from '../board.service';\n@Component({\n  selector: 'app-board-list',\n  templateUrl: './board-list.component.html',\n  styleUrls: ['./board-list.component.css']\n})\nexport class BoardListComponent extends BoardListCustComponent implements OnInit {\n  // @Input() options: any; {disableCatetory: false, disablePagination: false, disbleActionButtons: false\n  //                        disableListSearch: false, disableTitle: false, disableRefs: false\n  //                        disableListHead: false, disableTitleRow: false}\n  // @Input()\n  // public inputData:any;\n  // @Input()\n  // public searchObj:any;\n  // @Input()\n  // public queryParams: any;  // {listSortField: 'a', listSortOrder: 'asc' / 'desc', perPage: 6}\n  // @Input()\n  // public categoryBy:string; //field name whose value is used as category\n  constructor(public boardService: BoardService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(boardService, injector, router, route, location);\n    this.view = ViewType.LIST;\n    this.fieldDisplayNames = {\n      'name': 'Name',\n      'title': 'Title',\n      'photo': 'Photo',\n      'email': 'Email',\n      'order': 'Order',\n    };\n    this.stringFields.push('name');\n    this.stringFields.push('title');\n    this.stringFields.push('photo');\n    this.stringFields.push('email');\n    this.numberFields = ['order', ];\n    this.listViewFilter = 'list';\n    this.setListSort('order', 'Order', 'asc');\n    const listCategories = [];\n    this.listCategory1 = listCategories[0] || {};\n    this.listCategory2 = listCategories[1] || {};\n    this.clickItemAction = 'detail';\n    this.itemMultiSelect = true;\n    // initialize detail structure for search\n    let detail = {};\n    this.detail = this.formatDetail(detail);\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    this.adjustListViewForWindowSize();\n    this.clickItemAction = typeof this.options.clickItemAction === 'undefined' ? this.clickItemAction : this.options.clickItemAction;\n    this.itemMultiSelect = typeof this.options.itemMultiSelect === 'boolean' ? this.options.itemMultiSelect : this.itemMultiSelect;\n    if (!this.options) {\n      this.options = {};\n    }\n    if (this.options.disableCatetory) {\n      this.listCategory1 = {}; // no do query based on category for home view;\n      this.listCategory2 = {}; // no do query based on category for home view;\n    }\n    // this is to initialize the detail that will be used for search condition selection\n    let detail = {};\n    if (this.searchObj) {\n      this.searchDetailReady = true; // search provided from \"detail\", not from search bar.\n      detail = this.searchObj;\n    }\n    if (this.queryParams) {\n      this.listSortField = this.queryParams.listSortField;\n      this.listSortOrder = this.queryParams.listSortOrder;\n      if (this.queryParams.perPage) {\n        this.perPage = this.queryParams.perPage\n      }\n    }\n    this.detail = this.formatDetail(detail);\n    this.searchList();\n    // get editHintFields\n    this.searchHintFieldValues();\n  }\n  static getInstance() {\n    //used by others to call some common functions\n    return new BoardListComponent(null, null, null, null, null);\n  }\n}","<div class=\"mt-4 mb-4 d-flex\" *ngIf=\"!options['disableTitleRow']\">\n</div>\n<ul *ngIf=\"listCategory1.listCategoryField\" class=\"nav nav-pills category-nav\">\n  <li *ngFor=\"let ele of categoryDisplays; let idx = index;\" class=\"nav-item\">\n    <a *ngIf=\" listCategory1.showEmptyCategory || (!listCategory1.showEmptyCategory && categoriesCounts[idx] > 0)\" class=\"nav-link\" [ngClass]=\"{'active': idx === selectedCategory }\" [routerLink]=\"['.']\" queryParamsHandling=\"preserve\" (click)=\"categorySelected(idx)\">\n      {{ele}} <span *ngIf=\"listCategory1.showCategoryCounts\">({{categoriesCounts[idx]}})</span>\n    </a>\n  </li>\n</ul>\n<div>\n  <div *ngIf=\"!options['disableListHead']\" class=\"container search\">\n    <div class=\"row\" *ngIf=\"!options['disableListSearch']\">\n      <div class=\"col\">\n        <div class=\"input-group\">\n          <input type=\"search\" class=\"form-control border border-secondary\" id=\"boardTextSearch\" #boardTextSearch [(ngModel)]=\"searchText\" (search)=\"$event.target.blur();searchList();\" placeholder=\"Search for name, title, email\">\n          <div *ngIf=\"searchText\" class=\"input-group-append icon-search-clear\">\n            <span>\n              <i class=\"fas fa-times-circle\" (click)=\"onSearchTextClear()\" title=\"Clear\"></i>\n            </span>\n          </div>\n          <div class=\"input-group-append\">\n            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"searchList()\"><i class=\"fas fa-search\"></i></button>\n          </div>\n        </div>\n        <div class=\"text-center\">\n          <span class=\"pointer\" (click)=\"toggleMoreSearch()\">\n            <span class=\"refine-search-text\">Refine Search &nbsp;</span>\n            <span>\n              <i *ngIf=\"!moreSearchOpened\" class=\"fas fa-plus-circle\" title=\"More\"></i>\n              <i *ngIf=\"moreSearchOpened\" class=\"fas fa-minus-circle\" title=\"Less\"></i>\n            </span>\n          </span>\n        </div>\n        <div class=\"shadow\" *ngIf=\"moreSearchOpened\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <div class=\"d-flex flex-wrap align-items-center\">\n                <div class=\"container two-column-search small\">\n                  <div class=\"row col-gutter align-items-center\">\n                    <div class=\"col-12 col-sm-3\">\n                      <label for=\"boardEditOrder\"> Order </label>\n                    </div>\n                    <div class=\"col-11 col-sm-8\">\n                      <div class=\"input-group input-group-sm align-items-center\">\n                        <input type=\"number\" class=\"form-control form-control-sm\" id=\"boardEditOrder\" [(ngModel)]=\"detail['__mra_order_from']\" name=\"boardEditOrder\" #boardEditOrder=\"ngModel\">\n                        <span>&nbsp; ~ &nbsp;</span>\n                        <input type=\"number\" class=\"form-control form-control-sm\" id=\"boardEditOrder\" [(ngModel)]=\"detail['__mra_order_to']\" name=\"boardEditOrder\" #boardEditOrder=\"ngModel\">\n                      </div>\n                    </div>\n                    <div class=\"col-1\">\n                      <div class=\"pointer\" (click)=\"clearValueFromDetail('order')\" *ngIf=\"checkValueDefinedFromDetail('order')\"><i class=\"fas fa-times-circle\" title=\"Clear\"></i></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <hr>\n              <div class=\"container one-column-search mt-3 small\">\n                <div class=\"row col-gutter\">\n                  <div class=\"col-4 col-sm-3\"><label for=\"Archived\">Archived</label></div>\n                  <div class=\"col-8 col-sm-8\">\n                    <label class=\"mr-1\">No</label>\n                    <label class=\"switch\">\n                      <input type=\"checkbox\" [(ngModel)]=\"detail['archived']\" #EditArchived=\"ngModel\">\n                      <span class=\"slider round\"></span>\n                    </label>\n                    <label class=\"ml-1\">Yes</label>\n                  </div>\n                </div>\n              </div>\n              <hr>\n              <div class=\"action-buttons\">\n                <button type=\"button\" class=\"btn btn-outline-success\" (click)=\"onSearchClear()\">Reset</button>\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"searchList()\">Search</button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div *ngIf=\"!moreSearchOpened\" style=\"text-align: left;\">\n          <span class=\"badge badge-pill badge-info\" *ngFor=\"let value of searchMoreDetail\">\n            <a (click)=\"toggleMoreSearch()\" class=\"pointer\"> {{value[0]}}: {{value[1]}}</a>\n            <i class=\"fas fa-times-circle icon-clear-badge\" (click)=\"clearValueFromDetailAndSearchList(value[2])\" title=\"Clear\"></i>\n          </span>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"!options['disableActionButtions']\">\n      <div class=\"col\">\n        <div class=\"action-buttons\">\n          <a [routerLink]=\"['../new' ]\" [skipLocationChange]=\"false\" class=\"btn btn-outline-primary\">Create</a>\n          <a routerLink=\".\" class=\"btn btn-outline-primary\" (click)=\"onDeleteSelected()\" [ngClass]=\"{'disabled': !isItemSelected()}\">Delete</a>\n          <a routerLink=\".\" class=\"btn btn-outline-primary\" (click)=\"onArchiveSelected()\" [ngClass]=\"{'disabled': !isItemSelected()}\">\n            <span *ngIf=\"!archivedSearch\">Archive</span>\n            <span *ngIf=\"archivedSearch\">Unarchive</span>\n          </a>\n        </div>\n      </div>\n    </div>\n    <hr />\n    <div *ngIf=\"!options['disablePagination']\">\n      <div class=\"row justify-content-end mt-3\">\n        <div *ngIf=\"list.length > 2\" class=\"sort-selection mr-5\">\n          <div class=\"dropdown\" style=\"width: 100%;\">\n            <button class=\"sort-dropdown btn btn-light btn-sm dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> Sort: <span *ngIf=\"listSortField && !viewHiddenFields.includes(listSortField)\">{{listSortFieldDisplay}}\n                <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up\"></i>\n                <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down\"></i>\n              </span>\n            </button>\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('name', 'Name', 'asc')\">Name<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('name', 'Name', 'desc')\">Name<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('title', 'Title', 'asc')\">Title<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('title', 'Title', 'desc')\">Title<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('email', 'Email', 'asc')\">Email<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('email', 'Email', 'desc')\">Email<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('order', 'Order', 'asc')\">Order<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('order', 'Order', 'desc')\">Order<i class=\"fas fa-arrow-down\"></i></a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-between\">\n        <div>\n          <div *ngIf=\"list.length > 0\">\n            <input type=\"radio\" name=\"view-filter\" id=\"list-view\" class=\"view-radio\" (click)=\"setListViewFilter('list')\" [checked]=\"isShowListView('list')\">\n            <label for=\"list-view\"><i class=\"fa fa-th-list\"></i></label>\n            <input type=\"radio\" name=\"view-filter\" id=\"grid-view\" class=\"view-radio\" (click)=\"setListViewFilter('grid')\" [checked]=\"isShowListView('grid')\">\n            <label for=\"grid-view\"><i class=\"fa fa-th\"></i></label>\n            <input type=\"radio\" name=\"view-filter\" id=\"table-view\" class=\"view-radio\" (click)=\"setListViewFilter('table')\" [checked]=\"isShowListView('table')\">\n            <label for=\"table-view\"><i class=\"fa fa-list-alt\"></i></label>\n          </div>\n        </div>\n        <div>\n          <div class=\"total_counts\">\n            <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n            <span *ngIf=\"list.length > 1\"><input type=\"checkbox\" class=\"ml-3 mr-1\" [(ngModel)]=\"checkAll\" (change)=\"onCheckAllChange()\">All</span>\n            <a class=\"ml-3\" routerLink=\".\" (click)=\"onRefresh()\"><i class=\"fa fa-sync-alt\"></i></a>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n        <div *ngIf=\"totalPages > 1\">\n          <ul class=\"pagination justify-content-center\">\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n                <span aria-hidden=\"true\">&laquo;</span>\n                <span class=\"sr-only\">Previous</span>\n              </a>\n            </li>\n            <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n            </li>\n            <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n                <span class=\"sr-only\">Next</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n          <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-records\" *ngIf=\"list.length === 0\">\n    <span *ngIf=\"loaded\">No records found.</span>\n    <span *ngIf=\"!loaded\">Loading...</span>\n  </div>\n  <div *ngIf=\"list.length > 0\">\n    <div class=\"listview\" *ngIf=\"isShowListView('list')\">\n      <div class=\"list-block\" *ngFor=\"let detail of list;  let i = index; let list_index = index;\">\n        <hr *ngIf=\"i==0\" class=\"list-devider\">\n        <div class=\"list-card text-left\" [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i],\n\t\t\t\t\t\t\t'clickable-card': clickItemAction}\">\n          <div class=\"list-fields\" [ngClass]=\"{pointer: clickItemAction}\" (click)=\"clickOneItem(i)\">\n            <div class=\"list-head-picture\">\n              <lib-mdds-file-display [downloadUrl]=\"detail['photo']\" [isLarge]=\"false\" [aspectRatio]=\"\"></lib-mdds-file-display>\n            </div>\n            <div class=\"list-body-fields\">\n              <h5>\n                <div class=\"mr-1 d-inline-block\">\n                  {{detail['name']}}\n                </div>\n              </h5>\n              <div>\n                <div *ngIf=\"fieldHasValue(detail['title'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Title:</label></div>\n                  <div class=\"ml-3\">\n                    {{detail['title']}}\n                  </div>\n                </div>\n                <div *ngIf=\"fieldHasValue(detail['email'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Email:</label></div>\n                  <div class=\"ml-3\">\n                    {{detail['email']}}\n                  </div>\n                </div>\n                <div *ngIf=\"fieldHasValue(detail['order'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Order:</label></div>\n                  <div class=\"ml-3\">\n                    {{detail['order']}}\n                  </div>\n                </div>\n              </div>\n              <div class=\"d-flex flex-row mt-1\">\n              </div>\n            </div>\n          </div>\n          <div class=\"card-action-icons\">\n            <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n            <a [routerLink]=\"['.']\" (click)=\"onDelete(detail['_id'], i)\"><i class=\"fas fa-trash-alt\" title=\"Delete\"></i></a>\n            <a [routerLink]=\"['.']\" (click)=\"onArchive(detail['_id'], i, archivedSearch)\">\n              <i *ngIf=\"!archivedSearch\" class=\"fa fa-archive\" title=\"Archive\"></i>\n              <i *ngIf=\"archivedSearch\" class=\"fas fa-trash-restore\" title=\"Unarchive\"></i>\n            </a>\n            <input class=\"list-check-box\" type=\"checkbox\" [ngModel]=\"checkedItem[i]\" (click)=\"selectOneItem(i)\" />\n          </div>\n        </div>\n        <hr class=\"list-devider\">\n      </div>\n    </div>\n    <div class=\"gridview\" *ngIf=\"isShowListView('grid')\">\n      <div class=\"grid-block\" *ngFor=\"let detail of list;  let i = index; let list_index = index;\">\n        <div class=\"card text-left h-100\" [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i],\n\t\t\t\t\t\t\t'clickable-card': clickItemAction}\">\n          <div class=\"grid-fields\" [ngClass]=\"{pointer: clickItemAction}\" (click)=\"clickOneItem(i)\">\n            <div class=\"card-header grid-head\">\n              <div class=\"grid-head-picture\">\n                <lib-mdds-file-display [downloadUrl]=\"detail['photo']\" [isLarge]=\"false\" [aspectRatio]=\"\"></lib-mdds-file-display>\n              </div>\n              <div>\n                <h5>\n                  <div class=\"mr-1 d-inline-block\">\n                    {{detail['name']}}\n                  </div>\n                </h5>\n              </div>\n            </div>\n            <div class=\"card-body\">\n              <div *ngIf=\"fieldHasValue(detail['title'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>Title:</label></div>\n                <div class=\"ml-3\">\n                  {{detail['title']}}</div>\n              </div>\n              <div *ngIf=\"fieldHasValue(detail['email'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>Email:</label></div>\n                <div class=\"ml-3\">\n                  {{detail['email']}}</div>\n              </div>\n              <div *ngIf=\"fieldHasValue(detail['order'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>Order:</label></div>\n                <div class=\"ml-3\">\n                  {{detail['order']}}</div>\n              </div>\n            </div>\n          </div>\n          <div class=\"card-action-icons\">\n            <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n            <a routerLink=\".\" (click)=\"onDelete(detail['_id'], i)\"><i class=\"fas fa-trash-alt\" title=\"Delete\"></i></a>\n            <a routerLink=\".\" (click)=\"onArchive(detail['_id'], i, archivedSearch)\">\n              <i *ngIf=\"!archivedSearch\" class=\"fa fa-archive\" title=\"Archive\"></i>\n              <i *ngIf=\"archivedSearch\" class=\"fas fa-trash-restore\" title=\"Unarchive\"></i>\n            </a>\n            <input class=\"list-check-box\" type=\"checkbox\" [ngModel]=\"checkedItem[i]\" (click)=\"selectOneItem(i)\" />\n          </div>\n        </div>\n      </div>\n    </div>\n    <table *ngIf=\"isShowListView('table')\" class=\"table table-bordered table-hover\">\n      <thead class=\"thead-light\">\n        <tr>\n          <th scope=\"col\">#</th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('name', 'Name')\"> Name <span *ngIf=\"listSortField === 'name'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('title', 'Title')\"> Title <span *ngIf=\"listSortField === 'title'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th scope=\"col\"> Photo </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('email', 'Email')\"> Email <span *ngIf=\"listSortField === 'email'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('order', 'Order')\"> Order <span *ngIf=\"listSortField === 'order'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th scope=\"col\" style=\"width:9.8rem;\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        <ng-template ngFor let-detail [ngForOf]=\"list\" let-i=\"index\">\n          <tr [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i]}\">\n            <td scope=\"row\" (click)=\"clickOneItem(i)\" class=\"pointer read-more mt-3\">\n              {{(page-1)*perPage+i+1}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['name']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['title']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              <lib-mdds-file-display [downloadUrl]=\"detail['photo']\" [isLarge]=\"false\" [aspectRatio]=\"\"></lib-mdds-file-display>\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['email']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['order']}}\n            </td>\n            <td>\n              <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n              <a routerLink=\".\" (click)=\"onDelete(detail['_id'], i)\"><i class=\"fas fa-trash-alt\" title=\"Delete\"></i></a>\n              <a routerLink=\".\" (click)=\"onArchive(detail['_id'], i, archivedSearch)\">\n                <i *ngIf=\"!archivedSearch\" class=\"fa fa-archive\" title=\"Archive\"></i>\n                <i *ngIf=\"archivedSearch\" class=\"fas fa-trash-restore\" title=\"Unarchive\"></i>\n              </a>\n              <input class=\"list-check-box\" type=\"checkbox\" [ngModel]=\"checkedItem[i]\" (click)=\"selectOneItem(i)\" />\n            </td>\n          </tr>\n        </ng-template>\n      </tbody>\n    </table>\n  </div>\n  <div class=\"container\">\n    <div *ngIf=\"!options['disablePagination']\">\n      <div class=\"row justify-content-end mt-3\">\n      </div>\n      <div class=\"d-flex justify-content-between\">\n        <div>\n        </div>\n        <div>\n          <div class=\"total_counts\">\n            <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n        <div *ngIf=\"totalPages > 1\">\n          <ul class=\"pagination justify-content-center\">\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n                <span aria-hidden=\"true\">&laquo;</span>\n                <span class=\"sr-only\">Previous</span>\n              </a>\n            </li>\n            <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n            </li>\n            <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n                <span class=\"sr-only\">Next</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n          <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import {\n  HttpClient\n} from '@angular/common/http';\nimport {\n  MddsBaseService\n} from '@hicoder/angular-core';\nconst servicePath = '/board/';\nexport class BoardBaseService extends MddsBaseService {\n  constructor(http: HttpClient, serverRootUrl: string) {\n    const serviceUrl = serverRootUrl + servicePath;\n    super(http, serviceUrl);\n  }\n}","import {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  MddsBaseComponent,\n  ViewType\n} from '@hicoder/angular-core';\nimport {\n  Component,\n  OnInit,\n  Injector,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  BoardService\n} from './board.service';\nconst itemCamelName = 'board Members';\nexport {\n  ViewType\n};\n@Component({\n  template: '',\n})\nexport class BoardComponent extends MddsBaseComponent implements OnInit {\n  // *** common input fields\n  @Input()\n  public style: any; // {}\n  @Input()\n  public options: any; // {} uiOptions\n  @Input()\n  public searchObj: any;\n  // *** list component\n  @Input()\n  public inputData: any;\n  @Input()\n  public queryParams: any; // {listSortField: 'a', listSortOrder: 'asc' / 'desc', perPage: 6}\n  @Input()\n  public categoryBy: string; //field name whose value is used as category\n  // list-asso component\n  @Input('asso') public associationField: string;\n  // list select component\n  @Output() outputData: any;\n  // *** edit / create component\n  @Input()\n  public id: string;\n  @Input()\n  public cid: string; // copy id\n  @Input()\n  public initData: any; // some fields has data already. eg: {a: b}. Used for add\n  @Input()\n  public embeddedView: boolean;\n  @Input()\n  public embedMode: string; // parent to tell the action - create\n  @Output()\n  public doneData = new EventEmitter < boolean > ();\n  @Output()\n  public done = new EventEmitter < any > ();\n  // *** detail component\n  // @Input() \n  // public id:string;\n  @Input()\n  public disableActionButtions: boolean;\n  @Output()\n  public eventEmitter: EventEmitter < any > = new EventEmitter();\n  // detail sub component\n  // @Input() inputData;\n  // detail show field component\n  // @Input() id: string;\n  @Input() detailObj: any;\n  @Input() showFieldsStr: string;\n  // detail sel component\n  //@Input() inputData;\n  //@Output() outputData;\n  // detail pop component\n  // @Input() inputData;\n  // @Output() outputData;\n  constructor(public boardService: BoardService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(boardService, injector, router, route, location);\n    this.setItemNames(itemCamelName);\n    this.briefFieldsInfo = [];\n    this.briefFieldsInfo.push(['name', 'Name']);\n    this.briefFieldsInfo.push(['title', 'Title']);\n    this.briefFieldsInfo.push(['photo', 'Photo']);\n    this.briefFieldsInfo.push(['email', 'Email']);\n    this.briefFieldsInfo.push(['order', 'Order']);\n    this.requiredFields = ['name', 'title', 'photo', 'email', 'order', ];\n    this.emailFields = [\n      ['Email', 'email'],\n    ];\n    this.schemaName = 'board';\n    this.modulePath = 'membership';\n    this.indexFields = ['name', ];\n  }\n  ngOnInit() {\n    this.style = this.style || {};\n    this.options = this.options || {};\n  }\n}","import {\n  Injectable,\n  Inject,\n  OnDestroy,\n  SkipSelf\n} from '@angular/core';\nimport {\n  HttpClient\n} from '@angular/common/http';\nimport {\n  BoardBaseService\n} from './board.base.service';\nimport {\n  Membership_SERVER_ROOT_URI\n} from '../membership.tokens';\n@Injectable({\n  providedIn: 'root',\n})\nexport class BoardService extends BoardBaseService implements OnDestroy {\n  constructor(http: HttpClient, @Inject(Membership_SERVER_ROOT_URI) private membershipServerRootUri: string) {\n    super(http, membershipServerRootUri);\n  }\n  ngOnDestroy() {}\n}","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  LeadComponent,\n  ViewType\n} from '../lead.component';\nimport {\n  LeadService\n} from '../lead.service';\n@Component({\n  selector: 'app-lead-detail-field',\n  templateUrl: './lead-detail-field.component.html',\n  styleUrls: ['./lead-detail.component.css']\n})\nexport class LeadDetailFieldComponent extends LeadComponent\nimplements OnInit {\n  // @Input() id: string;\n  // @Input() detailObj: any;\n  // @Input() showFieldsStr: string;\n  showFields: string[];\n  constructor(public leadService: LeadService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(leadService, injector, router, route, location);\n    this.view = ViewType.DETAIL;\n    this.fieldDisplayNames = {\n      'name': 'Name',\n      'title': 'Title',\n      'photo': 'Photo',\n      'email': 'Email',\n      'order': 'Order',\n    };\n    this.stringFields.push('name');\n    this.stringFields.push('title');\n    this.stringFields.push('photo');\n    this.stringFields.push('email');\n    this.numberFields = ['order', ];\n  }\n  ngOnInit() {\n    if (!this.showFieldsStr) {\n      console.error(\"A field has to be given to show it.\");\n      return;\n    }\n    this.showFields = this.showFieldsStr.match(/\\S+/g);\n    if (this.detailObj) {\n      this.onDetailReturned(this.detailObj, null);\n    } else {\n      if (!this.id) this.id = this.id;\n      if (this.id) this.populateDetail(this.id);\n      else {\n        console.error(\"No id provided to show info\");\n        return;\n      }\n    }\n  }\n}","<div *ngIf=\"detail && showFields.includes('name')\">\n  {{detail['name']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('title')\">\n  {{detail['title']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('photo')\">\n  <lib-mdds-file-display [downloadUrl]=\"detail['photo']\" [isLarge]=\"false\" [aspectRatio]=\"\"></lib-mdds-file-display>\n</div>\n<div *ngIf=\"detail && showFields.includes('email')\">\n  {{detail['email']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('order')\">\n  {{detail['order']}}\n</div>","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  LeadDetailCustComponent\n} from '../../../membership-cust/base/lead/lead-detail.cust.component';\nimport {\n  ViewType\n} from '../lead.component';\nimport {\n  LeadService\n} from '../lead.service';\n@Component({\n  selector: 'app-lead-detail',\n  templateUrl: './lead-detail.component.html',\n  styleUrls: ['./lead-detail.component.css']\n})\nexport class LeadDetailComponent extends LeadDetailCustComponent implements OnInit, AfterViewInit {\n  // @Input() \n  // public id:string;\n  // @Input()\n  // public searchObj:any;\n  // @Input()\n  // public disableActionButtions:boolean;\n  // @Output()\n  // public eventEmitter: EventEmitter<any> = new EventEmitter();\n  constructor(public leadService: LeadService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(leadService, injector, router, route, location);\n    this.view = ViewType.DETAIL;\n    this.fieldDisplayNames = {\n      'name': 'Name',\n      'title': 'Title',\n      'photo': 'Photo',\n      'email': 'Email',\n      'order': 'Order',\n    };\n    this.stringFields.push('name');\n    this.stringFields.push('title');\n    this.stringFields.push('photo');\n    this.stringFields.push('email');\n    this.numberFields = ['order', ];\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    if (!this.id) this.id = this.route.snapshot.paramMap.get('id');\n    if (this.id) {\n      this.populateDetail(this.id);\n    } else if (this.searchObj) {\n      // search item based on the unique value\n      this.populateDetailByFields(this.searchObj);\n    } else {\n      console.error(\"Routing error for detail view... no id...\");\n      return;\n    }\n  }\n  ngAfterViewInit() {}\n}","<div class=\"detail\" *ngIf=\"detail\">\n  <div *ngIf=\"!options['disableActionButtions']\">\n    <div *ngIf=\"!disableActionButtions && !options['disableActionButtions']\" class=\"action-buttons\">\n      <a *ngIf=\"!options['disableActionList']\" routerLink=\"../../list\" class=\"action-go-list\"><i class=\"fas fa-list\" title=\"List\"></i><!--  span>&nbsp;&nbsp;{{ItemCamelName}} List</span--></a>\n      <a *ngIf=\"!options['disableActionEdit']\" [routerLink]=\"['../../edit', detail['_id'] ]\" [skipLocationChange]=\"false\" class=\"btn btn-outline-primary\">Edit</a>\n      <a *ngIf=\"!options['disableActionNew']\" [routerLink]=\"['../../new']\" [queryParams]=\"{cid: detail['_id']}\" [skipLocationChange]=\"false\" class=\"btn btn-outline-primary\">New</a>\n      <a *ngIf=\"!options['disableActionDelete']\" routerLink=\".\" class=\"btn btn-outline-primary\" (click)=\"onDelete(detail['_id'], null)\">Delete</a>\n      <a *ngIf=\"!options['disableActionArchive']\" routerLink=\".\" class=\"btn btn-outline-primary\" (click)=\"onArchive(detail['_id'], null, detail['archived'])\">\n        <ng-template [ngIf]=\"!detail['archived']\">Archive</ng-template>\n        <ng-template [ngIf]=\"detail['archived']\">Unarchive</ng-template>\n      </a>\n    </div>\n  </div>\n  <div class=\"card text-left transparent-border \">\n    <div class=\"grid-fields\">\n      <div class=\"card-header grid-head\">\n        <div class=\"grid-head-picture\">\n          <lib-mdds-file-display [downloadUrl]=\"detail['photo']\" [isLarge]=\"false\" [aspectRatio]=\"\"></lib-mdds-file-display>\n        </div>\n        <div class=\"ml-1\">\n          <h5>\n            <div class=\"mr-1 d-inline-block\">\n              {{detail['name']}}\n            </div>\n          </h5>\n        </div>\n      </div>\n      <div class=\"card-body\">\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Title:</label></div>\n            <div class=\"ml-3\">\n              {{detail['title']}}</div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Email:</label></div>\n            <div class=\"ml-3\">\n              {{detail['email']}}</div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Order:</label></div>\n            <div class=\"ml-3\">\n              {{detail['order']}}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"!options['disablePipeline']\">\n  </div>\n  <div *ngIf=\"!options['disableRefLink']\">\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  Directive,\n  EventEmitter\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\ndeclare const $: any;\nimport {\n  LeadEditCustComponent\n} from '../../../membership-cust/base/lead/lead-edit.cust.component';\nimport {\n  ViewType\n} from '../lead.component';\nimport {\n  LeadService\n} from '../lead.service';\nimport {\n  NG_VALIDATORS,\n  Validator,\n  ValidationErrors,\n  AbstractControl,\n  FormGroup\n} from '@angular/forms';\n@Directive({\n  selector: '[membershipLeadDirectiveEmail]',\n  providers: [{\n    provide: NG_VALIDATORS,\n    useExisting: MembershipLeadDirectiveEmail,\n    multi: true\n  }]\n})\nexport class MembershipLeadDirectiveEmail implements Validator {\n  validators: any[] = [{\n    validator: function(email) {\n      var re = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n      return re.test(email)\n    },\n    msg: `Please fill a valid email address.`\n  }, ];\n  validate(control: AbstractControl): ValidationErrors | null {\n    //TODO: For validator of NgModelGroup, need to get list of contained controls and do validation on the combined data.\n    let value = control.value;\n    return this.validateValue(value);\n  }\n  validateValue(value: any): ValidationErrors | null {\n    //only compare when input presents\n    let result = true;\n    if (typeof value == 'string') {\n      for (let idx = 0; idx < this.validators.length; idx++) {\n        let obj = this.validators[idx];\n        try {\n          result = obj.validator(value)\n          if (result == false) return {\n            'membershipLeadDirectiveEmail': obj.msg\n          };\n        } catch (e) {\n          return {\n            'membershipLeadDirectiveEmail': obj.msg\n          };\n        }\n      }\n    }\n    return null;\n  }\n}\n@Component({\n  selector: 'app-lead-edit',\n  templateUrl: './lead-edit.component.html',\n  styleUrls: ['./lead-edit.component.css']\n})\nexport class LeadEditComponent extends LeadEditCustComponent implements OnInit, AfterViewInit {\n  // @Input() \n  // public id: string;\n  // @Input()\n  // public cid: string; // copy id\n  // @Input()\n  // public initData: any; // some fields has data already. eg: {a: b}. Used for add\n  // @Output()\n  // public doneData = new EventEmitter<boolean>();\n  // @Output()\n  // public done = new EventEmitter<any>();\n  // @Input()\n  // public embeddedView: boolean;\n  // @Input()\n  // public embedMode: string; // parent to tell the action - create\n  public action: string;\n  public minDate = {\n    year: (new Date()).getFullYear() - 100,\n    month: 1,\n    day: 1\n  };\n  constructor(public leadService: LeadService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(leadService, injector, router, route, location);\n    this.view = ViewType.EDIT;\n    this.fieldDisplayNames = {\n      'name': 'Name',\n      'title': 'Title',\n      'photo': 'Photo',\n      'email': 'Email',\n      'order': 'Order',\n    };\n    this.stringFields.push('name');\n    this.stringFields.push('title');\n    this.stringFields.push('photo');\n    this.stringFields.push('email');\n    this.numberFields = ['order', ];\n    const detail = {};\n    this.detail = this.formatDetail(detail);\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.embedMode == 'create') { // parent ask to create\n      this.action = 'Create';\n      this.getDetailData();\n    } else {\n      if (!this.id) this.id = this.route.snapshot.paramMap.get('id');\n      if (this.id) {\n        this.action = 'Edit';\n        this.populateDetailForAction(this.id, 'edit'); //populate with action as 'edit'\n      } else {\n        this.action = 'Create';\n        if (!this.cid) this.cid = this.route.snapshot.queryParamMap.get('cid');\n        if (this.cid) {\n          this.populateDetailFromCopy(this.cid);\n        } else {\n          this.getDetailData();\n        }\n      }\n    }\n    // get editHintFields\n    this.searchHintFieldValues();\n  }\n  ngAfterViewInit() {\n    // Initialize all tooltips\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n  getDetailData() {\n    if (this.initData) {\n      this.action = 'Add';\n      let detail = {};\n      for (let prop of Object.keys(this.initData)) {\n        detail[prop] = this.initData[prop];\n        this.hiddenFields.push(prop);\n      }\n      this.detail = this.formatDetail(detail);\n    } else {\n      let detail = {};\n      this.detail = this.formatDetail(detail);\n    }\n  }\n}","<div class=\"edit\" *ngIf=\"detail\">\n  <div class=\"card\" style=\"text-align: left;\">\n    <div class=\"card-body\">\n      <h4 class=\"card-title\" *ngIf=\"!embeddedView && !options['title']\">{{action}} Team Leads</h4>\n      <h4 class=\"card-title\" *ngIf=\"options['title']\" [ngStyle]=\"style['card-title']\">\n        {{options['title']}}\n      </h4>\n      <p *ngIf=\"options['subtitle']\" [ngStyle]=\"style['card-subtitle']\">\n        {{options['subtitle']}}\n      </p>\n      <form (ngSubmit)=\"onSubmit()\" #editForm=\"ngForm\">\n        <ng-template [ngIf]=\"action == 'Edit'\">\n          <ng-template [ngIf]=\"!hiddenFields.includes('name')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditName\">Name</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditName\" required [(ngModel)]=\"detail['name']\" name=\"EditName\" #EditName=\"ngModel\">\n                <div *ngIf=\"detail['name']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('name')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditName.valid || EditName.pristine || EditName.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditName.errors && EditName.errors.required\"> Name is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('title')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditTitle\">Title</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditTitle\" required [(ngModel)]=\"detail['title']\" name=\"EditTitle\" #EditTitle=\"ngModel\">\n                <div *ngIf=\"detail['title']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('title')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditTitle.valid || EditTitle.pristine || EditTitle.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditTitle.errors && EditTitle.errors.required\"> Title is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('photo')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditPhoto\">Photo</label>\n              <div class=\"form-check\" [ngClass]=\"{'ng-valid': detail['photo'],\n                            'ng-invalid': !detail['photo']}\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditPhoto\" style=\"display: none;\" required [(ngModel)]=\"detail['photo']\" name=\"EditPhoto\" #EditPhoto=\"ngModel\">\n                <div style=\"display: inline-block; width: 80%;\">\n                  <lib-mdds-file-select [(downloadUrl)]=\"detail['photo']\" [aspectRatio]=\"\"></lib-mdds-file-select>\n                </div>\n                <span *ngIf=\"detail['photo']\" class=\"icon-clear\" (click)=\"clearValueFromDetail('photo')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </span>\n              </div>\n              <div [hidden]=\"EditPhoto.valid || EditPhoto.pristine\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditPhoto.errors && EditPhoto.errors.required\"> Photo is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('email')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditEmail\">Email</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditEmail\" required membershipLeadDirectiveEmail=\"\" [(ngModel)]=\"detail['email']\" name=\"EditEmail\" #EditEmail=\"ngModel\">\n                <div *ngIf=\"detail['email']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('email')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditEmail.valid || EditEmail.pristine || EditEmail.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditEmail.errors && EditEmail.errors.required\"> Email is required. </div>\n                <div *ngIf=\"EditEmail.errors && EditEmail.errors.membershipLeadDirectiveEmail\">\n                  {{EditEmail.errors.membershipLeadDirectiveEmail}}\n                </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('order')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditOrder\">Order</label>\n              <input type=\"number\" class=\"form-control\" id=\"EditOrder\" required [(ngModel)]=\"detail['order']\" name=\"EditOrder\" #EditOrder=\"ngModel\">\n              <div [hidden]=\"EditOrder.valid || EditOrder.pristine || EditOrder.errors.libMddsMinNumber\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditOrder.errors && EditOrder.errors.required\"> Order is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n        </ng-template>\n        <ng-template [ngIf]=\"action == 'Create' || action == 'Add' \">\n          <ng-template [ngIf]=\"!hiddenFields.includes('name')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditName\">Name</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditName\" required [(ngModel)]=\"detail['name']\" name=\"EditName\" #EditName=\"ngModel\">\n                <div *ngIf=\"detail['name']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('name')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditName.valid || EditName.pristine || EditName.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditName.errors && EditName.errors.required\"> Name is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('title')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditTitle\">Title</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditTitle\" required [(ngModel)]=\"detail['title']\" name=\"EditTitle\" #EditTitle=\"ngModel\">\n                <div *ngIf=\"detail['title']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('title')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditTitle.valid || EditTitle.pristine || EditTitle.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditTitle.errors && EditTitle.errors.required\"> Title is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('photo')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditPhoto\">Photo</label>\n              <div class=\"form-check\" [ngClass]=\"{'ng-valid': detail['photo'],\n                            'ng-invalid': !detail['photo']}\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditPhoto\" style=\"display: none;\" required [(ngModel)]=\"detail['photo']\" name=\"EditPhoto\" #EditPhoto=\"ngModel\">\n                <div style=\"display: inline-block; width: 80%;\">\n                  <lib-mdds-file-select [(downloadUrl)]=\"detail['photo']\" [aspectRatio]=\"\"></lib-mdds-file-select>\n                </div>\n                <span *ngIf=\"detail['photo']\" class=\"icon-clear\" (click)=\"clearValueFromDetail('photo')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </span>\n              </div>\n              <div [hidden]=\"EditPhoto.valid || EditPhoto.pristine\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditPhoto.errors && EditPhoto.errors.required\"> Photo is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('email')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditEmail\">Email</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditEmail\" required membershipLeadDirectiveEmail=\"\" [(ngModel)]=\"detail['email']\" name=\"EditEmail\" #EditEmail=\"ngModel\">\n                <div *ngIf=\"detail['email']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('email')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditEmail.valid || EditEmail.pristine || EditEmail.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditEmail.errors && EditEmail.errors.required\"> Email is required. </div>\n                <div *ngIf=\"EditEmail.errors && EditEmail.errors.membershipLeadDirectiveEmail\">\n                  {{EditEmail.errors.membershipLeadDirectiveEmail}}\n                </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('order')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditOrder\">Order</label>\n              <input type=\"number\" class=\"form-control\" id=\"EditOrder\" required [(ngModel)]=\"detail['order']\" name=\"EditOrder\" #EditOrder=\"ngModel\">\n              <div [hidden]=\"EditOrder.valid || EditOrder.pristine || EditOrder.errors.libMddsMinNumber\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditOrder.errors && EditOrder.errors.required\"> Order is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n        </ng-template>\n        <div class=\"action-buttons-center\">\n          <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!editForm.form.valid\">Submit</button>\n          <button *ngIf=\"!options['disableCancel']\" class=\"btn btn-outline-success\" type=\"button\" (click)=\"editCancel()\">Cancel</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  LeadListCustComponent\n} from '../../../membership-cust/base/lead/lead-list.cust.component';\nimport {\n  ViewType\n} from '../lead.component';\nimport {\n  LeadService\n} from '../lead.service';\n@Component({\n  selector: 'app-lead-list',\n  templateUrl: './lead-list.component.html',\n  styleUrls: ['./lead-list.component.css']\n})\nexport class LeadListComponent extends LeadListCustComponent implements OnInit {\n  // @Input() options: any; {disableCatetory: false, disablePagination: false, disbleActionButtons: false\n  //                        disableListSearch: false, disableTitle: false, disableRefs: false\n  //                        disableListHead: false, disableTitleRow: false}\n  // @Input()\n  // public inputData:any;\n  // @Input()\n  // public searchObj:any;\n  // @Input()\n  // public queryParams: any;  // {listSortField: 'a', listSortOrder: 'asc' / 'desc', perPage: 6}\n  // @Input()\n  // public categoryBy:string; //field name whose value is used as category\n  constructor(public leadService: LeadService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(leadService, injector, router, route, location);\n    this.view = ViewType.LIST;\n    this.fieldDisplayNames = {\n      'name': 'Name',\n      'title': 'Title',\n      'photo': 'Photo',\n      'email': 'Email',\n      'order': 'Order',\n    };\n    this.stringFields.push('name');\n    this.stringFields.push('title');\n    this.stringFields.push('photo');\n    this.stringFields.push('email');\n    this.numberFields = ['order', ];\n    this.listViewFilter = 'list';\n    this.setListSort('order', 'Order', 'asc');\n    const listCategories = [];\n    this.listCategory1 = listCategories[0] || {};\n    this.listCategory2 = listCategories[1] || {};\n    this.clickItemAction = 'detail';\n    this.itemMultiSelect = true;\n    // initialize detail structure for search\n    let detail = {};\n    this.detail = this.formatDetail(detail);\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    this.adjustListViewForWindowSize();\n    this.clickItemAction = typeof this.options.clickItemAction === 'undefined' ? this.clickItemAction : this.options.clickItemAction;\n    this.itemMultiSelect = typeof this.options.itemMultiSelect === 'boolean' ? this.options.itemMultiSelect : this.itemMultiSelect;\n    if (!this.options) {\n      this.options = {};\n    }\n    if (this.options.disableCatetory) {\n      this.listCategory1 = {}; // no do query based on category for home view;\n      this.listCategory2 = {}; // no do query based on category for home view;\n    }\n    // this is to initialize the detail that will be used for search condition selection\n    let detail = {};\n    if (this.searchObj) {\n      this.searchDetailReady = true; // search provided from \"detail\", not from search bar.\n      detail = this.searchObj;\n    }\n    if (this.queryParams) {\n      this.listSortField = this.queryParams.listSortField;\n      this.listSortOrder = this.queryParams.listSortOrder;\n      if (this.queryParams.perPage) {\n        this.perPage = this.queryParams.perPage\n      }\n    }\n    this.detail = this.formatDetail(detail);\n    this.searchList();\n    // get editHintFields\n    this.searchHintFieldValues();\n  }\n  static getInstance() {\n    //used by others to call some common functions\n    return new LeadListComponent(null, null, null, null, null);\n  }\n}","<div class=\"mt-4 mb-4 d-flex\" *ngIf=\"!options['disableTitleRow']\">\n  <div class=\"list-title\" *ngIf=\"!options['disableTitle']\">Team Leads</div>\n</div>\n<ul *ngIf=\"listCategory1.listCategoryField\" class=\"nav nav-pills category-nav\">\n  <li *ngFor=\"let ele of categoryDisplays; let idx = index;\" class=\"nav-item\">\n    <a *ngIf=\" listCategory1.showEmptyCategory || (!listCategory1.showEmptyCategory && categoriesCounts[idx] > 0)\" class=\"nav-link\" [ngClass]=\"{'active': idx === selectedCategory }\" [routerLink]=\"['.']\" queryParamsHandling=\"preserve\" (click)=\"categorySelected(idx)\">\n      {{ele}} <span *ngIf=\"listCategory1.showCategoryCounts\">({{categoriesCounts[idx]}})</span>\n    </a>\n  </li>\n</ul>\n<div>\n  <div *ngIf=\"!options['disableListHead']\" class=\"container search\">\n    <div class=\"row\" *ngIf=\"!options['disableListSearch']\">\n      <div class=\"col\">\n        <div class=\"input-group\">\n          <input type=\"search\" class=\"form-control border border-secondary\" id=\"leadTextSearch\" #leadTextSearch [(ngModel)]=\"searchText\" (search)=\"$event.target.blur();searchList();\" placeholder=\"Search for name, title, email\">\n          <div *ngIf=\"searchText\" class=\"input-group-append icon-search-clear\">\n            <span>\n              <i class=\"fas fa-times-circle\" (click)=\"onSearchTextClear()\" title=\"Clear\"></i>\n            </span>\n          </div>\n          <div class=\"input-group-append\">\n            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"searchList()\"><i class=\"fas fa-search\"></i></button>\n          </div>\n        </div>\n        <div class=\"text-center\">\n          <span class=\"pointer\" (click)=\"toggleMoreSearch()\">\n            <span class=\"refine-search-text\">Refine Search &nbsp;</span>\n            <span>\n              <i *ngIf=\"!moreSearchOpened\" class=\"fas fa-plus-circle\" title=\"More\"></i>\n              <i *ngIf=\"moreSearchOpened\" class=\"fas fa-minus-circle\" title=\"Less\"></i>\n            </span>\n          </span>\n        </div>\n        <div class=\"shadow\" *ngIf=\"moreSearchOpened\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <div class=\"d-flex flex-wrap align-items-center\">\n                <div class=\"container two-column-search small\">\n                  <div class=\"row col-gutter align-items-center\">\n                    <div class=\"col-12 col-sm-3\">\n                      <label for=\"leadEditOrder\"> Order </label>\n                    </div>\n                    <div class=\"col-11 col-sm-8\">\n                      <div class=\"input-group input-group-sm align-items-center\">\n                        <input type=\"number\" class=\"form-control form-control-sm\" id=\"leadEditOrder\" [(ngModel)]=\"detail['__mra_order_from']\" name=\"leadEditOrder\" #leadEditOrder=\"ngModel\">\n                        <span>&nbsp; ~ &nbsp;</span>\n                        <input type=\"number\" class=\"form-control form-control-sm\" id=\"leadEditOrder\" [(ngModel)]=\"detail['__mra_order_to']\" name=\"leadEditOrder\" #leadEditOrder=\"ngModel\">\n                      </div>\n                    </div>\n                    <div class=\"col-1\">\n                      <div class=\"pointer\" (click)=\"clearValueFromDetail('order')\" *ngIf=\"checkValueDefinedFromDetail('order')\"><i class=\"fas fa-times-circle\" title=\"Clear\"></i></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <hr>\n              <div class=\"container one-column-search mt-3 small\">\n                <div class=\"row col-gutter\">\n                  <div class=\"col-4 col-sm-3\"><label for=\"Archived\">Archived</label></div>\n                  <div class=\"col-8 col-sm-8\">\n                    <label class=\"mr-1\">No</label>\n                    <label class=\"switch\">\n                      <input type=\"checkbox\" [(ngModel)]=\"detail['archived']\" #EditArchived=\"ngModel\">\n                      <span class=\"slider round\"></span>\n                    </label>\n                    <label class=\"ml-1\">Yes</label>\n                  </div>\n                </div>\n              </div>\n              <hr>\n              <div class=\"action-buttons\">\n                <button type=\"button\" class=\"btn btn-outline-success\" (click)=\"onSearchClear()\">Reset</button>\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"searchList()\">Search</button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div *ngIf=\"!moreSearchOpened\" style=\"text-align: left;\">\n          <span class=\"badge badge-pill badge-info\" *ngFor=\"let value of searchMoreDetail\">\n            <a (click)=\"toggleMoreSearch()\" class=\"pointer\"> {{value[0]}}: {{value[1]}}</a>\n            <i class=\"fas fa-times-circle icon-clear-badge\" (click)=\"clearValueFromDetailAndSearchList(value[2])\" title=\"Clear\"></i>\n          </span>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"!options['disableActionButtions']\">\n      <div class=\"col\">\n        <div class=\"action-buttons\">\n          <a [routerLink]=\"['../new' ]\" [skipLocationChange]=\"false\" class=\"btn btn-outline-primary\">Create</a>\n          <a routerLink=\".\" class=\"btn btn-outline-primary\" (click)=\"onDeleteSelected()\" [ngClass]=\"{'disabled': !isItemSelected()}\">Delete</a>\n          <a routerLink=\".\" class=\"btn btn-outline-primary\" (click)=\"onArchiveSelected()\" [ngClass]=\"{'disabled': !isItemSelected()}\">\n            <span *ngIf=\"!archivedSearch\">Archive</span>\n            <span *ngIf=\"archivedSearch\">Unarchive</span>\n          </a>\n        </div>\n      </div>\n    </div>\n    <hr />\n    <div *ngIf=\"!options['disablePagination']\">\n      <div class=\"row justify-content-end mt-3\">\n        <div *ngIf=\"list.length > 2\" class=\"sort-selection mr-5\">\n          <div class=\"dropdown\" style=\"width: 100%;\">\n            <button class=\"sort-dropdown btn btn-light btn-sm dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> Sort: <span *ngIf=\"listSortField && !viewHiddenFields.includes(listSortField)\">{{listSortFieldDisplay}}\n                <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up\"></i>\n                <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down\"></i>\n              </span>\n            </button>\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('name', 'Name', 'asc')\">Name<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('name', 'Name', 'desc')\">Name<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('title', 'Title', 'asc')\">Title<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('title', 'Title', 'desc')\">Title<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('email', 'Email', 'asc')\">Email<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('email', 'Email', 'desc')\">Email<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('order', 'Order', 'asc')\">Order<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('order', 'Order', 'desc')\">Order<i class=\"fas fa-arrow-down\"></i></a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-between\">\n        <div>\n          <div *ngIf=\"list.length > 0\">\n            <input type=\"radio\" name=\"view-filter\" id=\"list-view\" class=\"view-radio\" (click)=\"setListViewFilter('list')\" [checked]=\"isShowListView('list')\">\n            <label for=\"list-view\"><i class=\"fa fa-th-list\"></i></label>\n            <input type=\"radio\" name=\"view-filter\" id=\"grid-view\" class=\"view-radio\" (click)=\"setListViewFilter('grid')\" [checked]=\"isShowListView('grid')\">\n            <label for=\"grid-view\"><i class=\"fa fa-th\"></i></label>\n            <input type=\"radio\" name=\"view-filter\" id=\"table-view\" class=\"view-radio\" (click)=\"setListViewFilter('table')\" [checked]=\"isShowListView('table')\">\n            <label for=\"table-view\"><i class=\"fa fa-list-alt\"></i></label>\n          </div>\n        </div>\n        <div>\n          <div class=\"total_counts\">\n            <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n            <span *ngIf=\"list.length > 1\"><input type=\"checkbox\" class=\"ml-3 mr-1\" [(ngModel)]=\"checkAll\" (change)=\"onCheckAllChange()\">All</span>\n            <a class=\"ml-3\" routerLink=\".\" (click)=\"onRefresh()\"><i class=\"fa fa-sync-alt\"></i></a>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n        <div *ngIf=\"totalPages > 1\">\n          <ul class=\"pagination justify-content-center\">\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n                <span aria-hidden=\"true\">&laquo;</span>\n                <span class=\"sr-only\">Previous</span>\n              </a>\n            </li>\n            <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n            </li>\n            <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n                <span class=\"sr-only\">Next</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n          <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-records\" *ngIf=\"list.length === 0\">\n    <span *ngIf=\"loaded\">No records found.</span>\n    <span *ngIf=\"!loaded\">Loading...</span>\n  </div>\n  <div *ngIf=\"list.length > 0\">\n    <div class=\"listview\" *ngIf=\"isShowListView('list')\">\n      <div class=\"list-block\" *ngFor=\"let detail of list;  let i = index; let list_index = index;\">\n        <hr *ngIf=\"i==0\" class=\"list-devider\">\n        <div class=\"list-card text-left\" [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i],\n\t\t\t\t\t\t\t'clickable-card': clickItemAction}\">\n          <div class=\"list-fields\" [ngClass]=\"{pointer: clickItemAction}\" (click)=\"clickOneItem(i)\">\n            <div class=\"list-head-picture\">\n              <lib-mdds-file-display [downloadUrl]=\"detail['photo']\" [isLarge]=\"false\" [aspectRatio]=\"\"></lib-mdds-file-display>\n            </div>\n            <div class=\"list-body-fields\">\n              <h5>\n                <div class=\"mr-1 d-inline-block\">\n                  {{detail['name']}}\n                </div>\n              </h5>\n              <div>\n                <div *ngIf=\"fieldHasValue(detail['title'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Title:</label></div>\n                  <div class=\"ml-3\">\n                    {{detail['title']}}\n                  </div>\n                </div>\n                <div *ngIf=\"fieldHasValue(detail['email'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Email:</label></div>\n                  <div class=\"ml-3\">\n                    {{detail['email']}}\n                  </div>\n                </div>\n                <div *ngIf=\"fieldHasValue(detail['order'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Order:</label></div>\n                  <div class=\"ml-3\">\n                    {{detail['order']}}\n                  </div>\n                </div>\n              </div>\n              <div class=\"d-flex flex-row mt-1\">\n              </div>\n            </div>\n          </div>\n          <div class=\"card-action-icons\">\n            <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n            <a [routerLink]=\"['.']\" (click)=\"onDelete(detail['_id'], i)\"><i class=\"fas fa-trash-alt\" title=\"Delete\"></i></a>\n            <a [routerLink]=\"['.']\" (click)=\"onArchive(detail['_id'], i, archivedSearch)\">\n              <i *ngIf=\"!archivedSearch\" class=\"fa fa-archive\" title=\"Archive\"></i>\n              <i *ngIf=\"archivedSearch\" class=\"fas fa-trash-restore\" title=\"Unarchive\"></i>\n            </a>\n            <input class=\"list-check-box\" type=\"checkbox\" [ngModel]=\"checkedItem[i]\" (click)=\"selectOneItem(i)\" />\n          </div>\n        </div>\n        <hr class=\"list-devider\">\n      </div>\n    </div>\n    <div class=\"gridview\" *ngIf=\"isShowListView('grid')\">\n      <div class=\"grid-block\" *ngFor=\"let detail of list;  let i = index; let list_index = index;\">\n        <div class=\"card text-left h-100\" [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i],\n\t\t\t\t\t\t\t'clickable-card': clickItemAction}\">\n          <div class=\"grid-fields\" [ngClass]=\"{pointer: clickItemAction}\" (click)=\"clickOneItem(i)\">\n            <div class=\"card-header grid-head\">\n              <div class=\"grid-head-picture\">\n                <lib-mdds-file-display [downloadUrl]=\"detail['photo']\" [isLarge]=\"false\" [aspectRatio]=\"\"></lib-mdds-file-display>\n              </div>\n              <div>\n                <h5>\n                  <div class=\"mr-1 d-inline-block\">\n                    {{detail['name']}}\n                  </div>\n                </h5>\n              </div>\n            </div>\n            <div class=\"card-body\">\n              <div *ngIf=\"fieldHasValue(detail['title'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>Title:</label></div>\n                <div class=\"ml-3\">\n                  {{detail['title']}}</div>\n              </div>\n              <div *ngIf=\"fieldHasValue(detail['email'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>Email:</label></div>\n                <div class=\"ml-3\">\n                  {{detail['email']}}</div>\n              </div>\n              <div *ngIf=\"fieldHasValue(detail['order'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>Order:</label></div>\n                <div class=\"ml-3\">\n                  {{detail['order']}}</div>\n              </div>\n            </div>\n          </div>\n          <div class=\"card-action-icons\">\n            <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n            <a routerLink=\".\" (click)=\"onDelete(detail['_id'], i)\"><i class=\"fas fa-trash-alt\" title=\"Delete\"></i></a>\n            <a routerLink=\".\" (click)=\"onArchive(detail['_id'], i, archivedSearch)\">\n              <i *ngIf=\"!archivedSearch\" class=\"fa fa-archive\" title=\"Archive\"></i>\n              <i *ngIf=\"archivedSearch\" class=\"fas fa-trash-restore\" title=\"Unarchive\"></i>\n            </a>\n            <input class=\"list-check-box\" type=\"checkbox\" [ngModel]=\"checkedItem[i]\" (click)=\"selectOneItem(i)\" />\n          </div>\n        </div>\n      </div>\n    </div>\n    <table *ngIf=\"isShowListView('table')\" class=\"table table-bordered table-hover\">\n      <thead class=\"thead-light\">\n        <tr>\n          <th scope=\"col\">#</th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('name', 'Name')\"> Name <span *ngIf=\"listSortField === 'name'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('title', 'Title')\"> Title <span *ngIf=\"listSortField === 'title'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th scope=\"col\"> Photo </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('email', 'Email')\"> Email <span *ngIf=\"listSortField === 'email'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('order', 'Order')\"> Order <span *ngIf=\"listSortField === 'order'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th scope=\"col\" style=\"width:9.8rem;\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        <ng-template ngFor let-detail [ngForOf]=\"list\" let-i=\"index\">\n          <tr [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i]}\">\n            <td scope=\"row\" (click)=\"clickOneItem(i)\" class=\"pointer read-more mt-3\">\n              {{(page-1)*perPage+i+1}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['name']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['title']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              <lib-mdds-file-display [downloadUrl]=\"detail['photo']\" [isLarge]=\"false\" [aspectRatio]=\"\"></lib-mdds-file-display>\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['email']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['order']}}\n            </td>\n            <td>\n              <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n              <a routerLink=\".\" (click)=\"onDelete(detail['_id'], i)\"><i class=\"fas fa-trash-alt\" title=\"Delete\"></i></a>\n              <a routerLink=\".\" (click)=\"onArchive(detail['_id'], i, archivedSearch)\">\n                <i *ngIf=\"!archivedSearch\" class=\"fa fa-archive\" title=\"Archive\"></i>\n                <i *ngIf=\"archivedSearch\" class=\"fas fa-trash-restore\" title=\"Unarchive\"></i>\n              </a>\n              <input class=\"list-check-box\" type=\"checkbox\" [ngModel]=\"checkedItem[i]\" (click)=\"selectOneItem(i)\" />\n            </td>\n          </tr>\n        </ng-template>\n      </tbody>\n    </table>\n  </div>\n  <div class=\"container\">\n    <div *ngIf=\"!options['disablePagination']\">\n      <div class=\"row justify-content-end mt-3\">\n      </div>\n      <div class=\"d-flex justify-content-between\">\n        <div>\n        </div>\n        <div>\n          <div class=\"total_counts\">\n            <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n        <div *ngIf=\"totalPages > 1\">\n          <ul class=\"pagination justify-content-center\">\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n                <span aria-hidden=\"true\">&laquo;</span>\n                <span class=\"sr-only\">Previous</span>\n              </a>\n            </li>\n            <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n            </li>\n            <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n                <span class=\"sr-only\">Next</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n          <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import {\n  HttpClient\n} from '@angular/common/http';\nimport {\n  MddsBaseService\n} from '@hicoder/angular-core';\nconst servicePath = '/lead/';\nexport class LeadBaseService extends MddsBaseService {\n  constructor(http: HttpClient, serverRootUrl: string) {\n    const serviceUrl = serverRootUrl + servicePath;\n    super(http, serviceUrl);\n  }\n}","import {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  MddsBaseComponent,\n  ViewType\n} from '@hicoder/angular-core';\nimport {\n  Component,\n  OnInit,\n  Injector,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  LeadService\n} from './lead.service';\nconst itemCamelName = 'team Leads';\nexport {\n  ViewType\n};\n@Component({\n  template: '',\n})\nexport class LeadComponent extends MddsBaseComponent implements OnInit {\n  // *** common input fields\n  @Input()\n  public style: any; // {}\n  @Input()\n  public options: any; // {} uiOptions\n  @Input()\n  public searchObj: any;\n  // *** list component\n  @Input()\n  public inputData: any;\n  @Input()\n  public queryParams: any; // {listSortField: 'a', listSortOrder: 'asc' / 'desc', perPage: 6}\n  @Input()\n  public categoryBy: string; //field name whose value is used as category\n  // list-asso component\n  @Input('asso') public associationField: string;\n  // list select component\n  @Output() outputData: any;\n  // *** edit / create component\n  @Input()\n  public id: string;\n  @Input()\n  public cid: string; // copy id\n  @Input()\n  public initData: any; // some fields has data already. eg: {a: b}. Used for add\n  @Input()\n  public embeddedView: boolean;\n  @Input()\n  public embedMode: string; // parent to tell the action - create\n  @Output()\n  public doneData = new EventEmitter < boolean > ();\n  @Output()\n  public done = new EventEmitter < any > ();\n  // *** detail component\n  // @Input() \n  // public id:string;\n  @Input()\n  public disableActionButtions: boolean;\n  @Output()\n  public eventEmitter: EventEmitter < any > = new EventEmitter();\n  // detail sub component\n  // @Input() inputData;\n  // detail show field component\n  // @Input() id: string;\n  @Input() detailObj: any;\n  @Input() showFieldsStr: string;\n  // detail sel component\n  //@Input() inputData;\n  //@Output() outputData;\n  // detail pop component\n  // @Input() inputData;\n  // @Output() outputData;\n  constructor(public leadService: LeadService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(leadService, injector, router, route, location);\n    this.setItemNames(itemCamelName);\n    this.briefFieldsInfo = [];\n    this.briefFieldsInfo.push(['name', 'Name']);\n    this.briefFieldsInfo.push(['title', 'Title']);\n    this.briefFieldsInfo.push(['photo', 'Photo']);\n    this.briefFieldsInfo.push(['email', 'Email']);\n    this.briefFieldsInfo.push(['order', 'Order']);\n    this.requiredFields = ['name', 'title', 'photo', 'email', 'order', ];\n    this.emailFields = [\n      ['Email', 'email'],\n    ];\n    this.schemaName = 'lead';\n    this.modulePath = 'membership';\n    this.indexFields = ['name', ];\n  }\n  ngOnInit() {\n    this.style = this.style || {};\n    this.options = this.options || {};\n  }\n}","import {\n  Injectable,\n  Inject,\n  OnDestroy,\n  SkipSelf\n} from '@angular/core';\nimport {\n  HttpClient\n} from '@angular/common/http';\nimport {\n  LeadBaseService\n} from './lead.base.service';\nimport {\n  Membership_SERVER_ROOT_URI\n} from '../membership.tokens';\n@Injectable({\n  providedIn: 'root',\n})\nexport class LeadService extends LeadBaseService implements OnDestroy {\n  constructor(http: HttpClient, @Inject(Membership_SERVER_ROOT_URI) private membershipServerRootUri: string) {\n    super(http, membershipServerRootUri);\n  }\n  ngOnDestroy() {}\n}","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  MemberComponent,\n  ViewType\n} from '../member.component';\nimport {\n  MemberService\n} from '../member.service';\n@Component({\n  selector: 'app-member-detail-field',\n  templateUrl: './member-detail-field.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailFieldComponent extends MemberComponent\nimplements OnInit {\n  // @Input() id: string;\n  // @Input() detailObj: any;\n  // @Input() showFieldsStr: string;\n  showFields: string[];\n  constructor(public memberService: MemberService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(memberService, injector, router, route, location);\n    this.view = ViewType.DETAIL;\n    this.fieldDisplayNames = {\n      'firstname': 'Firstname',\n      'lastname': 'Lastname',\n      'photo': 'Photo',\n      'email': 'Email',\n      'phone': 'Phone',\n    };\n    this.stringFields.push('firstname');\n    this.stringFields.push('lastname');\n    this.stringFields.push('photo');\n    this.stringFields.push('email');\n    this.stringFields.push('phone');\n  }\n  ngOnInit() {\n    if (!this.showFieldsStr) {\n      console.error(\"A field has to be given to show it.\");\n      return;\n    }\n    this.showFields = this.showFieldsStr.match(/\\S+/g);\n    if (this.detailObj) {\n      this.onDetailReturned(this.detailObj, null);\n    } else {\n      if (!this.id) this.id = this.id;\n      if (this.id) this.populateDetail(this.id);\n      else {\n        console.error(\"No id provided to show info\");\n        return;\n      }\n    }\n  }\n}","<div *ngIf=\"detail && showFields.includes('firstname')\">\n  {{detail['firstname']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('lastname')\">\n  {{detail['lastname']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('photo')\">\n  <lib-mdds-file-display [downloadUrl]=\"detail['photo']\" [isLarge]=\"false\" [aspectRatio]=\"\"></lib-mdds-file-display>\n</div>\n<div *ngIf=\"detail && showFields.includes('email')\">\n  {{detail['email']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('phone')\">\n  {{detail['phone']}}\n</div>","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  MemberDetailComponent\n} from './member-detail.component';\nimport {\n  MemberService\n} from '../member.service';\n@Component({\n  selector: 'app-member-detail-pop',\n  templateUrl: './member-detail-pop.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailPopComponent extends MemberDetailComponent\nimplements OnInit {\n  // @Input() inputData;\n  // @Output() outputData;\n  done = new EventEmitter < boolean > ();\n  constructor(public memberService: MemberService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(memberService, injector, router, route, location);\n    this.majorUi = false;\n  }\n  ngOnInit() {\n    if (!this.id) this.id = this.inputData;\n    if (this.id) this.populateDetail(this.id);\n    else console.error(\"Routing error for detail view... no id...\");\n  }\n  ngAfterViewInit() {}\n}","<div class=\"select-model show\" (keyup.esc)=\"uiOnEscapeKey()\" tabindex=\"0\" #MembershipModal>\n  <div class=\"container select-model-content\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\">{{ItemCamelName}} Detail</h5>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"uiCloseModal()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <!--  model body starts -->\n        <div class=\"detail\" *ngIf=\"detail\">\n          <div class=\"action-buttons\">\n          </div>\n          <div class=\"card text-left\">\n            <div class=\"card-body\">\n              <div class=\"card-text\">\n                <div class=\"card-header grid-head\">\n                  <div class=\"grid-head-picture\">\n                    <lib-mdds-file-display [downloadUrl]=\"detail['photo']\" [isLarge]=\"false\" [aspectRatio]=\"\"></lib-mdds-file-display>\n                  </div>\n                  <div class=\"ml-1\">\n                    <h5>\n                      <div class=\"mr-1 d-inline-block\">\n                        {{detail['firstname']}}\n                      </div>\n                      <div class=\"mr-1 d-inline-block\">\n                        {{detail['lastname']}}\n                      </div>\n                    </h5>\n                  </div>\n                </div>\n                <div class=\"card-body\">\n                  <div>\n                    <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n                      <div><label>Email:</label></div>\n                      <div class=\"ml-3\">\n                        {{detail['email']}}</div>\n                    </div>\n                  </div>\n                  <div>\n                    <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n                      <div><label>Phone:</label></div>\n                      <div class=\"ml-3\">\n                        {{detail['phone']}}</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <!--  model body ends -->\n      </div>\n      <div class=\"modal-footer\">\n      </div>\n    </div>\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  MemberDetailComponent\n} from './member-detail.component';\nimport {\n  MemberService\n} from '../member.service';\n@Component({\n  selector: 'app-member-detail-sel',\n  templateUrl: './member-detail-sel.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailSelComponent extends MemberDetailComponent\nimplements OnInit {\n  // @Input() inputData;\n  // @Output() outputData;\n  done = new EventEmitter < boolean > ();\n  constructor(public memberService: MemberService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(memberService, injector, router, route, location);\n    this.majorUi = false;\n  }\n  ngOnInit() {\n    if (!this.id) this.id = this.inputData;\n    if (this.id) this.populateDetail(this.id);\n    else console.error(\"Routing error for detail view... no id...\");\n  }\n  ngAfterViewInit() {}\n}","<div class=\"select-model show\" (keyup.esc)=\"uiOnEscapeKey()\" tabindex=\"0\" #MembershipModal>\n  <div class=\"container select-model-content\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\">Selected {{ItemCamelName}}</h5>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"uiCloseModal()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <!--  model body starts -->\n        <div class=\"detail\" *ngIf=\"detail\">\n          <div class=\"action-buttons\">\n            <a class=\"action-go-list\" routerLink=\".\" (click)=\"detailSelBack()\"><i class=\"fas fa-angle-double-left\" title=\"Back to list\">&nbsp; {{ItemCamelName}} List</i></a>\n            <a routerLink=\".\" class=\"btn btn-outline-primary\" (click)=\"detailSelSelected()\">Select</a>\n          </div>\n          <div class=\"card text-left\">\n            <div class=\"card-body\">\n              <h4 class=\"card-title\">{{ItemCamelName}} Detail</h4>\n              <div class=\"card-text\">\n                <div class=\"card-header grid-head\">\n                  <div class=\"grid-head-picture\">\n                    <lib-mdds-file-display [downloadUrl]=\"detail['photo']\" [isLarge]=\"false\" [aspectRatio]=\"\"></lib-mdds-file-display>\n                  </div>\n                  <div class=\"ml-1\">\n                    <h5>\n                      <div class=\"mr-1 d-inline-block\">\n                        {{detail['firstname']}}\n                      </div>\n                      <div class=\"mr-1 d-inline-block\">\n                        {{detail['lastname']}}\n                      </div>\n                    </h5>\n                  </div>\n                </div>\n                <div class=\"card-body\">\n                  <div>\n                    <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n                      <div><label>Email:</label></div>\n                      <div class=\"ml-3\">\n                        {{detail['email']}}</div>\n                    </div>\n                  </div>\n                  <div>\n                    <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n                      <div><label>Phone:</label></div>\n                      <div class=\"ml-3\">\n                        {{detail['phone']}}</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <!--  model body ends -->\n      </div>\n      <div class=\"modal-footer\">\n      </div>\n    </div>\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  MemberDetailCustComponent\n} from '../../../membership-cust/base/member/member-detail.cust.component';\nimport {\n  ViewType\n} from '../member.component';\nimport {\n  MemberService\n} from '../member.service';\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent extends MemberDetailCustComponent implements OnInit, AfterViewInit {\n  // @Input() \n  // public id:string;\n  // @Input()\n  // public searchObj:any;\n  // @Input()\n  // public disableActionButtions:boolean;\n  // @Output()\n  // public eventEmitter: EventEmitter<any> = new EventEmitter();\n  constructor(public memberService: MemberService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(memberService, injector, router, route, location);\n    this.view = ViewType.DETAIL;\n    this.fieldDisplayNames = {\n      'firstname': 'Firstname',\n      'lastname': 'Lastname',\n      'photo': 'Photo',\n      'email': 'Email',\n      'phone': 'Phone',\n    };\n    this.stringFields.push('firstname');\n    this.stringFields.push('lastname');\n    this.stringFields.push('photo');\n    this.stringFields.push('email');\n    this.stringFields.push('phone');\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    if (!this.id) this.id = this.route.snapshot.paramMap.get('id');\n    if (this.id) {\n      this.populateDetail(this.id);\n    } else if (this.searchObj) {\n      // search item based on the unique value\n      this.populateDetailByFields(this.searchObj);\n    } else {\n      console.error(\"Routing error for detail view... no id...\");\n      return;\n    }\n  }\n  ngAfterViewInit() {\n    //Load first reference, if not others activated\n    if (!this.options['disableRefLink'] && !this.isChildRouterActivated()) {\n      this.router.navigate(['./additionalinfo/list', {}], {\n        relativeTo: this.route,\n        queryParamsHandling: 'preserve',\n      });\n    }\n  }\n}","<div class=\"mt-4 mb-4\" *ngIf=\"!options['disableTitle']\">\n  <h3>Member</h3>\n</div>\n<div class=\"detail\" *ngIf=\"detail\">\n  <div *ngIf=\"!options['disableActionButtions']\">\n    <div *ngIf=\"!disableActionButtions && !options['disableActionButtions']\" class=\"action-buttons\">\n      <a *ngIf=\"!options['disableActionList']\" routerLink=\"../../list\" class=\"action-go-list\"><i class=\"fas fa-list\" title=\"List\"></i><!--  span>&nbsp;&nbsp;{{ItemCamelName}} List</span--></a>\n      <a *ngIf=\"!options['disableActionEdit']\" [routerLink]=\"['../../edit', detail['_id'] ]\" [skipLocationChange]=\"false\" class=\"btn btn-outline-primary\">Edit</a>\n      <a *ngIf=\"!options['disableActionArchive']\" routerLink=\".\" class=\"btn btn-outline-primary\" (click)=\"onArchive(detail['_id'], null, detail['archived'])\">\n        <ng-template [ngIf]=\"!detail['archived']\">Archive</ng-template>\n        <ng-template [ngIf]=\"detail['archived']\">Unarchive</ng-template>\n      </a>\n    </div>\n  </div>\n  <div class=\"card text-left transparent-border \">\n    <div class=\"grid-fields\">\n      <div class=\"card-header grid-head\">\n        <div class=\"grid-head-picture\">\n          <lib-mdds-file-display [downloadUrl]=\"detail['photo']\" [isLarge]=\"false\" [aspectRatio]=\"\"></lib-mdds-file-display>\n        </div>\n        <div class=\"ml-1\">\n          <h5>\n            <div class=\"mr-1 d-inline-block\">\n              {{detail['firstname']}}\n            </div>\n            <div class=\"mr-1 d-inline-block\">\n              {{detail['lastname']}}\n            </div>\n          </h5>\n        </div>\n      </div>\n      <div class=\"card-body\">\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Email:</label></div>\n            <div class=\"ml-3\">\n              {{detail['email']}}</div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Phone:</label></div>\n            <div class=\"ml-3\">\n              {{detail['phone']}}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"!options['disablePipeline']\">\n  </div>\n  <div *ngIf=\"!options['disableRefLink']\">\n    <br />\n    <ul class=\"nav nav-tabs\">\n      <li class=\"nav-item\">\n        <a [routerLink]=\"['./additionalinfo/list']\" class=\"nav-link\" routerLinkActive=\"active\">AdditionalInfo</a>\n      </li>\n    </ul>\n    <router-outlet></router-outlet>\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  Directive,\n  EventEmitter\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\ndeclare const $: any;\nimport {\n  MemberEditCustComponent\n} from '../../../membership-cust/base/member/member-edit.cust.component';\nimport {\n  ViewType\n} from '../member.component';\nimport {\n  MemberService\n} from '../member.service';\nimport {\n  NG_VALIDATORS,\n  Validator,\n  ValidationErrors,\n  AbstractControl,\n  FormGroup\n} from '@angular/forms';\n@Directive({\n  selector: '[membershipMemberDirectiveEmail]',\n  providers: [{\n    provide: NG_VALIDATORS,\n    useExisting: MembershipMemberDirectiveEmail,\n    multi: true\n  }]\n})\nexport class MembershipMemberDirectiveEmail implements Validator {\n  validators: any[] = [{\n    validator: function(email) {\n      var re = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n      return re.test(email)\n    },\n    msg: `Please fill a valid email address.`\n  }, ];\n  validate(control: AbstractControl): ValidationErrors | null {\n    //TODO: For validator of NgModelGroup, need to get list of contained controls and do validation on the combined data.\n    let value = control.value;\n    return this.validateValue(value);\n  }\n  validateValue(value: any): ValidationErrors | null {\n    //only compare when input presents\n    let result = true;\n    if (typeof value == 'string') {\n      for (let idx = 0; idx < this.validators.length; idx++) {\n        let obj = this.validators[idx];\n        try {\n          result = obj.validator(value)\n          if (result == false) return {\n            'membershipMemberDirectiveEmail': obj.msg\n          };\n        } catch (e) {\n          return {\n            'membershipMemberDirectiveEmail': obj.msg\n          };\n        }\n      }\n    }\n    return null;\n  }\n}\n@Directive({\n  selector: '[membershipMemberDirectivePhone]',\n  providers: [{\n    provide: NG_VALIDATORS,\n    useExisting: MembershipMemberDirectivePhone,\n    multi: true\n  }]\n})\nexport class MembershipMemberDirectivePhone implements Validator {\n  validators: any[] = [{\n    validator: function(phone) {\n      var re = /^(\\d+-?)+\\d+$/;\n      return re.test(phone)\n    },\n    msg: `Please fill a valid phone number.`\n  }, ];\n  validate(control: AbstractControl): ValidationErrors | null {\n    //TODO: For validator of NgModelGroup, need to get list of contained controls and do validation on the combined data.\n    let value = control.value;\n    return this.validateValue(value);\n  }\n  validateValue(value: any): ValidationErrors | null {\n    //only compare when input presents\n    let result = true;\n    if (typeof value == 'string') {\n      for (let idx = 0; idx < this.validators.length; idx++) {\n        let obj = this.validators[idx];\n        try {\n          result = obj.validator(value)\n          if (result == false) return {\n            'membershipMemberDirectivePhone': obj.msg\n          };\n        } catch (e) {\n          return {\n            'membershipMemberDirectivePhone': obj.msg\n          };\n        }\n      }\n    }\n    return null;\n  }\n}\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent extends MemberEditCustComponent implements OnInit, AfterViewInit {\n  // @Input() \n  // public id: string;\n  // @Input()\n  // public cid: string; // copy id\n  // @Input()\n  // public initData: any; // some fields has data already. eg: {a: b}. Used for add\n  // @Output()\n  // public doneData = new EventEmitter<boolean>();\n  // @Output()\n  // public done = new EventEmitter<any>();\n  // @Input()\n  // public embeddedView: boolean;\n  // @Input()\n  // public embedMode: string; // parent to tell the action - create\n  public action: string;\n  public minDate = {\n    year: (new Date()).getFullYear() - 100,\n    month: 1,\n    day: 1\n  };\n  constructor(public memberService: MemberService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(memberService, injector, router, route, location);\n    this.view = ViewType.EDIT;\n    this.fieldDisplayNames = {\n      'firstname': 'Firstname',\n      'lastname': 'Lastname',\n      'photo': 'Photo',\n      'email': 'Email',\n      'phone': 'Phone',\n    };\n    this.stringFields.push('firstname');\n    this.stringFields.push('lastname');\n    this.stringFields.push('photo');\n    this.stringFields.push('email');\n    this.stringFields.push('phone');\n    const detail = {};\n    this.detail = this.formatDetail(detail);\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.embedMode == 'create') { // parent ask to create\n      this.action = 'Create';\n      this.getDetailData();\n    } else {\n      if (!this.id) this.id = this.route.snapshot.paramMap.get('id');\n      if (this.id) {\n        this.action = 'Edit';\n        this.populateDetailForAction(this.id, 'edit'); //populate with action as 'edit'\n      } else {\n        this.action = 'Create';\n        if (!this.cid) this.cid = this.route.snapshot.queryParamMap.get('cid');\n        if (this.cid) {\n          this.populateDetailFromCopy(this.cid);\n        } else {\n          this.getDetailData();\n        }\n      }\n    }\n    // get editHintFields\n    this.searchHintFieldValues();\n  }\n  ngAfterViewInit() {\n    // Initialize all tooltips\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n  getDetailData() {\n    if (this.initData) {\n      this.action = 'Add';\n      let detail = {};\n      for (let prop of Object.keys(this.initData)) {\n        detail[prop] = this.initData[prop];\n        this.hiddenFields.push(prop);\n      }\n      this.detail = this.formatDetail(detail);\n    } else {\n      let detail = {};\n      this.detail = this.formatDetail(detail);\n    }\n  }\n}","<div class=\"edit\" *ngIf=\"detail\">\n  <div class=\"card\" style=\"text-align: left;\">\n    <div class=\"card-body\">\n      <h4 class=\"card-title\" *ngIf=\"!embeddedView && !options['title']\">{{action}} Member</h4>\n      <h4 class=\"card-title\" *ngIf=\"options['title']\" [ngStyle]=\"style['card-title']\">\n        {{options['title']}}\n      </h4>\n      <p *ngIf=\"options['subtitle']\" [ngStyle]=\"style['card-subtitle']\">\n        {{options['subtitle']}}\n      </p>\n      <form (ngSubmit)=\"onSubmit()\" #editForm=\"ngForm\">\n        <ng-template [ngIf]=\"action == 'Edit'\">\n          <ng-template [ngIf]=\"!hiddenFields.includes('firstname')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditFirstname\">Firstname</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditFirstname\" maxlength=\"100\" [(ngModel)]=\"detail['firstname']\" name=\"EditFirstname\" #EditFirstname=\"ngModel\">\n                <div *ngIf=\"detail['firstname']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('firstname')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditFirstname.valid || EditFirstname.pristine || EditFirstname.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditFirstname.errors && EditFirstname.errors.maxlength\"> Firstname must be at most 100 characters long. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('lastname')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditLastname\">Lastname</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditLastname\" maxlength=\"100\" [(ngModel)]=\"detail['lastname']\" name=\"EditLastname\" #EditLastname=\"ngModel\">\n                <div *ngIf=\"detail['lastname']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('lastname')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditLastname.valid || EditLastname.pristine || EditLastname.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditLastname.errors && EditLastname.errors.maxlength\"> Lastname must be at most 100 characters long. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('photo')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditPhoto\">Photo</label>\n              <div class=\"form-check\" [ngClass]=\"{'ng-valid': true} \">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditPhoto\" style=\"display: none;\" [(ngModel)]=\"detail['photo']\" name=\"EditPhoto\" #EditPhoto=\"ngModel\">\n                <div style=\"display: inline-block; width: 80%;\">\n                  <lib-mdds-file-select [(downloadUrl)]=\"detail['photo']\" [aspectRatio]=\"\"></lib-mdds-file-select>\n                </div>\n                <span *ngIf=\"detail['photo']\" class=\"icon-clear\" (click)=\"clearValueFromDetail('photo')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </span>\n              </div>\n              <div [hidden]=\"EditPhoto.valid || EditPhoto.pristine\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('email')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditEmail\">Email</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditEmail\" required membershipMemberDirectiveEmail=\"\" [(ngModel)]=\"detail['email']\" name=\"EditEmail\" #EditEmail=\"ngModel\">\n                <div *ngIf=\"detail['email']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('email')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditEmail.valid || EditEmail.pristine || EditEmail.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditEmail.errors && EditEmail.errors.required\"> Email is required. </div>\n                <div *ngIf=\"EditEmail.errors && EditEmail.errors.membershipMemberDirectiveEmail\">\n                  {{EditEmail.errors.membershipMemberDirectiveEmail}}\n                </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('phone')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditPhone\">Phone</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditPhone\" membershipMemberDirectivePhone=\"\" [(ngModel)]=\"detail['phone']\" name=\"EditPhone\" #EditPhone=\"ngModel\">\n                <div *ngIf=\"detail['phone']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('phone')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditPhone.valid || EditPhone.pristine || EditPhone.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditPhone.errors && EditPhone.errors.membershipMemberDirectivePhone\">\n                  {{EditPhone.errors.membershipMemberDirectivePhone}}\n                </div>\n              </div>\n            </fieldset>\n          </ng-template>\n        </ng-template>\n        <ng-template [ngIf]=\"action == 'Create' || action == 'Add' \">\n          <ng-template [ngIf]=\"!hiddenFields.includes('firstname')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditFirstname\">Firstname</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditFirstname\" maxlength=\"100\" [(ngModel)]=\"detail['firstname']\" name=\"EditFirstname\" #EditFirstname=\"ngModel\">\n                <div *ngIf=\"detail['firstname']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('firstname')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditFirstname.valid || EditFirstname.pristine || EditFirstname.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditFirstname.errors && EditFirstname.errors.maxlength\"> Firstname must be at most 100 characters long. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('lastname')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditLastname\">Lastname</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditLastname\" maxlength=\"100\" [(ngModel)]=\"detail['lastname']\" name=\"EditLastname\" #EditLastname=\"ngModel\">\n                <div *ngIf=\"detail['lastname']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('lastname')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditLastname.valid || EditLastname.pristine || EditLastname.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditLastname.errors && EditLastname.errors.maxlength\"> Lastname must be at most 100 characters long. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('photo')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditPhoto\">Photo</label>\n              <div class=\"form-check\" [ngClass]=\"{'ng-valid': true} \">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditPhoto\" style=\"display: none;\" [(ngModel)]=\"detail['photo']\" name=\"EditPhoto\" #EditPhoto=\"ngModel\">\n                <div style=\"display: inline-block; width: 80%;\">\n                  <lib-mdds-file-select [(downloadUrl)]=\"detail['photo']\" [aspectRatio]=\"\"></lib-mdds-file-select>\n                </div>\n                <span *ngIf=\"detail['photo']\" class=\"icon-clear\" (click)=\"clearValueFromDetail('photo')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </span>\n              </div>\n              <div [hidden]=\"EditPhoto.valid || EditPhoto.pristine\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('email')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditEmail\">Email</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditEmail\" required membershipMemberDirectiveEmail=\"\" [(ngModel)]=\"detail['email']\" name=\"EditEmail\" #EditEmail=\"ngModel\">\n                <div *ngIf=\"detail['email']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('email')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditEmail.valid || EditEmail.pristine || EditEmail.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditEmail.errors && EditEmail.errors.required\"> Email is required. </div>\n                <div *ngIf=\"EditEmail.errors && EditEmail.errors.membershipMemberDirectiveEmail\">\n                  {{EditEmail.errors.membershipMemberDirectiveEmail}}\n                </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('phone')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditPhone\">Phone</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditPhone\" membershipMemberDirectivePhone=\"\" [(ngModel)]=\"detail['phone']\" name=\"EditPhone\" #EditPhone=\"ngModel\">\n                <div *ngIf=\"detail['phone']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('phone')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditPhone.valid || EditPhone.pristine || EditPhone.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditPhone.errors && EditPhone.errors.membershipMemberDirectivePhone\">\n                  {{EditPhone.errors.membershipMemberDirectivePhone}}\n                </div>\n              </div>\n            </fieldset>\n          </ng-template>\n        </ng-template>\n        <div class=\"action-buttons-center\">\n          <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!editForm.form.valid\">Submit</button>\n          <button *ngIf=\"!options['disableCancel']\" class=\"btn btn-outline-success\" type=\"button\" (click)=\"editCancel()\">Cancel</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  Input,\n  EventEmitter,\n  Output,\n  ElementRef,\n  ViewChild,\n  AfterViewInit\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  MemberListComponent\n} from './member-list.component';\nimport {\n  MemberService\n} from '../member.service';\n@Component({\n  selector: 'app-member-list-select',\n  templateUrl: './member-list-select.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListSelectComponent extends MemberListComponent\nimplements OnInit {\n  // @Input() inputData;\n  // @Output() outputData;\n  done = new EventEmitter < boolean > ();\n  constructor(public memberService: MemberService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(memberService, injector, router, route, location);\n    this.majorUi = false;\n    this.itemMultiSelect = false;\n  }\n  ngOnInit() {\n    this.selectedId = this.inputData;\n    this.populateList();\n  }\n}","<div class=\"select-model show\" (keyup.esc)=\"uiOnEscapeKey()\" tabindex=\"0\" #MembershipModal>\n  <div class=\"container select-model-content\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\">Select {{ItemCamelName}}</h5>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"uiCloseModal()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <!--  model body starts -->\n        <div class=\"container search\">\n          <div class=\"row\" *ngIf=\"!options['disableListSearch']\">\n            <div class=\"col\">\n              <div class=\"input-group\">\n                <input type=\"search\" class=\"form-control border border-secondary\" id=\"memberTextSearch\" #memberTextSearch [(ngModel)]=\"searchText\" (search)=\"$event.target.blur();searchList();\" placeholder=\"Search for firstname, lastname, email, phone\">\n                <div *ngIf=\"searchText\" class=\"input-group-append icon-search-clear\">\n                  <span>\n                    <i class=\"fas fa-times-circle\" (click)=\"onSearchTextClear()\" title=\"Clear\"></i>\n                  </span>\n                </div>\n                <div class=\"input-group-append\">\n                  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"searchList()\"><i class=\"fas fa-search\"></i></button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <hr />\n          <div class=\"row justify-content-end mt-3\">\n          </div>\n          <div class=\"d-flex justify-content-between\">\n            <div>\n            </div>\n            <div>\n              <div class=\"total_counts\">\n                <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n              </div>\n            </div>\n          </div>\n          <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n            <div *ngIf=\"totalPages > 1\">\n              <ul class=\"pagination justify-content-center\">\n                <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n                  <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n                    <span aria-hidden=\"true\">&laquo;</span>\n                    <span class=\"sr-only\">Previous</span>\n                  </a>\n                </li>\n                <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n                <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n                  <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n                </li>\n                <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n                <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n                  <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n                    <span aria-hidden=\"true\">&raquo;</span>\n                    <span class=\"sr-only\">Next</span>\n                  </a>\n                </li>\n              </ul>\n            </div>\n            <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n              <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n            </div>\n          </div>\n        </div>\n        <table class=\"table table-bordered table-hover\">\n          <thead class=\"thead-light\">\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Firstname</th>\n              <th scope=\"col\">Lastname</th>\n              <th scope=\"col\">Photo</th>\n              <th scope=\"col\">Email</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let detail of list;  let i = index\" [ngClass]=\"{'clicked-row': detail['_id']==clickedId}\">\n              <td scope=\"row\" (click)=\"selectItemSelected(i)\" class=\"pointer\">{{(page-1)*perPage+i+1}}</td>\n              <td (click)=\"selectItemSelected(i)\" class=\"pointer\">\n                {{detail['firstname']}}\n              </td>\n              <td (click)=\"selectItemSelected(i)\" class=\"pointer\">\n                {{detail['lastname']}}\n              </td>\n              <td (click)=\"selectItemSelected(i)\" class=\"pointer\">\n                <lib-mdds-file-display [downloadUrl]=\"detail['photo']\" [isLarge]=\"false\" [aspectRatio]=\"\"></lib-mdds-file-display>\n              </td>\n              <td (click)=\"selectItemSelected(i)\" class=\"pointer\">\n                {{detail['email']}}\n              </td>\n              <td><a routerLink=\".\" class=\"btn\" [ngClass]=\"{'btn-primary': detail['_id']==selectedId || checkedItem[i], \n\t\t\t\t\t \t\t\t'btn-outline-primary': detail['_id']!==selectedId && !checkedItem[i]}\" (click)=\"selectViewDetail(i)\">View Details</a>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div class=\"container\">\n          <div class=\"row justify-content-end mt-3\">\n          </div>\n          <div class=\"d-flex justify-content-between\">\n            <div>\n            </div>\n            <div>\n              <div class=\"total_counts\">\n                <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n              </div>\n            </div>\n          </div>\n          <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n            <div *ngIf=\"totalPages > 1\">\n              <ul class=\"pagination justify-content-center\">\n                <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n                  <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n                    <span aria-hidden=\"true\">&laquo;</span>\n                    <span class=\"sr-only\">Previous</span>\n                  </a>\n                </li>\n                <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n                <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n                  <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n                </li>\n                <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n                <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n                  <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n                    <span aria-hidden=\"true\">&raquo;</span>\n                    <span class=\"sr-only\">Next</span>\n                  </a>\n                </li>\n              </ul>\n            </div>\n            <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n              <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n            </div>\n          </div>\n        </div>\n        <!--  model body ends -->\n      </div>\n      <div class=\"modal-footer\">\n      </div>\n    </div>\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  MemberListCustComponent\n} from '../../../membership-cust/base/member/member-list.cust.component';\nimport {\n  ViewType\n} from '../member.component';\nimport {\n  MemberService\n} from '../member.service';\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent extends MemberListCustComponent implements OnInit {\n  // @Input() options: any; {disableCatetory: false, disablePagination: false, disbleActionButtons: false\n  //                        disableListSearch: false, disableTitle: false, disableRefs: false\n  //                        disableListHead: false, disableTitleRow: false}\n  // @Input()\n  // public inputData:any;\n  // @Input()\n  // public searchObj:any;\n  // @Input()\n  // public queryParams: any;  // {listSortField: 'a', listSortOrder: 'asc' / 'desc', perPage: 6}\n  // @Input()\n  // public categoryBy:string; //field name whose value is used as category\n  constructor(public memberService: MemberService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(memberService, injector, router, route, location);\n    this.view = ViewType.LIST;\n    this.fieldDisplayNames = {\n      'firstname': 'Firstname',\n      'lastname': 'Lastname',\n      'photo': 'Photo',\n      'email': 'Email',\n      'phone': 'Phone',\n    };\n    this.stringFields.push('firstname');\n    this.stringFields.push('lastname');\n    this.stringFields.push('photo');\n    this.stringFields.push('email');\n    this.stringFields.push('phone');\n    this.listViewFilter = 'list';\n    const listCategories = [];\n    this.listCategory1 = listCategories[0] || {};\n    this.listCategory2 = listCategories[1] || {};\n    this.clickItemAction = 'detail';\n    this.itemMultiSelect = true;\n    // initialize detail structure for search\n    let detail = {};\n    this.detail = this.formatDetail(detail);\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    this.adjustListViewForWindowSize();\n    this.clickItemAction = typeof this.options.clickItemAction === 'undefined' ? this.clickItemAction : this.options.clickItemAction;\n    this.itemMultiSelect = typeof this.options.itemMultiSelect === 'boolean' ? this.options.itemMultiSelect : this.itemMultiSelect;\n    if (!this.options) {\n      this.options = {};\n    }\n    if (this.options.disableCatetory) {\n      this.listCategory1 = {}; // no do query based on category for home view;\n      this.listCategory2 = {}; // no do query based on category for home view;\n    }\n    // this is to initialize the detail that will be used for search condition selection\n    let detail = {};\n    if (this.searchObj) {\n      this.searchDetailReady = true; // search provided from \"detail\", not from search bar.\n      detail = this.searchObj;\n    }\n    if (this.queryParams) {\n      this.listSortField = this.queryParams.listSortField;\n      this.listSortOrder = this.queryParams.listSortOrder;\n      if (this.queryParams.perPage) {\n        this.perPage = this.queryParams.perPage\n      }\n    }\n    this.detail = this.formatDetail(detail);\n    this.searchList();\n    // get editHintFields\n    this.searchHintFieldValues();\n  }\n  static getInstance() {\n    //used by others to call some common functions\n    return new MemberListComponent(null, null, null, null, null);\n  }\n}","<div class=\"mt-4 mb-4 d-flex\" *ngIf=\"!options['disableTitleRow']\">\n  <div class=\"list-title\" *ngIf=\"!options['disableTitle']\">Members</div>\n</div>\n<ul *ngIf=\"listCategory1.listCategoryField\" class=\"nav nav-pills category-nav\">\n  <li *ngFor=\"let ele of categoryDisplays; let idx = index;\" class=\"nav-item\">\n    <a *ngIf=\" listCategory1.showEmptyCategory || (!listCategory1.showEmptyCategory && categoriesCounts[idx] > 0)\" class=\"nav-link\" [ngClass]=\"{'active': idx === selectedCategory }\" [routerLink]=\"['.']\" queryParamsHandling=\"preserve\" (click)=\"categorySelected(idx)\">\n      {{ele}} <span *ngIf=\"listCategory1.showCategoryCounts\">({{categoriesCounts[idx]}})</span>\n    </a>\n  </li>\n</ul>\n<div>\n  <div *ngIf=\"!options['disableListHead']\" class=\"container search\">\n    <div class=\"row\" *ngIf=\"!options['disableListSearch']\">\n      <div class=\"col\">\n        <div class=\"input-group\">\n          <input type=\"search\" class=\"form-control border border-secondary\" id=\"memberTextSearch\" #memberTextSearch [(ngModel)]=\"searchText\" (search)=\"$event.target.blur();searchList();\" placeholder=\"Search for firstname, lastname, email, phone\">\n          <div *ngIf=\"searchText\" class=\"input-group-append icon-search-clear\">\n            <span>\n              <i class=\"fas fa-times-circle\" (click)=\"onSearchTextClear()\" title=\"Clear\"></i>\n            </span>\n          </div>\n          <div class=\"input-group-append\">\n            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"searchList()\"><i class=\"fas fa-search\"></i></button>\n          </div>\n        </div>\n        <div class=\"text-center\">\n          <span class=\"pointer\" (click)=\"toggleMoreSearch()\">\n            <span class=\"refine-search-text\">Refine Search &nbsp;</span>\n            <span>\n              <i *ngIf=\"!moreSearchOpened\" class=\"fas fa-plus-circle\" title=\"More\"></i>\n              <i *ngIf=\"moreSearchOpened\" class=\"fas fa-minus-circle\" title=\"Less\"></i>\n            </span>\n          </span>\n        </div>\n        <div class=\"shadow\" *ngIf=\"moreSearchOpened\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <div class=\"d-flex flex-wrap align-items-center\">\n              </div>\n              <hr>\n              <div class=\"container one-column-search mt-3 small\">\n                <div class=\"row col-gutter\">\n                  <div class=\"col-4 col-sm-3\"><label for=\"Archived\">Archived</label></div>\n                  <div class=\"col-8 col-sm-8\">\n                    <label class=\"mr-1\">No</label>\n                    <label class=\"switch\">\n                      <input type=\"checkbox\" [(ngModel)]=\"detail['archived']\" #EditArchived=\"ngModel\">\n                      <span class=\"slider round\"></span>\n                    </label>\n                    <label class=\"ml-1\">Yes</label>\n                  </div>\n                </div>\n              </div>\n              <hr>\n              <div class=\"action-buttons\">\n                <button type=\"button\" class=\"btn btn-outline-success\" (click)=\"onSearchClear()\">Reset</button>\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"searchList()\">Search</button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div *ngIf=\"!moreSearchOpened\" style=\"text-align: left;\">\n          <span class=\"badge badge-pill badge-info\" *ngFor=\"let value of searchMoreDetail\">\n            <a (click)=\"toggleMoreSearch()\" class=\"pointer\"> {{value[0]}}: {{value[1]}}</a>\n            <i class=\"fas fa-times-circle icon-clear-badge\" (click)=\"clearValueFromDetailAndSearchList(value[2])\" title=\"Clear\"></i>\n          </span>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"!options['disableActionButtions']\">\n      <div class=\"col\">\n        <div class=\"action-buttons\">\n          <lib-mdds-action-email *ngIf=\"emailFields.length > 0\" class=\"m-1\" [emailFields]=\"emailFields\" [stringFields]=\"stringFields\" [recordNumber]=\"totalCount\" (componentEvents)=\"onActionBaseEvent($event)\">\n          </lib-mdds-action-email>\n          <a routerLink=\".\" class=\"btn btn-outline-primary\" (click)=\"onArchiveSelected()\" [ngClass]=\"{'disabled': !isItemSelected()}\">\n            <span *ngIf=\"!archivedSearch\">Archive</span>\n            <span *ngIf=\"archivedSearch\">Unarchive</span>\n          </a>\n        </div>\n      </div>\n    </div>\n    <hr />\n    <div *ngIf=\"!options['disablePagination']\">\n      <div class=\"row justify-content-end mt-3\">\n        <div *ngIf=\"list.length > 2\" class=\"sort-selection mr-5\">\n          <div class=\"dropdown\" style=\"width: 100%;\">\n            <button class=\"sort-dropdown btn btn-light btn-sm dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> Sort: <span *ngIf=\"listSortField && !viewHiddenFields.includes(listSortField)\">{{listSortFieldDisplay}}\n                <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up\"></i>\n                <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down\"></i>\n              </span>\n            </button>\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('firstname', 'Firstname', 'asc')\">Firstname<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('firstname', 'Firstname', 'desc')\">Firstname<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('lastname', 'Lastname', 'asc')\">Lastname<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('lastname', 'Lastname', 'desc')\">Lastname<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('email', 'Email', 'asc')\">Email<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('email', 'Email', 'desc')\">Email<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('phone', 'Phone', 'asc')\">Phone<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('phone', 'Phone', 'desc')\">Phone<i class=\"fas fa-arrow-down\"></i></a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-between\">\n        <div>\n          <div *ngIf=\"list.length > 0\">\n            <input type=\"radio\" name=\"view-filter\" id=\"list-view\" class=\"view-radio\" (click)=\"setListViewFilter('list')\" [checked]=\"isShowListView('list')\">\n            <label for=\"list-view\"><i class=\"fa fa-th-list\"></i></label>\n            <input type=\"radio\" name=\"view-filter\" id=\"grid-view\" class=\"view-radio\" (click)=\"setListViewFilter('grid')\" [checked]=\"isShowListView('grid')\">\n            <label for=\"grid-view\"><i class=\"fa fa-th\"></i></label>\n            <input type=\"radio\" name=\"view-filter\" id=\"table-view\" class=\"view-radio\" (click)=\"setListViewFilter('table')\" [checked]=\"isShowListView('table')\">\n            <label for=\"table-view\"><i class=\"fa fa-list-alt\"></i></label>\n          </div>\n        </div>\n        <div>\n          <div class=\"total_counts\">\n            <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n            <span *ngIf=\"list.length > 1\"><input type=\"checkbox\" class=\"ml-3 mr-1\" [(ngModel)]=\"checkAll\" (change)=\"onCheckAllChange()\">All</span>\n            <a class=\"ml-3\" routerLink=\".\" (click)=\"onRefresh()\"><i class=\"fa fa-sync-alt\"></i></a>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n        <div *ngIf=\"totalPages > 1\">\n          <ul class=\"pagination justify-content-center\">\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n                <span aria-hidden=\"true\">&laquo;</span>\n                <span class=\"sr-only\">Previous</span>\n              </a>\n            </li>\n            <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n            </li>\n            <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n                <span class=\"sr-only\">Next</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n          <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-records\" *ngIf=\"list.length === 0\">\n    <span *ngIf=\"loaded\">No records found.</span>\n    <span *ngIf=\"!loaded\">Loading...</span>\n  </div>\n  <div *ngIf=\"list.length > 0\">\n    <div class=\"listview\" *ngIf=\"isShowListView('list')\">\n      <div class=\"list-block\" *ngFor=\"let detail of list;  let i = index; let list_index = index;\">\n        <hr *ngIf=\"i==0\" class=\"list-devider\">\n        <div class=\"list-card text-left\" [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i],\n\t\t\t\t\t\t\t'clickable-card': clickItemAction}\">\n          <div class=\"list-fields\" [ngClass]=\"{pointer: clickItemAction}\" (click)=\"clickOneItem(i)\">\n            <div class=\"list-head-picture\">\n              <lib-mdds-file-display [downloadUrl]=\"detail['photo']\" [isLarge]=\"false\" [aspectRatio]=\"\"></lib-mdds-file-display>\n            </div>\n            <div class=\"list-body-fields\">\n              <h5>\n                <div class=\"mr-1 d-inline-block\">\n                  {{detail['firstname']}}\n                </div>\n                <div class=\"mr-1 d-inline-block\">\n                  {{detail['lastname']}}\n                </div>\n              </h5>\n              <div>\n                <div *ngIf=\"fieldHasValue(detail['email'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Email:</label></div>\n                  <div class=\"ml-3\">\n                    {{detail['email']}}\n                  </div>\n                </div>\n                <div *ngIf=\"fieldHasValue(detail['phone'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Phone:</label></div>\n                  <div class=\"ml-3\">\n                    {{detail['phone']}}\n                  </div>\n                </div>\n              </div>\n              <div class=\"d-flex flex-row mt-1\">\n              </div>\n            </div>\n          </div>\n          <div class=\"card-action-icons\">\n            <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n            <a [routerLink]=\"['.']\" (click)=\"onArchive(detail['_id'], i, archivedSearch)\">\n              <i *ngIf=\"!archivedSearch\" class=\"fa fa-archive\" title=\"Archive\"></i>\n              <i *ngIf=\"archivedSearch\" class=\"fas fa-trash-restore\" title=\"Unarchive\"></i>\n            </a>\n            <input class=\"list-check-box\" type=\"checkbox\" [ngModel]=\"checkedItem[i]\" (click)=\"selectOneItem(i)\" />\n          </div>\n        </div>\n        <hr class=\"list-devider\">\n      </div>\n    </div>\n    <div class=\"gridview\" *ngIf=\"isShowListView('grid')\">\n      <div class=\"grid-block\" *ngFor=\"let detail of list;  let i = index; let list_index = index;\">\n        <div class=\"card text-left h-100\" [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i],\n\t\t\t\t\t\t\t'clickable-card': clickItemAction}\">\n          <div class=\"grid-fields\" [ngClass]=\"{pointer: clickItemAction}\" (click)=\"clickOneItem(i)\">\n            <div class=\"card-header grid-head\">\n              <div class=\"grid-head-picture\">\n                <lib-mdds-file-display [downloadUrl]=\"detail['photo']\" [isLarge]=\"false\" [aspectRatio]=\"\"></lib-mdds-file-display>\n              </div>\n              <div>\n                <h5>\n                  <div class=\"mr-1 d-inline-block\">\n                    {{detail['firstname']}}\n                  </div>\n                  <div class=\"mr-1 d-inline-block\">\n                    {{detail['lastname']}}\n                  </div>\n                </h5>\n              </div>\n            </div>\n            <div class=\"card-body\">\n              <div *ngIf=\"fieldHasValue(detail['email'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>Email:</label></div>\n                <div class=\"ml-3\">\n                  {{detail['email']}}</div>\n              </div>\n              <div *ngIf=\"fieldHasValue(detail['phone'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>Phone:</label></div>\n                <div class=\"ml-3\">\n                  {{detail['phone']}}</div>\n              </div>\n            </div>\n          </div>\n          <div class=\"card-action-icons\">\n            <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n            <a routerLink=\".\" (click)=\"onArchive(detail['_id'], i, archivedSearch)\">\n              <i *ngIf=\"!archivedSearch\" class=\"fa fa-archive\" title=\"Archive\"></i>\n              <i *ngIf=\"archivedSearch\" class=\"fas fa-trash-restore\" title=\"Unarchive\"></i>\n            </a>\n            <input class=\"list-check-box\" type=\"checkbox\" [ngModel]=\"checkedItem[i]\" (click)=\"selectOneItem(i)\" />\n          </div>\n        </div>\n      </div>\n    </div>\n    <table *ngIf=\"isShowListView('table')\" class=\"table table-bordered table-hover\">\n      <thead class=\"thead-light\">\n        <tr>\n          <th scope=\"col\">#</th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('firstname', 'Firstname')\"> Firstname <span *ngIf=\"listSortField === 'firstname'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('lastname', 'Lastname')\"> Lastname <span *ngIf=\"listSortField === 'lastname'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th scope=\"col\"> Photo </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('email', 'Email')\"> Email <span *ngIf=\"listSortField === 'email'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('phone', 'Phone')\"> Phone <span *ngIf=\"listSortField === 'phone'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th scope=\"col\" style=\"width:7.8rem;\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        <ng-template ngFor let-detail [ngForOf]=\"list\" let-i=\"index\">\n          <tr [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i]}\">\n            <td scope=\"row\" (click)=\"clickOneItem(i)\" class=\"pointer read-more mt-3\">\n              {{(page-1)*perPage+i+1}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['firstname']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['lastname']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              <lib-mdds-file-display [downloadUrl]=\"detail['photo']\" [isLarge]=\"false\" [aspectRatio]=\"\"></lib-mdds-file-display>\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['email']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['phone']}}\n            </td>\n            <td>\n              <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n              <a routerLink=\".\" (click)=\"onArchive(detail['_id'], i, archivedSearch)\">\n                <i *ngIf=\"!archivedSearch\" class=\"fa fa-archive\" title=\"Archive\"></i>\n                <i *ngIf=\"archivedSearch\" class=\"fas fa-trash-restore\" title=\"Unarchive\"></i>\n              </a>\n              <input class=\"list-check-box\" type=\"checkbox\" [ngModel]=\"checkedItem[i]\" (click)=\"selectOneItem(i)\" />\n            </td>\n          </tr>\n        </ng-template>\n      </tbody>\n    </table>\n  </div>\n  <div class=\"container\">\n    <div *ngIf=\"!options['disablePagination']\">\n      <div class=\"row justify-content-end mt-3\">\n      </div>\n      <div class=\"d-flex justify-content-between\">\n        <div>\n        </div>\n        <div>\n          <div class=\"total_counts\">\n            <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n        <div *ngIf=\"totalPages > 1\">\n          <ul class=\"pagination justify-content-center\">\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n                <span aria-hidden=\"true\">&laquo;</span>\n                <span class=\"sr-only\">Previous</span>\n              </a>\n            </li>\n            <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n            </li>\n            <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n                <span class=\"sr-only\">Next</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n          <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import {\n  HttpClient\n} from '@angular/common/http';\nimport {\n  MddsBaseService\n} from '@hicoder/angular-core';\nconst servicePath = '/member/';\nexport class MemberBaseService extends MddsBaseService {\n  constructor(http: HttpClient, serverRootUrl: string) {\n    const serviceUrl = serverRootUrl + servicePath;\n    super(http, serviceUrl);\n  }\n}","import {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  MddsBaseComponent,\n  ViewType\n} from '@hicoder/angular-core';\nimport {\n  Component,\n  OnInit,\n  Injector,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  MemberService\n} from './member.service';\nconst itemCamelName = 'member';\nexport {\n  ViewType\n};\nimport {\n  ViewChild\n} from '@angular/core';\nimport {\n  ElementRef\n} from '@angular/core';\n@Component({\n  template: '',\n})\nexport class MemberComponent extends MddsBaseComponent implements OnInit {\n  // *** common input fields\n  @Input()\n  public style: any; // {}\n  @Input()\n  public options: any; // {} uiOptions\n  @Input()\n  public searchObj: any;\n  // *** list component\n  @Input()\n  public inputData: any;\n  @Input()\n  public queryParams: any; // {listSortField: 'a', listSortOrder: 'asc' / 'desc', perPage: 6}\n  @Input()\n  public categoryBy: string; //field name whose value is used as category\n  // list-asso component\n  @Input('asso') public associationField: string;\n  // list select component\n  @Output() outputData: any;\n  // *** edit / create component\n  @Input()\n  public id: string;\n  @Input()\n  public cid: string; // copy id\n  @Input()\n  public initData: any; // some fields has data already. eg: {a: b}. Used for add\n  @Input()\n  public embeddedView: boolean;\n  @Input()\n  public embedMode: string; // parent to tell the action - create\n  @Output()\n  public doneData = new EventEmitter < boolean > ();\n  @Output()\n  public done = new EventEmitter < any > ();\n  // *** detail component\n  // @Input() \n  // public id:string;\n  @Input()\n  public disableActionButtions: boolean;\n  @Output()\n  public eventEmitter: EventEmitter < any > = new EventEmitter();\n  // detail sub component\n  // @Input() inputData;\n  // detail show field component\n  // @Input() id: string;\n  @Input() detailObj: any;\n  @Input() showFieldsStr: string;\n  // detail sel component\n  //@Input() inputData;\n  //@Output() outputData;\n  // detail pop component\n  // @Input() inputData;\n  // @Output() outputData;\n  @ViewChild('MembershipModal', {\n    static: true\n  }) public focusEl: ElementRef;\n  constructor(public memberService: MemberService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(memberService, injector, router, route, location);\n    this.setItemNames(itemCamelName);\n    this.briefFieldsInfo = [];\n    this.briefFieldsInfo.push(['firstname', 'Firstname']);\n    this.briefFieldsInfo.push(['lastname', 'Lastname']);\n    this.briefFieldsInfo.push(['photo', 'Photo']);\n    this.briefFieldsInfo.push(['email', 'Email']);\n    this.briefFieldsInfo.push(['phone', 'Phone']);\n    this.requiredFields = ['email', ];\n    this.emailFields = [\n      ['Email', 'email'],\n    ];\n    this.schemaName = 'member';\n    this.modulePath = 'membership';\n    this.indexFields = ['firstname', 'lastname', ];\n  }\n  ngOnInit() {\n    this.style = this.style || {};\n    this.options = this.options || {};\n  }\n}","import {\n  Injectable,\n  Inject,\n  OnDestroy,\n  SkipSelf\n} from '@angular/core';\nimport {\n  HttpClient\n} from '@angular/common/http';\nimport {\n  MemberBaseService\n} from './member.base.service';\nimport {\n  Membership_SERVER_ROOT_URI\n} from '../membership.tokens';\n@Injectable({\n  providedIn: 'root',\n})\nexport class MemberService extends MemberBaseService implements OnDestroy {\n  constructor(http: HttpClient, @Inject(Membership_SERVER_ROOT_URI) private membershipServerRootUri: string) {\n    super(http, membershipServerRootUri);\n  }\n  ngOnDestroy() {}\n}","import {\n  NgModule\n} from '@angular/core';\nimport {\n  RouterModule\n} from '@angular/router';\nimport {\n  MembershipComponent\n} from './membership.component';\nimport {\n  MembershipCoreRoutes\n} from '../membership-cust/membership.conf';\n@NgModule({\n  imports: [RouterModule.forChild(MembershipCoreRoutes)],\n  exports: [RouterModule],\n  providers: [],\n})\nexport class MembershipRoutingCoreModule {}","// Import components for each schema\nimport {\n  MemberListComponent\n} from './member/member-list/member-list.component';\nimport {\n  MemberDetailComponent\n} from './member/member-detail/member-detail.component';\nimport {\n  MemberEditComponent\n} from './member/member-edit/member-edit.component';\nimport {\n  AdditionalinfoListComponent\n} from './additionalinfo/additionalinfo-list/additionalinfo-list.component';\nimport {\n  AdditionalinfoDetailComponent\n} from './additionalinfo/additionalinfo-detail/additionalinfo-detail.component';\nimport {\n  AdditionalinfoEditComponent\n} from './additionalinfo/additionalinfo-edit/additionalinfo-edit.component';\nimport {\n  AdditionalinfoListSubComponent\n} from './additionalinfo/additionalinfo-list/additionalinfo-list-sub.component';\nimport {\n  BoardListComponent\n} from './board/board-list/board-list.component';\nimport {\n  BoardDetailComponent\n} from './board/board-detail/board-detail.component';\nimport {\n  BoardEditComponent\n} from './board/board-edit/board-edit.component';\nimport {\n  LeadListComponent\n} from './lead/lead-list/lead-list.component';\nimport {\n  LeadDetailComponent\n} from './lead/lead-detail/lead-detail.component';\nimport {\n  LeadEditComponent\n} from './lead/lead-edit/lead-edit.component';\nimport {\n  AuthGuard\n} from '@hicoder/angular-auth';\nconst additionalinfoSubPath = [{\n  path: 'list',\n  component: AdditionalinfoListSubComponent\n}];\nconst memberDetailPath = [{\n  path: 'additionalinfo',\n  children: additionalinfoSubPath,\n  data: {\n    'mraLevel': 2,\n    'item': 'additionalinfo'\n  }\n}, ];\nexport const memberRoutingCorePath = [{\n  path: 'list',\n  component: MemberListComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'detail/:id',\n  component: MemberDetailComponent,\n  children: memberDetailPath,\n  canActivate: [AuthGuard]\n}, {\n  path: 'edit/:id',\n  component: MemberEditComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: '**',\n  redirectTo: 'list',\n  pathMatch: 'full'\n}];\nexport const additionalinfoRoutingCorePath = [{\n  path: 'list',\n  component: AdditionalinfoListComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'detail/:id',\n  component: AdditionalinfoDetailComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'edit/:id',\n  component: AdditionalinfoEditComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'new',\n  component: AdditionalinfoEditComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: '**',\n  redirectTo: 'list',\n  pathMatch: 'full'\n}];\nexport const boardRoutingCorePath = [{\n  path: 'list',\n  component: BoardListComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'detail/:id',\n  component: BoardDetailComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'edit/:id',\n  component: BoardEditComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'new',\n  component: BoardEditComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: '**',\n  redirectTo: 'list',\n  pathMatch: 'full'\n}];\nexport const leadRoutingCorePath = [{\n  path: 'list',\n  component: LeadListComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'detail/:id',\n  component: LeadDetailComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'edit/:id',\n  component: LeadEditComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'new',\n  component: LeadEditComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: '**',\n  redirectTo: 'list',\n  pathMatch: 'full'\n}];","import {\n  NgModule\n} from '@angular/core';\nimport {\n  RouterModule\n} from '@angular/router';\nimport {\n  MembershipRoutes\n} from '../membership-cust/membership.conf';\n@NgModule({\n  imports: [RouterModule.forChild(MembershipRoutes)],\n  exports: [RouterModule],\n  providers: [],\n})\nexport class MembershipRoutingModule {}","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  ViewContainerRef,\n  Directive\n} from '@angular/core';\n@Directive({\n  selector: '[membership-ref-select]',\n})\nexport class MembershipRefSelectDirective {\n  constructor(public viewContainerRef: ViewContainerRef) {}\n}\n@Component({\n  selector: 'app-membership',\n  templateUrl: './membership.component.html',\n  styleUrls: ['./membership.component.css'],\n})\nexport class MembershipComponent implements OnInit {\n  constructor() {}\n  ngOnInit() {}\n}","<div class=\"container\">\n  <div class=\"card component-main-card\">\n    <div class=\"card-header\">\n      <nav class=\"nav nav-pills\">\n        <a class=\"nav-item nav-link\" routerLink=\"./member\" routerLinkActive=\"active\">Member</a>\n        <a class=\"nav-item nav-link\" routerLink=\"./additionalinfo\" routerLinkActive=\"active\">AdditionalInfo</a>\n        <a class=\"nav-item nav-link\" routerLink=\"./board\" routerLinkActive=\"active\">Board Members</a>\n        <a class=\"nav-item nav-link\" routerLink=\"./lead\" routerLinkActive=\"active\">Team Leads</a>\n      </nav>\n    </div>\n    <div class=\"card-body\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>","import {\n  NgModule\n} from '@angular/core';\nimport {\n  CommonModule\n} from '@angular/common';\nimport {\n  FormsModule\n} from '@angular/forms';\nimport {\n  FileUploadModule\n} from '@hicoder/angular-file';\nimport {\n  ActionEmailModule\n} from '@hicoder/angular-action-email';\nimport {\n  MddsCoreModule\n} from '@hicoder/angular-core';\nimport {\n  MembershipRoutingCoreModule\n} from './membership-routing.core.module';\nimport {\n  MembershipComponent\n} from './membership.component';\nimport {\n  MembershipRefSelectDirective\n} from './membership.component';\n// Import components for each schema\nimport {\n  MemberComponent\n} from './member/member.component';\nimport {\n  MemberListComponent\n} from './member/member-list/member-list.component';\nimport {\n  MemberListCustComponent\n} from '../membership-cust/base/member/member-list.cust.component';\nimport {\n  MemberDetailComponent\n} from './member/member-detail/member-detail.component';\nimport {\n  MemberDetailCustComponent\n} from '../membership-cust/base/member/member-detail.cust.component';\nimport {\n  MemberDetailFieldComponent\n} from './member/member-detail/member-detail-field.component';\nimport {\n  MemberEditComponent\n} from './member/member-edit/member-edit.component';\nimport {\n  MemberEditCustComponent\n} from '../membership-cust/base/member/member-edit.cust.component';\nimport {\n  AdditionalinfoComponent\n} from './additionalinfo/additionalinfo.component';\nimport {\n  AdditionalinfoListComponent\n} from './additionalinfo/additionalinfo-list/additionalinfo-list.component';\nimport {\n  AdditionalinfoListCustComponent\n} from '../membership-cust/base/additionalinfo/additionalinfo-list.cust.component';\nimport {\n  AdditionalinfoDetailComponent\n} from './additionalinfo/additionalinfo-detail/additionalinfo-detail.component';\nimport {\n  AdditionalinfoDetailCustComponent\n} from '../membership-cust/base/additionalinfo/additionalinfo-detail.cust.component';\nimport {\n  AdditionalinfoDetailFieldComponent\n} from './additionalinfo/additionalinfo-detail/additionalinfo-detail-field.component';\nimport {\n  AdditionalinfoEditComponent\n} from './additionalinfo/additionalinfo-edit/additionalinfo-edit.component';\nimport {\n  AdditionalinfoEditCustComponent\n} from '../membership-cust/base/additionalinfo/additionalinfo-edit.cust.component';\nimport {\n  BoardComponent\n} from './board/board.component';\nimport {\n  BoardListComponent\n} from './board/board-list/board-list.component';\nimport {\n  BoardListCustComponent\n} from '../membership-cust/base/board/board-list.cust.component';\nimport {\n  BoardDetailComponent\n} from './board/board-detail/board-detail.component';\nimport {\n  BoardDetailCustComponent\n} from '../membership-cust/base/board/board-detail.cust.component';\nimport {\n  BoardDetailFieldComponent\n} from './board/board-detail/board-detail-field.component';\nimport {\n  BoardEditComponent\n} from './board/board-edit/board-edit.component';\nimport {\n  BoardEditCustComponent\n} from '../membership-cust/base/board/board-edit.cust.component';\nimport {\n  LeadComponent\n} from './lead/lead.component';\nimport {\n  LeadListComponent\n} from './lead/lead-list/lead-list.component';\nimport {\n  LeadListCustComponent\n} from '../membership-cust/base/lead/lead-list.cust.component';\nimport {\n  LeadDetailComponent\n} from './lead/lead-detail/lead-detail.component';\nimport {\n  LeadDetailCustComponent\n} from '../membership-cust/base/lead/lead-detail.cust.component';\nimport {\n  LeadDetailFieldComponent\n} from './lead/lead-detail/lead-detail-field.component';\nimport {\n  LeadEditComponent\n} from './lead/lead-edit/lead-edit.component';\nimport {\n  LeadEditCustComponent\n} from '../membership-cust/base/lead/lead-edit.cust.component';\nimport {\n  MemberListSelectComponent\n} from './member/member-list/member-list-select.component';\nimport {\n  MemberDetailPopComponent\n} from './member/member-detail/member-detail-pop.component';\nimport {\n  MemberDetailSelComponent\n} from './member/member-detail/member-detail-sel.component';\nimport {\n  AdditionalinfoListSubComponent\n} from './additionalinfo/additionalinfo-list/additionalinfo-list-sub.component';\nimport {\n  AdditionalinfoDetailSubComponent\n} from './additionalinfo/additionalinfo-detail/additionalinfo-detail-sub.component';\nimport {\n  MembershipMemberDirectiveEmail\n} from './member/member-edit/member-edit.component';\nimport {\n  MembershipMemberDirectivePhone\n} from './member/member-edit/member-edit.component';\nimport {\n  MembershipBoardDirectiveEmail\n} from './board/board-edit/board-edit.component';\nimport {\n  MembershipLeadDirectiveEmail\n} from './lead/lead-edit/lead-edit.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MddsCoreModule,\n    FileUploadModule,\n    ActionEmailModule,\n    MembershipRoutingCoreModule,\n  ],\n  declarations: [\n    MembershipComponent,\n    MembershipRefSelectDirective,\n    MemberComponent,\n    MemberListComponent,\n    MemberListCustComponent,\n    MemberDetailCustComponent,\n    MemberDetailComponent,\n    MemberDetailFieldComponent,\n    MemberEditComponent,\n    MemberEditCustComponent,\n    AdditionalinfoComponent,\n    AdditionalinfoListComponent,\n    AdditionalinfoListCustComponent,\n    AdditionalinfoDetailCustComponent,\n    AdditionalinfoDetailComponent,\n    AdditionalinfoDetailFieldComponent,\n    AdditionalinfoEditComponent,\n    AdditionalinfoEditCustComponent,\n    BoardComponent,\n    BoardListComponent,\n    BoardListCustComponent,\n    BoardDetailCustComponent,\n    BoardDetailComponent,\n    BoardDetailFieldComponent,\n    BoardEditComponent,\n    BoardEditCustComponent,\n    LeadComponent,\n    LeadListComponent,\n    LeadListCustComponent,\n    LeadDetailCustComponent,\n    LeadDetailComponent,\n    LeadDetailFieldComponent,\n    LeadEditComponent,\n    LeadEditCustComponent,\n    MemberListSelectComponent,\n    MemberDetailPopComponent,\n    MemberDetailSelComponent,\n    AdditionalinfoListSubComponent,\n    AdditionalinfoDetailSubComponent,\n    MembershipMemberDirectiveEmail,\n    MembershipMemberDirectivePhone,\n    MembershipBoardDirectiveEmail,\n    MembershipLeadDirectiveEmail,\n  ],\n  exports: [\n    MembershipComponent,\n    MemberListComponent,\n    MemberDetailComponent,\n    MemberDetailFieldComponent,\n    MemberEditComponent,\n    AdditionalinfoListComponent,\n    AdditionalinfoDetailComponent,\n    AdditionalinfoDetailFieldComponent,\n    AdditionalinfoEditComponent,\n    BoardListComponent,\n    BoardDetailComponent,\n    BoardDetailFieldComponent,\n    BoardEditComponent,\n    LeadListComponent,\n    LeadDetailComponent,\n    LeadDetailFieldComponent,\n    LeadEditComponent,\n    MemberListSelectComponent,\n    MemberDetailPopComponent,\n    MemberDetailSelComponent,\n    AdditionalinfoListSubComponent,\n    AdditionalinfoDetailSubComponent,\n    MembershipMemberDirectiveEmail,\n    MembershipMemberDirectivePhone,\n    MembershipBoardDirectiveEmail,\n    MembershipLeadDirectiveEmail,\n  ],\n  providers: [],\n  entryComponents: [\n    MemberListSelectComponent,\n    MemberDetailPopComponent,\n    MemberDetailSelComponent,\n    AdditionalinfoEditComponent,\n    BoardEditComponent,\n    LeadEditComponent,\n  ]\n})\nexport class MembershipCoreModule {}","import {\n  NgModule\n} from '@angular/core';\nimport {\n  MembershipRoutingModule\n} from './membership-routing.module';\nimport {\n  MembershipCoreModule\n} from './membership.core.module';\nimport {\n  MembershipCustModule\n} from '../membership-cust/membership.cust.module'\n@NgModule({\n  imports: [\n    MembershipRoutingModule,\n    MembershipCoreModule,\n    MembershipCustModule,\n  ],\n  declarations: [],\n  exports: [\n    MembershipCoreModule,\n    MembershipCustModule,\n  ],\n  providers: [],\n  entryComponents: []\n})\nexport class MembershipModule {}","import {\n  InjectionToken\n} from '@angular/core';\nimport {\n  membership_server_root_uri\n} from '../membership-cust/membership.tokens.value';\nexport const Membership_SERVER_ROOT_URI = new InjectionToken < string > ('Membership_SERVER_ROOT_URI', {\n  factory: (): string => membership_server_root_uri,\n  providedIn: 'root',\n}, );"]}
{"version":3,"sources":["webpack:///src/app/files-cust/base/mfile/mfile-edit.cust.component.ts","webpack:///src/app/files-cust/base/mfile/mfile-list.cust.component.ts","webpack:///src/app/files-cust/base/mfilegroup/mfilegroup-detail.cust.component.ts","webpack:///src/app/files-cust/base/mfilegroup/mfilegroup-edit.cust.component.ts","webpack:///src/app/files-cust/base/mfilegroup/mfilegroup-list.cust.component.ts","webpack:///src/app/files-cust/files-routing.cust.path.ts","webpack:///src/app/files-cust/files.conf.ts","webpack:///src/app/files-cust/files.cust.module.ts","webpack:///src/app/files-cust/files.tokens.value.ts","webpack:///src/app/files/files-routing.core.module.ts","webpack:///src/app/files/files-routing.core.path.ts","webpack:///src/app/files/files-routing.module.ts","webpack:///src/app/files/files.component.ts","webpack:///src/app/files/files.component.html","webpack:///src/app/files/files.core.module.ts","webpack:///src/app/files/files.directive.ts","webpack:///src/app/files/files.module.ts","webpack:///src/app/files/files.tokens.ts","webpack:///src/app/files/mfile/mfile-detail/mfile-detail-field.component.ts","webpack:///src/app/files/mfile/mfile-detail/mfile-detail-field.component.html","webpack:///src/app/files/mfile/mfile-edit/mfile-edit.component.ts","webpack:///src/app/files/mfile/mfile-edit/mfile-edit.component.html","webpack:///src/app/files/mfile/mfile-list/mfile-list-sub.component.ts","webpack:///src/app/files/mfile/mfile-list/mfile-list-sub.component.html","webpack:///src/app/files/mfile/mfile-list/mfile-list.component.ts","webpack:///src/app/files/mfile/mfile-list/mfile-list.component.html","webpack:///src/app/files/mfile/mfile.base.service.ts","webpack:///src/app/files/mfile/mfile.component.ts","webpack:///src/app/files/mfile/mfile.service.ts","webpack:///src/app/files/mfilegroup/mfilegroup-detail/mfilegroup-detail-field.component.ts","webpack:///src/app/files/mfilegroup/mfilegroup-detail/mfilegroup-detail-field.component.html","webpack:///src/app/files/mfilegroup/mfilegroup-detail/mfilegroup-detail-pop.component.ts","webpack:///src/app/files/mfilegroup/mfilegroup-detail/mfilegroup-detail-pop.component.html","webpack:///src/app/files/mfilegroup/mfilegroup-detail/mfilegroup-detail-sel.component.ts","webpack:///src/app/files/mfilegroup/mfilegroup-detail/mfilegroup-detail-sel.component.html","webpack:///src/app/files/mfilegroup/mfilegroup-detail/mfilegroup-detail.component.ts","webpack:///src/app/files/mfilegroup/mfilegroup-detail/mfilegroup-detail.component.html","webpack:///src/app/files/mfilegroup/mfilegroup-edit/mfilegroup-edit.component.ts","webpack:///src/app/files/mfilegroup/mfilegroup-edit/mfilegroup-edit.component.html","webpack:///src/app/files/mfilegroup/mfilegroup-list/mfilegroup-list-select-index.component.ts","webpack:///src/app/files/mfilegroup/mfilegroup-list/mfilegroup-list-select-index.component.html","webpack:///src/app/files/mfilegroup/mfilegroup-list/mfilegroup-list-select.component.ts","webpack:///src/app/files/mfilegroup/mfilegroup-list/mfilegroup-list-select.component.html","webpack:///src/app/files/mfilegroup/mfilegroup-list/mfilegroup-list.component.ts","webpack:///src/app/files/mfilegroup/mfilegroup-list/mfilegroup-list.component.html","webpack:///src/app/files/mfilegroup/mfilegroup.base.service.ts","webpack:///src/app/files/mfilegroup/mfilegroup.component.ts","webpack:///src/app/files/mfilegroup/mfilegroup.service.ts"],"names":["MfileEditCustComponent","template","MfileListCustComponent","MfilegroupDetailCustComponent","MfilegroupEditCustComponent","MfilegroupListCustComponent","FilesRoutingCustPath","FilesCoreRoutes","path","component","children","redirectTo","pathMatch","data","mraLevel","item","FilesRoutes","files_server_root_uri","FilesCustModule","imports","declarations","exports","providers","entryComponents","FilesRoutingCoreModule","forChild","mfileSubPath","mfilegroupDetailPath","mfileRoutingCorePath","canActivate","mfilegroupRoutingCorePath","FilesRoutingModule","FilesRefSelectDirective","viewContainerRef","selector","FilesComponent","templateUrl","styleUrls","FilesCoreModule","provide","useClass","MraNgbDateFormatterService","dateFormat","timeFormat","value","date","FilesModule","Files_SERVER_ROOT_URI","factory","providedIn","$event","MfileDetailFieldComponent","mfileService","injector","router","route","location","view","DETAIL","fieldDisplayNames","stringFields","push","referenceFields","dateFields","numberFields","arrayFields","showFieldsStr","console","error","showFields","match","detailObj","onDetailReturned","id","populateDetail","target","blur","length","MfileEditComponent","componentFactoryResolver","minDate","year","Date","getFullYear","month","day","EDIT","detail","formatDetail","embedMode","action","getDetailData","snapshot","paramMap","get","populateDetailForAction","cid","queryParamMap","populateDetailFromCopy","searchHintFieldValues","$","tooltip","initData","Object","keys","prop","hiddenFields","MfileListSubComponent","listCategory1","listCategory2","clickItemAction","adjustListViewForWindowSize","ref","getParentRouteRefField","parentSchema","referenceFieldsReverseMap","parentItemId","getParentRouteItemId","parentData","some","x","searchList","MfileListComponent","LIST","listViewFilter","listCategories","itemMultiSelect","options","disableCatetory","searchObj","searchDetailReady","queryParams","listSortField","listSortOrder","perPage","servicePath","MfileBaseService","http","serverRootUrl","serviceUrl","itemCamelName","MfileComponent","doneData","done","eventEmitter","selectComponents","setItemNames","briefFieldsInfo","referenceFieldsMap","schemaName","modulePath","indexFields","style","MfileService","filesServerRootUri","MfilegroupDetailFieldComponent","mfilegroupService","MfilegroupDetailPopComponent","majorUi","inputData","uiOnEscapeKey","uiCloseModal","MfilegroupDetailSelComponent","MfilegroupDetailComponent","populateDetailByFields","isChildRouterActivated","navigate","relativeTo","queryParamsHandling","MfilegroupEditComponent","MfilegroupListSelectIndexComponent","MfilegroupListSelectComponent","selectedId","populateList","MfilegroupListComponent","MfilegroupBaseService","MfilegroupComponent","requiredFields","MfilegroupService"],"mappings":"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","file":"files-files-module-es5.js","sourcesContent":["import { Input, Component } from '@angular/core';\n\nimport { MfileComponent } from '../../../files/mfile/mfile.component';\n\n@Component({\n    template: '',\n})\nexport class MfileEditCustComponent extends MfileComponent {        \n}\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:54 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  MfileComponent\n} from '../../../files/mfile/mfile.component';\n@Component({\n  template: '',\n})\nexport class MfileEditCustComponent extends MfileComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { MfileComponent } from '../../../files/mfile/mfile.component';\n\n@Component({\n    template: '',\n})\nexport class MfileListCustComponent extends MfileComponent {\n}\n\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:54 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  MfileComponent\n} from '../../../files/mfile/mfile.component';\n@Component({\n  template: '',\n})\nexport class MfileListCustComponent extends MfileComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { MfilegroupComponent } from '../../../files/mfilegroup/mfilegroup.component';\n\n@Component({\n    template: '',\n})\nexport class MfilegroupDetailCustComponent extends MfilegroupComponent {\n}\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:54 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  MfilegroupComponent\n} from '../../../files/mfilegroup/mfilegroup.component';\n@Component({\n  template: '',\n})\nexport class MfilegroupDetailCustComponent extends MfilegroupComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { MfilegroupComponent } from '../../../files/mfilegroup/mfilegroup.component';\n\n@Component({\n    template: '',\n})\nexport class MfilegroupEditCustComponent extends MfilegroupComponent {        \n}\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:54 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  MfilegroupComponent\n} from '../../../files/mfilegroup/mfilegroup.component';\n@Component({\n  template: '',\n})\nexport class MfilegroupEditCustComponent extends MfilegroupComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { MfilegroupComponent } from '../../../files/mfilegroup/mfilegroup.component';\n\n@Component({\n    template: '',\n})\nexport class MfilegroupListCustComponent extends MfilegroupComponent {\n}\n\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:54 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  MfilegroupComponent\n} from '../../../files/mfilegroup/mfilegroup.component';\n@Component({\n  template: '',\n})\nexport class MfilegroupListCustComponent extends MfilegroupComponent {}**** End of recent updates.<<<*/\n","\n\n// Path under files/cust/\nexport const FilesRoutingCustPath = [\n  // your customization goes here\n];\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:54 GMT-0700 (Pacific Daylight Time)\n\n// Path under files/cust/\nexport const FilesRoutingCustPath = [\n  // your customization goes here\n];**** End of recent updates.<<<*/\n","import { Routes } from '@angular/router';\n\nimport { FilesComponent } from '../files/files.component';\n\n//Import routing paths\nimport { \n  mfileRoutingCorePath, \n  mfilegroupRoutingCorePath,  \n} from '../files/files-routing.core.path';\n\nexport const FilesCoreRoutes: Routes = [\n  { \n    // Lazy Load: and add to app routing: \n    //     { path: 'files', loadChildren: () => import('./files/files.module').then(m => m.FilesModule) },\n    path: '',\n    // non lazy load config. Include module in app module.\n    // path: 'files',\n\n    component: FilesComponent,\n    children: [\n      {path: '',  redirectTo: 'mfile', pathMatch: 'full'},\n\n      { path: 'mfile',\n        children: mfileRoutingCorePath,\n        data: {mraLevel: 1, item: 'mfile'}\n      },\n      { path: 'mfilegroup',\n        children: mfilegroupRoutingCorePath,\n        data: {mraLevel: 1, item: 'mfilegroup'}\n      },\n    ]\n  },\n];\n\nimport { FilesRoutingCustPath } from './files-routing.cust.path';\n\nexport const FilesRoutes: Routes = [\n  {\n    // Lazy Load: and add to app routing: \n    //     { path: 'files', loadChildren: () => import('./files/files.module').then(m => m.FilesModule) },\n    path: 'cust',\n    // non lazy load config. Include module in app module.\n    // path: 'files/cust',\n\n    children: FilesRoutingCustPath,\n  },\n];\n\nexport const files_server_root_uri: string = '/api/files';\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:53 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Routes\n} from '@angular/router';\nimport {\n  FilesComponent\n} from '../files/files.component';\n//Import routing paths\nimport {\n  mfileRoutingCorePath,\n  mfilegroupRoutingCorePath,\n} from '../files/files-routing.core.path';\nexport const FilesCoreRoutes: Routes = [{\n  // Lazy Load: and add to app routing:\n  //     { path: 'files', loadChildren: () => import('./files/files.module').then(m => m.FilesModule) },\n  path: '',\n  // non lazy load config. Include module in app module.\n  // path: 'files',\n  component: FilesComponent,\n  children: [{\n    path: '',\n    redirectTo: 'mfile',\n    pathMatch: 'full'\n  }, {\n    path: 'mfile',\n    children: mfileRoutingCorePath,\n    data: {\n      mraLevel: 1,\n      item: 'mfile'\n    }\n  }, {\n    path: 'mfilegroup',\n    children: mfilegroupRoutingCorePath,\n    data: {\n      mraLevel: 1,\n      item: 'mfilegroup'\n    }\n  }, ]\n}, ];\nimport {\n  FilesRoutingCustPath\n} from './files-routing.cust.path';\nexport const FilesRoutes: Routes = [{\n  // Lazy Load: and add to app routing:\n  //     { path: 'files', loadChildren: () => import('./files/files.module').then(m => m.FilesModule) },\n  path: 'cust',\n  // non lazy load config. Include module in app module.\n  // path: 'files/cust',\n  children: FilesRoutingCustPath,\n}, ];**** End of recent updates.<<<*/\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { FilesCoreModule } from '../files/files.core.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n  \n    FilesCoreModule,\n  ],\n  declarations: [\n  ],\n  exports: [\n  ],\n  providers: [\n  ],\n  entryComponents: [\n  ],\n})\nexport class FilesCustModule { }\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:54 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  NgModule\n} from '@angular/core';\nimport {\n  CommonModule\n} from '@angular/common';\nimport {\n  RouterModule\n} from '@angular/router';\nimport {\n  FormsModule\n} from '@angular/forms';\nimport {\n  FilesCoreModule\n} from '../files/files.core.module';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    FilesCoreModule,\n  ],\n  declarations: [],\n  exports: [],\n  providers: [],\n  entryComponents: [],\n})\nexport class FilesCustModule {}**** End of recent updates.<<<*/\n","export const files_server_root_uri: string = '/api/files';\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:54 GMT-0700 (Pacific Daylight Time)\n\nexport const files_server_root_uri: string = '/api/files';**** End of recent updates.<<<*/\n","import {\n  NgModule\n} from '@angular/core';\nimport {\n  RouterModule\n} from '@angular/router';\nimport {\n  FilesComponent\n} from './files.component';\nimport {\n  FilesCoreRoutes\n} from '../files-cust/files.conf';\n@NgModule({\n  imports: [RouterModule.forChild(FilesCoreRoutes)],\n  exports: [RouterModule],\n  providers: [],\n})\nexport class FilesRoutingCoreModule {}","// Import components for each schema\nimport {\n  MfileListComponent\n} from './mfile/mfile-list/mfile-list.component';\nimport {\n  MfileEditComponent\n} from './mfile/mfile-edit/mfile-edit.component';\nimport {\n  MfileListSubComponent\n} from './mfile/mfile-list/mfile-list-sub.component';\nimport {\n  MfilegroupListComponent\n} from './mfilegroup/mfilegroup-list/mfilegroup-list.component';\nimport {\n  MfilegroupDetailComponent\n} from './mfilegroup/mfilegroup-detail/mfilegroup-detail.component';\nimport {\n  MfilegroupEditComponent\n} from './mfilegroup/mfilegroup-edit/mfilegroup-edit.component';\nimport {\n  AuthGuard\n} from '@hicoder/angular-auth';\nconst mfileSubPath = [{\n  path: 'list',\n  component: MfileListSubComponent\n}];\nconst mfilegroupDetailPath = [{\n  path: 'mfile',\n  children: mfileSubPath,\n  data: {\n    'mraLevel': 2,\n    'item': 'mfile'\n  }\n}, ];\nexport const mfileRoutingCorePath = [{\n  path: 'list',\n  component: MfileListComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'edit/:id',\n  component: MfileEditComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: '**',\n  redirectTo: 'list',\n  pathMatch: 'full'\n}];\nexport const mfilegroupRoutingCorePath = [{\n  path: 'list',\n  component: MfilegroupListComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'detail/:id',\n  component: MfilegroupDetailComponent,\n  children: mfilegroupDetailPath,\n  canActivate: [AuthGuard]\n}, {\n  path: 'edit/:id',\n  component: MfilegroupEditComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'new',\n  component: MfilegroupEditComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: '**',\n  redirectTo: 'list',\n  pathMatch: 'full'\n}];","import {\n  NgModule\n} from '@angular/core';\nimport {\n  RouterModule\n} from '@angular/router';\nimport {\n  FilesRoutes\n} from '../files-cust/files.conf';\n@NgModule({\n  imports: [RouterModule.forChild(FilesRoutes)],\n  exports: [RouterModule],\n  providers: [],\n})\nexport class FilesRoutingModule {}","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  ViewContainerRef,\n  Directive\n} from '@angular/core';\n@Directive({\n  selector: '[files-ref-select]',\n})\nexport class FilesRefSelectDirective {\n  constructor(public viewContainerRef: ViewContainerRef) {}\n}\n@Component({\n  selector: 'app-files',\n  templateUrl: './files.component.html',\n  styleUrls: ['./files.component.css'],\n})\nexport class FilesComponent implements OnInit {\n  constructor() {}\n  ngOnInit() {}\n}","<div class=\"container\">\n  <div class=\"card component-main-card\">\n    <div class=\"card-header\">\n      <nav class=\"nav nav-pills\">\n        <a class=\"nav-item nav-link\" routerLink=\"./mfile\" routerLinkActive=\"active\">Picture</a>\n        <a class=\"nav-item nav-link\" routerLink=\"./mfilegroup\" routerLinkActive=\"active\">Picture Group</a>\n      </nav>\n    </div>\n    <div class=\"card-body\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>","import {\n  NgModule\n} from '@angular/core';\nimport {\n  CommonModule\n} from '@angular/common';\nimport {\n  FormsModule\n} from '@angular/forms';\nimport {\n  NgbModule,\n  NgbDateParserFormatter\n} from '@ng-bootstrap/ng-bootstrap';\nimport {\n  MraNgbDateFormatterService\n} from './files.directive';\nimport {\n  FileUploadModule\n} from '@hicoder/angular-file';\nimport {\n  MddsCoreModule\n} from '@hicoder/angular-core';\nimport {\n  FilesRoutingCoreModule\n} from './files-routing.core.module';\nimport {\n  FilesComponent\n} from './files.component';\nimport {\n  FilesRefSelectDirective\n} from './files.component';\n// Import components for each schema\nimport {\n  MfileComponent\n} from './mfile/mfile.component';\nimport {\n  MfileListComponent\n} from './mfile/mfile-list/mfile-list.component';\nimport {\n  MfileListCustComponent\n} from '../files-cust/base/mfile/mfile-list.cust.component';\nimport {\n  MfileDetailFieldComponent\n} from './mfile/mfile-detail/mfile-detail-field.component';\nimport {\n  MfileEditComponent\n} from './mfile/mfile-edit/mfile-edit.component';\nimport {\n  MfileEditCustComponent\n} from '../files-cust/base/mfile/mfile-edit.cust.component';\nimport {\n  MfilegroupComponent\n} from './mfilegroup/mfilegroup.component';\nimport {\n  MfilegroupListComponent\n} from './mfilegroup/mfilegroup-list/mfilegroup-list.component';\nimport {\n  MfilegroupListCustComponent\n} from '../files-cust/base/mfilegroup/mfilegroup-list.cust.component';\nimport {\n  MfilegroupDetailComponent\n} from './mfilegroup/mfilegroup-detail/mfilegroup-detail.component';\nimport {\n  MfilegroupDetailCustComponent\n} from '../files-cust/base/mfilegroup/mfilegroup-detail.cust.component';\nimport {\n  MfilegroupDetailFieldComponent\n} from './mfilegroup/mfilegroup-detail/mfilegroup-detail-field.component';\nimport {\n  MfilegroupEditComponent\n} from './mfilegroup/mfilegroup-edit/mfilegroup-edit.component';\nimport {\n  MfilegroupEditCustComponent\n} from '../files-cust/base/mfilegroup/mfilegroup-edit.cust.component';\nimport {\n  MfilegroupListSelectComponent\n} from './mfilegroup/mfilegroup-list/mfilegroup-list-select.component';\nimport {\n  MfilegroupListSelectIndexComponent\n} from './mfilegroup/mfilegroup-list/mfilegroup-list-select-index.component';\nimport {\n  MfilegroupDetailPopComponent\n} from './mfilegroup/mfilegroup-detail/mfilegroup-detail-pop.component';\nimport {\n  MfilegroupDetailSelComponent\n} from './mfilegroup/mfilegroup-detail/mfilegroup-detail-sel.component';\nimport {\n  MfileListSubComponent\n} from './mfile/mfile-list/mfile-list-sub.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgbModule,\n    MddsCoreModule,\n    FileUploadModule,\n    FilesRoutingCoreModule,\n  ],\n  declarations: [\n    FilesComponent,\n    FilesRefSelectDirective,\n    MfileComponent,\n    MfileListComponent,\n    MfileListCustComponent,\n    MfileDetailFieldComponent,\n    MfileEditComponent,\n    MfileEditCustComponent,\n    MfilegroupComponent,\n    MfilegroupListComponent,\n    MfilegroupListCustComponent,\n    MfilegroupDetailCustComponent,\n    MfilegroupDetailComponent,\n    MfilegroupDetailFieldComponent,\n    MfilegroupEditComponent,\n    MfilegroupEditCustComponent,\n    MfilegroupListSelectComponent,\n    MfilegroupListSelectIndexComponent,\n    MfilegroupDetailPopComponent,\n    MfilegroupDetailSelComponent,\n    MfileListSubComponent,\n  ],\n  exports: [\n    FilesComponent,\n    MfileListComponent,\n    MfileDetailFieldComponent,\n    MfileEditComponent,\n    MfilegroupListComponent,\n    MfilegroupDetailComponent,\n    MfilegroupDetailFieldComponent,\n    MfilegroupEditComponent,\n    MfilegroupListSelectComponent,\n    MfilegroupListSelectIndexComponent,\n    MfilegroupDetailPopComponent,\n    MfilegroupDetailSelComponent,\n    MfileListSubComponent,\n  ],\n  providers: [{\n    provide: NgbDateParserFormatter,\n    useClass: MraNgbDateFormatterService\n  }, ],\n  entryComponents: [\n    MfilegroupListSelectComponent,\n    MfilegroupListSelectIndexComponent,\n    MfilegroupDetailPopComponent,\n    MfilegroupDetailSelComponent,\n    MfilegroupEditComponent,\n  ]\n})\nexport class FilesCoreModule {}","import {\n  Injectable\n} from \"@angular/core\";\nimport {\n  NgbDateParserFormatter,\n  NgbDateStruct\n} from '@ng-bootstrap/ng-bootstrap';\nimport {\n  dateStructureToString,\n  stringToDateStructure\n} from '@hicoder/angular-core';\n@Injectable()\nexport class MraNgbDateFormatterService extends NgbDateParserFormatter {\n  private dateFormat = 'MM/DD/YYYY';\n  private timeFormat = 'hh:mm:ss';\n  // from input -> internal model\n  parse(value: string): NgbDateStruct {\n    return stringToDateStructure(value, this.dateFormat);\n  }\n  // from internal model -> string\n  format(date: NgbDateStruct): string {\n    return dateStructureToString(date, this.dateFormat);\n  }\n}","import {\n  NgModule\n} from '@angular/core';\nimport {\n  FilesRoutingModule\n} from './files-routing.module';\nimport {\n  FilesCoreModule\n} from './files.core.module';\nimport {\n  FilesCustModule\n} from '../files-cust/files.cust.module'\n@NgModule({\n  imports: [\n    FilesRoutingModule,\n    FilesCoreModule,\n    FilesCustModule,\n  ],\n  declarations: [],\n  exports: [\n    FilesCoreModule,\n    FilesCustModule,\n  ],\n  providers: [],\n  entryComponents: []\n})\nexport class FilesModule {}","import {\n  InjectionToken\n} from '@angular/core';\nimport {\n  files_server_root_uri\n} from '../files-cust/files.tokens.value';\nexport const Files_SERVER_ROOT_URI = new InjectionToken < string > ('Files_SERVER_ROOT_URI', {\n  factory: (): string => files_server_root_uri,\n  providedIn: 'root',\n}, );","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  MfileComponent,\n  ViewType\n} from '../mfile.component';\nimport {\n  MfileService\n} from '../mfile.service';\n@Component({\n  selector: 'app-mfile-detail-field',\n  templateUrl: './mfile-detail-field.component.html',\n  styleUrls: ['./mfile-detail.component.css']\n})\nexport class MfileDetailFieldComponent extends MfileComponent\nimplements OnInit {\n  // @Input() id: string;\n  // @Input() detailObj: any;\n  // @Input() showFieldsStr: string;\n  showFields: string[];\n  constructor(public mfileService: MfileService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(null, mfileService, injector, router, route, location);\n    this.view = ViewType.DETAIL;\n    this.fieldDisplayNames = {\n      'name': 'Name',\n      'type': 'Type',\n      'group': 'Group',\n      'labels': 'Labels',\n      'size': 'Size',\n      'link': 'Link',\n      'createdAt': 'Created at',\n      'hasThumbnail': 'Has Thumbnail',\n    };\n    this.stringFields.push('name');\n    this.stringFields.push('type');\n    this.stringFields.push('link');\n    this.referenceFields = ['group', ];\n    this.dateFields = ['createdAt', ];\n    this.numberFields = ['size', ];\n    this.arrayFields = [\n      ['labels', 'SchemaString'],\n    ];\n  }\n  ngOnInit() {\n    if (!this.showFieldsStr) {\n      console.error(\"A field has to be given to show it.\");\n      return;\n    }\n    this.showFields = this.showFieldsStr.match(/\\S+/g);\n    if (this.detailObj) {\n      this.onDetailReturned(this.detailObj, null);\n    } else {\n      if (!this.id) this.id = this.id;\n      if (this.id) this.populateDetail(this.id);\n      else {\n        console.error(\"No id provided to show info\");\n        return;\n      }\n    }\n  }\n}","<div *ngIf=\"detail && showFields.includes('name')\">\n  {{detail['name']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('type')\">\n  {{detail['type']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('group')\">\n  <a routerLink=\".\" (click)=\"onDisplayRefClicked('group', detail['group'], $event)\">\n    {{detail['group']?detail['group']['valueMedium']:\"\"}}\n  </a>\n</div>\n<div *ngIf=\"detail && showFields.includes('labels')\">\n  <div *ngIf=\"detail['labels'] && detail['labels']['selection']\">\n    <ng-template ngFor let-element [ngForOf]=\"detail['labels']['selection']\" let-idx=\"index\">\n      <div class=\"badge badge-pill badge-secondary\">\n        {{element}}\n      </div>\n    </ng-template>\n  </div>\n</div>\n<div *ngIf=\"detail && showFields.includes('size')\">\n  {{detail['size']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('link')\">\n  <lib-mdds-file-display [downloadUrl]=\"detail['link']\" [isLarge]=\"false\" [aspectRatio]=\"\"></lib-mdds-file-display>\n</div>\n<div *ngIf=\"detail && showFields.includes('createdAt')\"> {{detail['createdAt']? (detail['createdAt']['originalValue'] | date:'medium') : ''}}\n</div>\n<div *ngIf=\"detail && showFields.includes('hasThumbnail')\">{{detail['hasThumbnail']}}\n</div>","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  Directive,\n  EventEmitter\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\ndeclare const $: any;\nimport {\n  MfileEditCustComponent\n} from '../../../files-cust/base/mfile/mfile-edit.cust.component';\nimport {\n  ViewType\n} from '../mfile.component';\nimport {\n  MfileService\n} from '../mfile.service';\nimport {\n  ComponentFactoryResolver\n} from '@angular/core';\n@Component({\n  selector: 'app-mfile-edit',\n  templateUrl: './mfile-edit.component.html',\n  styleUrls: ['./mfile-edit.component.css']\n})\nexport class MfileEditComponent extends MfileEditCustComponent implements OnInit, AfterViewInit {\n  // @Input() \n  // public id: string;\n  // @Input()\n  // public cid: string; // copy id\n  // @Input()\n  // public initData: any; // some fields has data already. eg: {a: b}. Used for add\n  // @Output()\n  // public doneData = new EventEmitter<boolean>();\n  // @Output()\n  // public done = new EventEmitter<any>();\n  // @Input()\n  // public embeddedView: boolean;\n  // @Input()\n  // public embedMode: string; // parent to tell the action - create\n  public action: string;\n  public minDate = {\n    year: (new Date()).getFullYear() - 100,\n    month: 1,\n    day: 1\n  };\n  constructor(public componentFactoryResolver: ComponentFactoryResolver, public mfileService: MfileService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(componentFactoryResolver, mfileService, injector, router, route, location);\n    this.view = ViewType.EDIT;\n    this.fieldDisplayNames = {\n      'name': 'Name',\n      'group': 'Group',\n      'labels': 'Labels',\n    };\n    this.stringFields.push('name');\n    this.referenceFields = ['group', ];\n    this.arrayFields = [\n      ['labels', 'SchemaString'],\n    ];\n    const detail = {};\n    this.detail = this.formatDetail(detail);\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.embedMode == 'create') { // parent ask to create\n      this.action = 'Create';\n      this.getDetailData();\n    } else {\n      if (!this.id) this.id = this.route.snapshot.paramMap.get('id');\n      if (this.id) {\n        this.action = 'Edit';\n        this.populateDetailForAction(this.id, 'edit'); //populate with action as 'edit'\n      } else {\n        this.action = 'Create';\n        if (!this.cid) this.cid = this.route.snapshot.queryParamMap.get('cid');\n        if (this.cid) {\n          this.populateDetailFromCopy(this.cid);\n        } else {\n          this.getDetailData();\n        }\n      }\n    }\n    // get editHintFields\n    this.searchHintFieldValues();\n  }\n  ngAfterViewInit() {\n    // Initialize all tooltips\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n  getDetailData() {\n    if (this.initData) {\n      this.action = 'Add';\n      let detail = {};\n      for (let prop of Object.keys(this.initData)) {\n        detail[prop] = this.initData[prop];\n        this.hiddenFields.push(prop);\n      }\n      this.detail = this.formatDetail(detail);\n    } else {\n      let detail = {};\n      this.detail = this.formatDetail(detail);\n    }\n  }\n}","<div class=\"edit\" *ngIf=\"detail\">\n  <div class=\"card\" style=\"text-align: left;\">\n    <div class=\"card-body\">\n      <h4 class=\"card-title\" *ngIf=\"!embeddedView && !options['title']\">{{action}} Picture</h4>\n      <h4 class=\"card-title\" *ngIf=\"options['title']\" [ngStyle]=\"style['card-title']\">\n        {{options['title']}}\n      </h4>\n      <p *ngIf=\"options['subtitle']\" [ngStyle]=\"style['card-subtitle']\">\n        {{options['subtitle']}}\n      </p>\n      <form (ngSubmit)=\"onSubmit()\" #editForm=\"ngForm\">\n        <ng-template [ngIf]=\"action == 'Edit'\">\n          <ng-template [ngIf]=\"!hiddenFields.includes('name')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditName\">Name</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditName\" maxlength=\"128\" [(ngModel)]=\"detail['name']\" name=\"EditName\" #EditName=\"ngModel\">\n                <div *ngIf=\"detail['name']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('name')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditName.valid || EditName.pristine || EditName.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditName.errors && EditName.errors.maxlength\"> Name must be at most 128 characters long. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('group')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditGroup\">Group</label>\n              <!-- <a class=\"icon-search\" [routerLink]=\"['.']\" (click)=\"onRefSelect('group')\"><i class=\"fas fa-list\" title=\"Search\"></i></a>  -->\n              <div class=\"input-group\">\n                <!--  [attr.disabled]=\"true\" -->\n                <input class=\"form-control rounded\" id=\"EditGroup\" [ngClass]=\"{'pointer ref-badge': detail['group']['_id']}\" (focus)=\"onRefSelect('group')\" [ngModel]=\"detail['group']['valueMedium']\" name=\"EditGroup\" #EditGroup=\"ngModel\">\n                <div *ngIf=\"detail['group']['valueMedium']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('group')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditGroup.valid || EditGroup.pristine\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('labels')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditLabels\">Labels</label>\n              <div class=\"form-check\" ngModelGroup=\"EditLabels\" #EditLabels=\"ngModelGroup\">\n                <div class=\"badge-group\" *ngIf=\"detail['labels'] && detail['labels']['selection']\">\n                  <div class=\"badge badge-pill badge-secondary\" *ngFor=\"let element of detail['labels']['selection']; let i = index;\">\n                    {{element}}\n                    <i class=\"fas fa-times-circle icon-clear-badge\" (click)=\"clearValueFromArrayField('labels', i)\" title=\"Remove\"></i>\n                  </div>\n                  <span *ngIf=\"arraySelected('labels')\" class=\"icon-clear\" (click)=\"clearValueFromDetail('labels')\">\n                    <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                  </span>\n                </div>\n                <hr>\n                <div class=\"new-area\">\n                  <div class=\"mt-1\">\n                    <a class=\"pointer\" routerLink=\".\" (click)=\"onAddArrayItemClicked('labels')\" style=\"font-size: 0.75rem;\">\n                      <i class=\"fas fa-plus-square\" title=\"New\"></i> New </a>\n                  </div>\n                </div>\n                <div *ngIf=\"detail['labels']['adding']\" class=\"new-modal\">\n                  <div class=\"card text-center new-card\">\n                    <div class=\"card-body\">\n                      <input type=\"search\" class=\"form-control border\" id=\"EditLabelsNew\" #EditLabelsNew=\"ngModel\" [(ngModel)]=\"detail['labels']['new']\" [ngModelOptions]=\"{standalone: true}\" (keydown.enter)=\"$event.target.blur();onAddArrayItem('labels');false\">\n                      <div [hidden]=\"EditLabelsNew.valid\n                      || EditLabelsNew.pristine \n                      || EditLabelsNew.errors.minlength\" class=\"alert alert-danger small p-1\">\n                      </div>\n                      <div class=\"d-flex my-3 justify-content-center\">\n                        <button class=\"btn btn-outline-primary mx-1\" [disabled]=\"!EditLabelsNew.valid\" (click)=\"onAddArrayItem('labels')\">Confirm</button>\n                        <button class=\"btn btn-outline-secondary mx-1\" (click)=\"onAddArrayItemCancelled('labels')\">Cancel</button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <!-- fake hidden input ngModel for directive to check the values-->\n                <input type=\"checkbox\" name=\"EditLabelsSelection\" style=\"display:none\" id=\"EditLabelsSelection\" [(ngModel)]=\"detail['labels']['selection'].length\" #EditLabelsSelection=\"ngModel\">\n              </div>\n              <div [hidden]=\"EditLabels.valid || EditLabels.pristine\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n        </ng-template>\n        <ng-template [ngIf]=\"action == 'Create' || action == 'Add' \">\n          <ng-template [ngIf]=\"!hiddenFields.includes('name')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditName\">Name</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditName\" maxlength=\"128\" [(ngModel)]=\"detail['name']\" name=\"EditName\" #EditName=\"ngModel\">\n                <div *ngIf=\"detail['name']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('name')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditName.valid || EditName.pristine || EditName.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditName.errors && EditName.errors.maxlength\"> Name must be at most 128 characters long. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('group')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditGroup\">Group</label>\n              <!-- <a class=\"icon-search\" [routerLink]=\"['.']\" (click)=\"onRefSelect('group')\"><i class=\"fas fa-list\" title=\"Search\"></i></a>  -->\n              <div class=\"input-group\">\n                <!--  [attr.disabled]=\"true\" -->\n                <input class=\"form-control rounded\" id=\"EditGroup\" [ngClass]=\"{'pointer ref-badge': detail['group']['_id']}\" (focus)=\"onRefSelect('group')\" [ngModel]=\"detail['group']['valueMedium']\" name=\"EditGroup\" #EditGroup=\"ngModel\">\n                <div *ngIf=\"detail['group']['valueMedium']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('group')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditGroup.valid || EditGroup.pristine\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('labels')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditLabels\">Labels</label>\n              <div class=\"form-check\" ngModelGroup=\"EditLabels\" #EditLabels=\"ngModelGroup\">\n                <div class=\"badge-group\" *ngIf=\"detail['labels'] && detail['labels']['selection']\">\n                  <div class=\"badge badge-pill badge-secondary\" *ngFor=\"let element of detail['labels']['selection']; let i = index;\">\n                    {{element}}\n                    <i class=\"fas fa-times-circle icon-clear-badge\" (click)=\"clearValueFromArrayField('labels', i)\" title=\"Remove\"></i>\n                  </div>\n                  <span *ngIf=\"arraySelected('labels')\" class=\"icon-clear\" (click)=\"clearValueFromDetail('labels')\">\n                    <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                  </span>\n                </div>\n                <hr>\n                <div class=\"new-area\">\n                  <div class=\"mt-1\">\n                    <a class=\"pointer\" routerLink=\".\" (click)=\"onAddArrayItemClicked('labels')\" style=\"font-size: 0.75rem;\">\n                      <i class=\"fas fa-plus-square\" title=\"New\"></i> New </a>\n                  </div>\n                </div>\n                <div *ngIf=\"detail['labels']['adding']\" class=\"new-modal\">\n                  <div class=\"card text-center new-card\">\n                    <div class=\"card-body\">\n                      <input type=\"search\" class=\"form-control border\" id=\"EditLabelsNew\" #EditLabelsNew=\"ngModel\" [(ngModel)]=\"detail['labels']['new']\" [ngModelOptions]=\"{standalone: true}\" (keydown.enter)=\"$event.target.blur();onAddArrayItem('labels');false\">\n                      <div [hidden]=\"EditLabelsNew.valid\n                      || EditLabelsNew.pristine \n                      || EditLabelsNew.errors.minlength\" class=\"alert alert-danger small p-1\">\n                      </div>\n                      <div class=\"d-flex my-3 justify-content-center\">\n                        <button class=\"btn btn-outline-primary mx-1\" [disabled]=\"!EditLabelsNew.valid\" (click)=\"onAddArrayItem('labels')\">Confirm</button>\n                        <button class=\"btn btn-outline-secondary mx-1\" (click)=\"onAddArrayItemCancelled('labels')\">Cancel</button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <!-- fake hidden input ngModel for directive to check the values-->\n                <input type=\"checkbox\" name=\"EditLabelsSelection\" style=\"display:none\" id=\"EditLabelsSelection\" [(ngModel)]=\"detail['labels']['selection'].length\" #EditLabelsSelection=\"ngModel\">\n              </div>\n              <div [hidden]=\"EditLabels.valid || EditLabels.pristine\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n        </ng-template>\n        <div class=\"action-buttons-center\">\n          <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!editForm.form.valid\">Submit</button>\n          <button *ngIf=\"!options['disableCancel']\" class=\"btn btn-outline-success\" type=\"button\" (click)=\"editCancel()\">Cancel</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n<ng-template files-ref-select></ng-template>","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  MfileListComponent\n} from './mfile-list.component';\nimport {\n  MfileService\n} from '../mfile.service';\n@Component({\n  selector: 'app-mfile-list-sub',\n  templateUrl: './mfile-list-sub.component.html',\n  styleUrls: ['./mfile-list.component.css']\n})\nexport class MfileListSubComponent extends MfileListComponent implements OnInit {\n  public parentSchema;\n  public parentItemId;\n  constructor(public mfileService: MfileService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(null, mfileService, injector, router, route, location);\n    this.listCategory1 = {}; // no do query based on category for sub view;\n    this.listCategory2 = {}; // no do query based on category for sub view;\n  }\n  ngOnInit() {\n    this.clickItemAction = ''; // don't go to details or select by clicking the card/row.\n    this.adjustListViewForWindowSize();\n    let ref = this.getParentRouteRefField();\n    this.parentSchema = this.referenceFieldsReverseMap[ref];\n    this.parentItemId = this.getParentRouteItemId();\n    let id = this.parentItemId;\n    this.detail = {};\n    this.parentData = {};\n    if (this.arrayFields.some(x => x[0] == ref)) {\n      this.parentData[ref] = {\n        'selection': [{\n          '_id': id\n        }]\n      };\n      this.detail[ref] = {\n        'selection': [{\n          '_id': id\n        }]\n      }; //search on array list\n    } else {\n      this.parentData[ref] = {\n        '_id': id\n      };\n      this.detail[ref] = {\n        '_id': id\n      }; //make this as the search context\n    }\n    this.searchList();\n  }\n}","<div>\n  <div class=\"add-area d-flex\">\n    <div class=\"d-flex ml-auto\">\n    </div>\n  </div>\n  <div *ngIf=\"list.length === 0\" class=\"no-records\">\n    <span *ngIf=\"loaded\">No records found.</span>\n    <span *ngIf=\"!loaded\">Loading...</span>\n  </div>\n  <div class=\"container search\">\n    <div class=\"row justify-content-end mt-3\">\n    </div>\n    <div class=\"d-flex justify-content-between\">\n      <div>\n      </div>\n      <div>\n        <div class=\"total_counts\">\n          <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n        </div>\n      </div>\n    </div>\n    <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n      <div *ngIf=\"totalPages > 1\">\n        <ul class=\"pagination justify-content-center\">\n          <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n            <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n              <span aria-hidden=\"true\">&laquo;</span>\n              <span class=\"sr-only\">Previous</span>\n            </a>\n          </li>\n          <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n          <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n            <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n          </li>\n          <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n          <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n            <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n              <span aria-hidden=\"true\">&raquo;</span>\n              <span class=\"sr-only\">Next</span>\n            </a>\n          </li>\n        </ul>\n      </div>\n      <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n        <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"list.length > 0\">\n    <div class=\"listview\" *ngIf=\"isShowListView('list')\">\n      <div class=\"list-block\" *ngFor=\"let detail of list;  let i = index; let list_index = index;\">\n        <hr *ngIf=\"i==0\" class=\"list-devider\">\n        <div class=\"list-card text-left\" [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i],\n\t\t\t\t\t\t\t'clickable-card': clickItemAction}\">\n          <div class=\"list-fields\" [ngClass]=\"{pointer: clickItemAction}\" (click)=\"clickOneItem(i)\">\n            <div class=\"list-head-picture\">\n              <lib-mdds-file-display [downloadUrl]=\"detail['link']\" [isLarge]=\"false\" [aspectRatio]=\"\"></lib-mdds-file-display>\n            </div>\n            <div class=\"list-body-fields\">\n              <h5>\n                <div class=\"mr-1 d-inline-block\">\n                  {{detail['name']}}\n                </div>\n              </h5>\n              <div>\n                <div *ngIf=\"fieldHasValue(detail['type'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Type:</label></div>\n                  <div class=\"ml-3\">\n                    {{detail['type']}}\n                  </div>\n                </div>\n                <div *ngIf=\"fieldHasValue(detail['labels'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Labels:</label></div>\n                  <div class=\"ml-3\">\n                    <div *ngIf=\"detail['labels'] && detail['labels']['selection']\">\n                      <ng-template ngFor let-element [ngForOf]=\"detail['labels']['selection']\" let-idx=\"index\">\n                        <div class=\"badge badge-pill badge-secondary\">\n                          {{element}}\n                        </div>\n                      </ng-template>\n                    </div>\n                  </div>\n                </div>\n                <div *ngIf=\"fieldHasValue(detail['size'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Size:</label></div>\n                  <div class=\"ml-3\">\n                    {{detail['size']}}\n                  </div>\n                </div>\n                <div *ngIf=\"fieldHasValue(detail['createdAt'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Created at:</label></div>\n                  <div class=\"ml-3\"> {{detail['createdAt']? (detail['createdAt']['originalValue'] | date:'medium') : ''}}\n                  </div>\n                </div>\n                <div *ngIf=\"fieldHasValue(detail['hasThumbnail'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Has Thumbnail:</label></div>\n                  <div class=\"ml-3\">{{detail['hasThumbnail']}}\n                  </div>\n                </div>\n              </div>\n              <div class=\"d-flex flex-row mt-1\">\n              </div>\n            </div>\n          </div>\n        </div>\n        <hr class=\"list-devider\">\n      </div>\n    </div>\n    <table *ngIf=\"isShowListView('table')\" class=\"table table-bordered table-hover\">\n      <thead class=\"thead-light\">\n        <tr>\n          <th scope=\"col\">#</th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('name', 'Name')\"> Name <span *ngIf=\"listSortField === 'name'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('type', 'Type')\"> Type <span *ngIf=\"listSortField === 'type'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th scope=\"col\"> Labels </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('size', 'Size')\"> Size <span *ngIf=\"listSortField === 'size'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th scope=\"col\"> Link </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('createdAt', 'Created at')\"> Created at <span *ngIf=\"listSortField === 'createdAt'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('hasThumbnail', 'Has Thumbnail')\"> Has Thumbnail <span *ngIf=\"listSortField === 'hasThumbnail'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <ng-template ngFor let-detail [ngForOf]=\"list\" let-i=\"index\">\n          <tr [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i]}\">\n            <td scope=\"row\" (click)=\"clickOneItem(i)\" class=\"pointer read-more mt-3\">\n              {{(page-1)*perPage+i+1}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['name']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['type']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\" *ngIf=\"referenceFieldsMap['group'] != parentItem\">\n              <a routerLink=\".\" (click)=\"onDisplayRefClicked('group', detail['group'], $event)\">\n                {{detail['group']?detail['group']['valueMedium']:\"\"}}\n              </a>\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              <div *ngIf=\"detail['labels'] && detail['labels']['selection']\">\n                <ng-template ngFor let-element [ngForOf]=\"detail['labels']['selection']\" let-idx=\"index\">\n                  <div class=\"badge badge-pill badge-secondary\">\n                    {{element}}\n                  </div>\n                </ng-template>\n              </div>\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['size']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              <lib-mdds-file-display [downloadUrl]=\"detail['link']\" [isLarge]=\"false\" [aspectRatio]=\"\"></lib-mdds-file-display>\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['createdAt']? (detail['createdAt']['originalValue'] | date:'medium') : ''}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['hasThumbnail']}}\n            </td>\n          </tr>\n        </ng-template>\n      </tbody>\n    </table>\n  </div>\n  <div class=\"container\">\n    <div class=\"row justify-content-end mt-3\">\n    </div>\n    <div class=\"d-flex justify-content-between\">\n      <div>\n      </div>\n      <div>\n        <div class=\"total_counts\">\n          <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n        </div>\n      </div>\n    </div>\n    <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n      <div *ngIf=\"totalPages > 1\">\n        <ul class=\"pagination justify-content-center\">\n          <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n            <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n              <span aria-hidden=\"true\">&laquo;</span>\n              <span class=\"sr-only\">Previous</span>\n            </a>\n          </li>\n          <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n          <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n            <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n          </li>\n          <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n          <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n            <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n              <span aria-hidden=\"true\">&raquo;</span>\n              <span class=\"sr-only\">Next</span>\n            </a>\n          </li>\n        </ul>\n      </div>\n      <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n        <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n      </div>\n    </div>\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  MfileListCustComponent\n} from '../../../files-cust/base/mfile/mfile-list.cust.component';\nimport {\n  ViewType\n} from '../mfile.component';\nimport {\n  MfileService\n} from '../mfile.service';\nimport {\n  ComponentFactoryResolver\n} from '@angular/core';\n@Component({\n  selector: 'app-mfile-list',\n  templateUrl: './mfile-list.component.html',\n  styleUrls: ['./mfile-list.component.css']\n})\nexport class MfileListComponent extends MfileListCustComponent implements OnInit {\n  public minDate = {\n    year: (new Date()).getFullYear() - 100,\n    month: 1,\n    day: 1\n  };\n  // @Input() options: any; {disableCatetory: false, disablePagination: false, disbleActionButtons: false\n  //                        disableListSearch: false, disableTitle: false, disableRefs: false\n  //                        disableListHead: false, disableTitleRow: false}\n  // @Input()\n  // public inputData:any;\n  // @Input()\n  // public searchObj:any;\n  // @Input()\n  // public queryParams: any;  // {listSortField: 'a', listSortOrder: 'asc' / 'desc', perPage: 6}\n  // @Input()\n  // public categoryBy:string; //field name whose value is used as category\n  constructor(public componentFactoryResolver: ComponentFactoryResolver, public mfileService: MfileService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(componentFactoryResolver, mfileService, injector, router, route, location);\n    this.view = ViewType.LIST;\n    this.fieldDisplayNames = {\n      'name': 'Name',\n      'type': 'Type',\n      'group': 'Group',\n      'labels': 'Labels',\n      'size': 'Size',\n      'link': 'Link',\n      'createdAt': 'Created at',\n      'hasThumbnail': 'Has Thumbnail',\n    };\n    this.stringFields.push('name');\n    this.stringFields.push('type');\n    this.stringFields.push('link');\n    this.referenceFields = ['group', ];\n    this.dateFields = ['createdAt', ];\n    this.numberFields = ['size', ];\n    this.arrayFields = [\n      ['labels', 'SchemaString'],\n    ];\n    this.listViewFilter = 'list';\n    const listCategories = [{\n      \"listCategoryField\": \"group\",\n      \"showCategoryCounts\": true,\n      \"showEmptyCategory\": false,\n      \"listCategoryRef\": \"mfilegroup\"\n    }];\n    this.listCategory1 = listCategories[0] || {};\n    this.listCategory2 = listCategories[1] || {};\n    this.itemMultiSelect = true;\n    // initialize detail structure for search\n    let detail = {};\n    this.detail = this.formatDetail(detail);\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    this.adjustListViewForWindowSize();\n    this.clickItemAction = typeof this.options.clickItemAction === 'undefined' ? this.clickItemAction : this.options.clickItemAction;\n    this.itemMultiSelect = typeof this.options.itemMultiSelect === 'boolean' ? this.options.itemMultiSelect : this.itemMultiSelect;\n    if (!this.options) {\n      this.options = {};\n    }\n    if (this.options.disableCatetory) {\n      this.listCategory1 = {}; // no do query based on category for home view;\n      this.listCategory2 = {}; // no do query based on category for home view;\n    }\n    // this is to initialize the detail that will be used for search condition selection\n    let detail = {};\n    if (this.searchObj) {\n      this.searchDetailReady = true; // search provided from \"detail\", not from search bar.\n      detail = this.searchObj;\n    }\n    if (this.queryParams) {\n      this.listSortField = this.queryParams.listSortField;\n      this.listSortOrder = this.queryParams.listSortOrder;\n      if (this.queryParams.perPage) {\n        this.perPage = this.queryParams.perPage\n      }\n    }\n    this.detail = this.formatDetail(detail);\n    this.searchList();\n    // get editHintFields\n    this.searchHintFieldValues();\n  }\n  static getInstance() {\n    //used by others to call some common functions\n    return new MfileListComponent(null, null, null, null, null, null);\n  }\n}","<div class=\"mt-4 mb-4 d-flex\" *ngIf=\"!options['disableTitleRow']\">\n</div>\n<ul *ngIf=\"listCategory1.listCategoryField\" class=\"nav nav-pills category-nav\">\n  <li *ngFor=\"let ele of categoryDisplays; let idx = index;\" class=\"nav-item\">\n    <a *ngIf=\" listCategory1.showEmptyCategory || (!listCategory1.showEmptyCategory && categoriesCounts[idx] > 0)\" class=\"nav-link\" [ngClass]=\"{'active': idx === selectedCategory }\" [routerLink]=\"['.']\" queryParamsHandling=\"preserve\" (click)=\"categorySelected(idx)\">\n      {{ele}} <span *ngIf=\"listCategory1.showCategoryCounts\">({{categoriesCounts[idx]}})</span>\n    </a>\n  </li>\n</ul>\n<div>\n  <div *ngIf=\"!options['disableListHead']\" class=\"container search\">\n    <div class=\"row\" *ngIf=\"!options['disableListSearch']\">\n      <div class=\"col\">\n        <div class=\"input-group\">\n          <input type=\"search\" class=\"form-control border border-secondary\" id=\"mfileTextSearch\" #mfileTextSearch [(ngModel)]=\"searchText\" (search)=\"$event.target.blur();searchList();\" placeholder=\"Search for name, type\">\n          <div *ngIf=\"searchText\" class=\"input-group-append icon-search-clear\">\n            <span>\n              <i class=\"fas fa-times-circle\" (click)=\"onSearchTextClear()\" title=\"Clear\"></i>\n            </span>\n          </div>\n          <div class=\"input-group-append\">\n            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"searchList()\"><i class=\"fas fa-search\"></i></button>\n          </div>\n        </div>\n        <div class=\"text-center\">\n          <span class=\"pointer\" (click)=\"toggleMoreSearch()\">\n            <span class=\"refine-search-text\">Refine Search &nbsp;</span>\n            <span>\n              <i *ngIf=\"!moreSearchOpened\" class=\"fas fa-plus-circle\" title=\"More\"></i>\n              <i *ngIf=\"moreSearchOpened\" class=\"fas fa-minus-circle\" title=\"Less\"></i>\n            </span>\n          </span>\n        </div>\n        <div class=\"shadow\" *ngIf=\"moreSearchOpened\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <div class=\"d-flex flex-wrap align-items-center\">\n                <div class=\"container two-column-search small\">\n                  <div class=\"row col-gutter align-items-center\">\n                    <div class=\"col-12 col-sm-3\">\n                      <label for=\"mfileEditLabels\"> Labels </label>\n                    </div>\n                    <div class=\"col-11 col-sm-8\">\n                      <div class=\"badge-group\" *ngIf=\"detail['labels'] && detail['labels']['selection']\">\n                        <div class=\"badge badge-pill badge-secondary\" *ngFor=\"let element of detail['labels']['selection']; let i = index;\">\n                          {{element}}\n                          <i class=\"fas fa-times-circle icon-clear-badge\" (click)=\"clearValueFromArrayField('labels', i)\" title=\"Remove\"></i>\n                        </div>\n                      </div>\n                      <hr>\n                      <div class=\"available-hints\">\n                        <div class=\"mt-1\">\n                          <a class=\"pointer small\" routerLink=\".\" (click)=\"onAddArrayItemClicked('labels')\">\n                            <i class=\"fas fa-plus-square\" title=\"New\"></i> New </a>\n                        </div>\n                      </div>\n                      <div *ngIf=\"detail['labels']['adding']\" class=\"new-modal\">\n                        <div class=\"card text-center new-card\">\n                          <div class=\"card-body\">\n                            <input type=\"search\" class=\"form-control form-control-sm border\" id=\"EditLabelsNew\" #EditLabelsNew=\"ngModel\" [(ngModel)]=\"detail['labels']['new']\" [ngModelOptions]=\"{standalone: true}\" (keydown.enter)=\"$event.target.blur();onAddArrayItem('labels');false\">\n                            <div class=\"d-flex my-3 justify-content-center\">\n                              <button class=\"btn btn-outline-primary mx-1\" [disabled]=\"!EditLabelsNew.valid\" (click)=\"onAddArrayItem('labels')\">Confirm</button>\n                              <button class=\"btn btn-outline-secondary mx-1\" (click)=\"onAddArrayItemCancelled('labels')\">Cancel</button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col-1\">\n                      <div class=\"pointer\" (click)=\"clearValueFromDetail('labels')\" *ngIf=\"checkValueDefinedFromDetail('labels')\"><i class=\"fas fa-times-circle\" title=\"Clear\"></i></div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"container two-column-search small\">\n                  <div class=\"row col-gutter align-items-center\">\n                    <div class=\"col-12 col-sm-3\">\n                      <label for=\"mfileEditSize\"> Size </label>\n                    </div>\n                    <div class=\"col-11 col-sm-8\">\n                      <div class=\"input-group input-group-sm align-items-center\">\n                        <input type=\"number\" class=\"form-control form-control-sm\" id=\"mfileEditSize\" [(ngModel)]=\"detail['__mra_size_from']\" name=\"mfileEditSize\" #mfileEditSize=\"ngModel\">\n                        <span>&nbsp; ~ &nbsp;</span>\n                        <input type=\"number\" class=\"form-control form-control-sm\" id=\"mfileEditSize\" [(ngModel)]=\"detail['__mra_size_to']\" name=\"mfileEditSize\" #mfileEditSize=\"ngModel\">\n                      </div>\n                    </div>\n                    <div class=\"col-1\">\n                      <div class=\"pointer\" (click)=\"clearValueFromDetail('size')\" *ngIf=\"checkValueDefinedFromDetail('size')\"><i class=\"fas fa-times-circle\" title=\"Clear\"></i></div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"container one-column-search small\">\n                  <div class=\"row col-gutter align-items-center\">\n                    <div class=\"col-12 col-lg-3\">\n                      <label for=\"mfileEditCreatedAt\"> Created at </label>\n                    </div>\n                    <div class=\"col-11 col-lg-8\">\n                      <div class=\"row\">\n                        <div class=\"input-group input-group-sm col-12 col-md-6 align-items-center\">\n                          <span class=\"small mx-1\" style=\"width:2rem\">From</span>\n                          <input class=\"form-control form-control-sm\" id=\"mfileEditCreatedAtFrom\" placeholder=\"{{dateFormat}}\" [(ngModel)]=\"detail['createdAt']['from']\" name=\"mfileEditCreatedAt\" ngbDatepicker [minDate]=\"minDate\" #mfileEditCreatedAt=\"ngModel\">\n                          <div class=\"input-group-append\">\n                            <button class=\"btn btn-outline-secondary\" (click)=\"onDateSelectionToggle('createdAt')\" type=\"button\">\n                              <i class=\"fas fa-calendar-alt\"></i>\n                            </button>\n                          </div>\n                        </div>\n                        <div class=\"input-group input-group-sm col-12 col-md-6 align-items-center\">\n                          <span class=\"small mx-1\" style=\"width:2rem\">to</span>\n                          <input class=\"form-control form-control-sm\" id=\"mfileEditCreatedAtTo\" placeholder=\"{{dateFormat}}\" [(ngModel)]=\"detail['createdAt']['to']\" name=\"mfileEditCreatedAt\" ngbDatepicker [minDate]=\"minDate\" #mfileEditCreatedAt=\"ngModel\">\n                          <div class=\"input-group-append\">\n                            <button class=\"btn btn-outline-secondary\" (click)=\"onDateSelectionToggle('createdAt')\" type=\"button\">\n                              <i class=\"fas fa-calendar-alt\"></i>\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"date-selection-pop\" *ngIf=\"detail['createdAt']['pop']\">\n                        <ngb-datepicker #dp [minDate]=\"minDate\" (select)=\"onDateSelection('createdAt', $event)\" [displayMonths]=\"datePickerDisplayMonths\" [dayTemplate]=\"mfileEditCreatedAtT\">\n                        </ngb-datepicker>\n                        <ng-template #mfileEditCreatedAtT let-mfileEditCreatedAtDate=\"date\" let-mfileEditCreatedAtFocused=\"focused\">\n                          <span class=\"custom-day\" [class.focused]=\"mfileEditCreatedAtFocused\" [class.range]=\"isRange('createdAt', mfileEditCreatedAtDate)\" [class.faded]=\"isHovered('createdAt', mfileEditCreatedAtDate) || isInside('createdAt', mfileEditCreatedAtDate)\" (mouseenter)=\"hoveredDate = mfileEditCreatedAtDate\" (mouseleave)=\"hoveredDate = null\">\n                            {{ mfileEditCreatedAtDate.day }}\n                          </span>\n                        </ng-template>\n                      </div>\n                    </div>\n                    <div class=\"col-1\">\n                      <div class=\"pointer\" (click)=\"clearValueFromDetail('createdAt')\" *ngIf=\"checkValueDefinedFromDetail('createdAt')\"><i class=\"fas fa-times-circle\" title=\"Clear\"></i></div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"container two-column-search small\">\n                  <div class=\"row col-gutter align-items-center\">\n                    <div class=\"col-12 col-sm-3\">\n                      <label for=\"mfileEditHasThumbnail\"> Has Thumbnail </label>\n                    </div>\n                    <div class=\"col-11 col-sm-8\">\n                      <div class=\"form-check-inline\">\n                        <input type=\"radio\" name=\"mfileEditHasThumbnail\" class=\"form-check-input\" id=\"mfileEditHasThumbnailYes\" [value]=\"true\" [(ngModel)]=\"detail['hasThumbnail']\" #mfileEditHasThumbnail=\"ngModel\">\n                        <span class=\"form-check-label\">Yes</span>\n                      </div>\n                      <div class=\"form-check-inline\">\n                        <input type=\"radio\" name=\"mfileEditHasThumbnail\" class=\"form-check-input\" id=\"mfileEditHasThumbnailNo\" [value]=\"false\" [(ngModel)]=\"detail['hasThumbnail']\" #mfileEditHasThumbnail=\"ngModel\">\n                        <span class=\"form-check-label\">No</span>\n                      </div>\n                    </div>\n                    <div class=\"col-1\">\n                      <div class=\"pointer\" (click)=\"clearValueFromDetail('hasThumbnail')\" *ngIf=\"checkValueDefinedFromDetail('hasThumbnail')\"><i class=\"fas fa-times-circle\" title=\"Clear\"></i></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"action-buttons\">\n                <button type=\"button\" class=\"btn btn-outline-success\" (click)=\"onSearchClear()\">Reset</button>\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"searchList()\">Search</button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div *ngIf=\"!moreSearchOpened\" style=\"text-align: left;\">\n          <span class=\"badge badge-pill badge-info\" *ngFor=\"let value of searchMoreDetail\">\n            <a (click)=\"toggleMoreSearch()\" class=\"pointer\"> {{value[0]}}: {{value[1]}}</a>\n            <i class=\"fas fa-times-circle icon-clear-badge\" (click)=\"clearValueFromDetailAndSearchList(value[2])\" title=\"Clear\"></i>\n          </span>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"!options['disableActionButtions']\">\n      <div class=\"col\">\n        <div class=\"action-buttons\">\n        </div>\n      </div>\n    </div>\n    <hr />\n    <div *ngIf=\"!options['disablePagination']\">\n      <div class=\"row justify-content-end mt-3\">\n        <div *ngIf=\"list.length > 2\" class=\"sort-selection mr-5\">\n          <div class=\"dropdown\" style=\"width: 100%;\">\n            <button class=\"sort-dropdown btn btn-light btn-sm dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> Sort: <span *ngIf=\"listSortField && !viewHiddenFields.includes(listSortField)\">{{listSortFieldDisplay}}\n                <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up\"></i>\n                <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down\"></i>\n              </span>\n            </button>\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('name', 'Name', 'asc')\">Name<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('name', 'Name', 'desc')\">Name<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('type', 'Type', 'asc')\">Type<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('type', 'Type', 'desc')\">Type<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('size', 'Size', 'asc')\">Size<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('size', 'Size', 'desc')\">Size<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('createdAt', 'Created at', 'asc')\">Created at<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('createdAt', 'Created at', 'desc')\">Created at<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('hasThumbnail', 'Has Thumbnail', 'asc')\">Has Thumbnail<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('hasThumbnail', 'Has Thumbnail', 'desc')\">Has Thumbnail<i class=\"fas fa-arrow-down\"></i></a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-between\">\n        <div>\n          <div *ngIf=\"list.length > 0\">\n            <input type=\"radio\" name=\"view-filter\" id=\"list-view\" class=\"view-radio\" (click)=\"setListViewFilter('list')\" [checked]=\"isShowListView('list')\">\n            <label for=\"list-view\"><i class=\"fa fa-th-list\"></i></label>\n            <input type=\"radio\" name=\"view-filter\" id=\"grid-view\" class=\"view-radio\" (click)=\"setListViewFilter('grid')\" [checked]=\"isShowListView('grid')\">\n            <label for=\"grid-view\"><i class=\"fa fa-th\"></i></label>\n            <input type=\"radio\" name=\"view-filter\" id=\"table-view\" class=\"view-radio\" (click)=\"setListViewFilter('table')\" [checked]=\"isShowListView('table')\">\n            <label for=\"table-view\"><i class=\"fa fa-list-alt\"></i></label>\n          </div>\n        </div>\n        <div>\n          <div class=\"total_counts\">\n            <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n            <a class=\"ml-3\" routerLink=\".\" (click)=\"onRefresh()\"><i class=\"fa fa-sync-alt\"></i></a>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n        <div *ngIf=\"totalPages > 1\">\n          <ul class=\"pagination justify-content-center\">\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n                <span aria-hidden=\"true\">&laquo;</span>\n                <span class=\"sr-only\">Previous</span>\n              </a>\n            </li>\n            <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n            </li>\n            <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n                <span class=\"sr-only\">Next</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n          <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-records\" *ngIf=\"list.length === 0\">\n    <span *ngIf=\"loaded\">No records found.</span>\n    <span *ngIf=\"!loaded\">Loading...</span>\n  </div>\n  <div *ngIf=\"list.length > 0\">\n    <div class=\"listview\" *ngIf=\"isShowListView('list')\">\n      <div class=\"list-block\" *ngFor=\"let detail of list;  let i = index; let list_index = index;\">\n        <hr *ngIf=\"i==0\" class=\"list-devider\">\n        <div class=\"list-card text-left\" [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i],\n\t\t\t\t\t\t\t'clickable-card': clickItemAction}\">\n          <div class=\"list-fields\" [ngClass]=\"{pointer: clickItemAction}\" (click)=\"clickOneItem(i)\">\n            <div class=\"list-head-picture\">\n              <lib-mdds-file-display [downloadUrl]=\"detail['link']\" [isLarge]=\"false\" [aspectRatio]=\"\"></lib-mdds-file-display>\n            </div>\n            <div class=\"list-body-fields\">\n              <h5>\n                <div class=\"mr-1 d-inline-block\">\n                  {{detail['name']}}\n                </div>\n              </h5>\n              <div>\n                <div *ngIf=\"fieldHasValue(detail['type'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Type:</label></div>\n                  <div class=\"ml-3\">\n                    {{detail['type']}}\n                  </div>\n                </div>\n                <div *ngIf=\"fieldHasValue(detail['labels'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Labels:</label></div>\n                  <div class=\"ml-3\">\n                    <div *ngIf=\"detail['labels'] && detail['labels']['selection']\">\n                      <ng-template ngFor let-element [ngForOf]=\"detail['labels']['selection']\" let-idx=\"index\">\n                        <div class=\"badge badge-pill badge-secondary\">\n                          {{element}}\n                        </div>\n                      </ng-template>\n                    </div>\n                  </div>\n                </div>\n                <div *ngIf=\"fieldHasValue(detail['size'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Size:</label></div>\n                  <div class=\"ml-3\">\n                    {{detail['size']}}\n                  </div>\n                </div>\n                <div *ngIf=\"fieldHasValue(detail['createdAt'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Created at:</label></div>\n                  <div class=\"ml-3\"> {{detail['createdAt']? (detail['createdAt']['originalValue'] | date:'medium') : ''}}\n                  </div>\n                </div>\n                <div *ngIf=\"fieldHasValue(detail['hasThumbnail'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Has Thumbnail:</label></div>\n                  <div class=\"ml-3\">{{detail['hasThumbnail']}}\n                  </div>\n                </div>\n              </div>\n              <div class=\"d-flex flex-row mt-1\">\n              </div>\n            </div>\n          </div>\n          <div class=\"card-action-icons\">\n            <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n          </div>\n        </div>\n        <hr class=\"list-devider\">\n      </div>\n    </div>\n    <div class=\"gridview\" *ngIf=\"isShowListView('grid')\">\n      <div class=\"grid-block\" *ngFor=\"let detail of list;  let i = index; let list_index = index;\">\n        <div class=\"card text-left h-100\" [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i],\n\t\t\t\t\t\t\t'clickable-card': clickItemAction}\">\n          <div class=\"grid-fields\" [ngClass]=\"{pointer: clickItemAction}\" (click)=\"clickOneItem(i)\">\n            <div class=\"card-header grid-head\">\n              <div class=\"grid-head-picture\">\n                <lib-mdds-file-display [downloadUrl]=\"detail['link']\" [isLarge]=\"false\" [aspectRatio]=\"\"></lib-mdds-file-display>\n              </div>\n              <div>\n                <h5>\n                  <div class=\"mr-1 d-inline-block\">\n                    {{detail['name']}}\n                  </div>\n                </h5>\n              </div>\n            </div>\n            <div class=\"card-body\">\n              <div *ngIf=\"fieldHasValue(detail['type'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>Type:</label></div>\n                <div class=\"ml-3\">\n                  {{detail['type']}}</div>\n              </div>\n              <div *ngIf=\"fieldHasValue(detail['labels'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>Labels:</label></div>\n                <div class=\"ml-3\">\n                  <div *ngIf=\"detail['labels'] && detail['labels']['selection']\">\n                    <ng-template ngFor let-element [ngForOf]=\"detail['labels']['selection']\" let-idx=\"index\">\n                      <div class=\"badge badge-pill badge-secondary\">\n                        {{element}}\n                      </div>\n                    </ng-template>\n                  </div>\n                </div>\n              </div>\n              <div *ngIf=\"fieldHasValue(detail['size'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>Size:</label></div>\n                <div class=\"ml-3\">\n                  {{detail['size']}}</div>\n              </div>\n              <div *ngIf=\"fieldHasValue(detail['createdAt'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>Created at:</label></div>\n                <div class=\"ml-3\"> {{detail['createdAt']? (detail['createdAt']['originalValue'] | date:'medium') : ''}}</div>\n              </div>\n              <div *ngIf=\"fieldHasValue(detail['hasThumbnail'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>Has Thumbnail:</label></div>\n                <div class=\"ml-3\">{{detail['hasThumbnail']}} </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"card-action-icons\">\n            <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n          </div>\n        </div>\n      </div>\n    </div>\n    <table *ngIf=\"isShowListView('table')\" class=\"table table-bordered table-hover\">\n      <thead class=\"thead-light\">\n        <tr>\n          <th scope=\"col\">#</th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('name', 'Name')\"> Name <span *ngIf=\"listSortField === 'name'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('type', 'Type')\"> Type <span *ngIf=\"listSortField === 'type'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th scope=\"col\"> Labels </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('size', 'Size')\"> Size <span *ngIf=\"listSortField === 'size'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th scope=\"col\"> Link </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('createdAt', 'Created at')\"> Created at <span *ngIf=\"listSortField === 'createdAt'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('hasThumbnail', 'Has Thumbnail')\"> Has Thumbnail <span *ngIf=\"listSortField === 'hasThumbnail'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th scope=\"col\" style=\"width:3.8rem;\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        <ng-template ngFor let-detail [ngForOf]=\"list\" let-i=\"index\">\n          <tr [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i]}\">\n            <td scope=\"row\" (click)=\"clickOneItem(i)\" class=\"pointer read-more mt-3\">\n              {{(page-1)*perPage+i+1}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['name']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['type']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\" *ngIf=\"referenceFieldsMap['group'] != parentItem\">\n              <a routerLink=\".\" (click)=\"onDisplayRefClicked('group', detail['group'], $event)\">\n                {{detail['group']?detail['group']['valueMedium']:\"\"}}\n              </a>\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              <div *ngIf=\"detail['labels'] && detail['labels']['selection']\">\n                <ng-template ngFor let-element [ngForOf]=\"detail['labels']['selection']\" let-idx=\"index\">\n                  <div class=\"badge badge-pill badge-secondary\">\n                    {{element}}\n                  </div>\n                </ng-template>\n              </div>\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['size']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              <lib-mdds-file-display [downloadUrl]=\"detail['link']\" [isLarge]=\"false\" [aspectRatio]=\"\"></lib-mdds-file-display>\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['createdAt']? (detail['createdAt']['originalValue'] | date:'medium') : ''}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['hasThumbnail']}}\n            </td>\n            <td>\n              <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n            </td>\n          </tr>\n        </ng-template>\n      </tbody>\n    </table>\n  </div>\n  <div class=\"container\">\n    <div *ngIf=\"!options['disablePagination']\">\n      <div class=\"row justify-content-end mt-3\">\n      </div>\n      <div class=\"d-flex justify-content-between\">\n        <div>\n        </div>\n        <div>\n          <div class=\"total_counts\">\n            <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n        <div *ngIf=\"totalPages > 1\">\n          <ul class=\"pagination justify-content-center\">\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n                <span aria-hidden=\"true\">&laquo;</span>\n                <span class=\"sr-only\">Previous</span>\n              </a>\n            </li>\n            <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n            </li>\n            <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n                <span class=\"sr-only\">Next</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n          <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template files-ref-select></ng-template>","import {\n  HttpClient\n} from '@angular/common/http';\nimport {\n  MddsBaseService\n} from '@hicoder/angular-core';\nconst servicePath = '/mfile/';\nexport class MfileBaseService extends MddsBaseService {\n  constructor(http: HttpClient, serverRootUrl: string) {\n    const serviceUrl = serverRootUrl + servicePath;\n    super(http, serviceUrl);\n  }\n}","import {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  MddsBaseComponent,\n  ViewType\n} from '@hicoder/angular-core';\nimport {\n  Component,\n  OnInit,\n  Injector,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  MfileService\n} from './mfile.service';\nconst itemCamelName = 'picture';\nexport {\n  ViewType\n};\nimport {\n  ViewChild\n} from '@angular/core';\nimport {\n  ComponentFactoryResolver\n} from '@angular/core';\nimport {\n  FilesRefSelectDirective\n} from '../files.component';\nimport {\n  MfilegroupDetailSelComponent\n} from '../mfilegroup/mfilegroup-detail/mfilegroup-detail-sel.component';\nimport {\n  MfilegroupDetailPopComponent\n} from '../mfilegroup/mfilegroup-detail/mfilegroup-detail-pop.component';\nimport {\n  MfilegroupListSelectIndexComponent\n} from '../mfilegroup/mfilegroup-list/mfilegroup-list-select-index.component';\n@Component({\n  template: '',\n})\nexport class MfileComponent extends MddsBaseComponent implements OnInit {\n  // *** common input fields\n  @Input()\n  public style: any; // {}\n  @Input()\n  public options: any; // {} uiOptions\n  @Input()\n  public searchObj: any;\n  // *** list component\n  @Input()\n  public inputData: any;\n  @Input()\n  public queryParams: any; // {listSortField: 'a', listSortOrder: 'asc' / 'desc', perPage: 6}\n  @Input()\n  public categoryBy: string; //field name whose value is used as category\n  // list-asso component\n  @Input('asso') public associationField: string;\n  // list select component\n  @Output() outputData: any;\n  // *** edit / create component\n  @Input()\n  public id: string;\n  @Input()\n  public cid: string; // copy id\n  @Input()\n  public initData: any; // some fields has data already. eg: {a: b}. Used for add\n  @Input()\n  public embeddedView: boolean;\n  @Input()\n  public embedMode: string; // parent to tell the action - create\n  @Output()\n  public doneData = new EventEmitter < boolean > ();\n  @Output()\n  public done = new EventEmitter < any > ();\n  // *** detail component\n  // @Input() \n  // public id:string;\n  @Input()\n  public disableActionButtions: boolean;\n  @Output()\n  public eventEmitter: EventEmitter < any > = new EventEmitter();\n  // detail sub component\n  // @Input() inputData;\n  // detail show field component\n  // @Input() id: string;\n  @Input() detailObj: any;\n  @Input() showFieldsStr: string;\n  // detail sel component\n  //@Input() inputData;\n  //@Output() outputData;\n  // detail pop component\n  // @Input() inputData;\n  // @Output() outputData;\n  public selectComponents = {\n    'group': {\n      'select-type': MfilegroupListSelectIndexComponent,\n      'select-detail-type': MfilegroupDetailSelComponent,\n      'pop-detail-type': MfilegroupDetailPopComponent,\n      'componentRef': null\n    },\n  }\n  @ViewChild(FilesRefSelectDirective, {\n    static: true\n  }) refSelectDirective: FilesRefSelectDirective;\n  constructor(public componentFactoryResolver: ComponentFactoryResolver, public mfileService: MfileService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(mfileService, injector, router, route, location);\n    this.setItemNames(itemCamelName);\n    this.briefFieldsInfo = [];\n    this.briefFieldsInfo.push(['name', 'Name']);\n    this.briefFieldsInfo.push(['type', 'Type']);\n    this.briefFieldsInfo.push(['group', 'Group']);\n    this.briefFieldsInfo.push(['labels', 'Labels']);\n    this.briefFieldsInfo.push(['size', 'Size']);\n    this.briefFieldsInfo.push(['link', 'Link']);\n    this.briefFieldsInfo.push(['createdAt', 'Created at']);\n    this.briefFieldsInfo.push(['hasThumbnail', 'Has Thumbnail']);\n    this.referenceFieldsMap = {\n      'group': 'mfilegroup',\n    };\n    this.referenceFieldsReverseMap = {\n      'mfilegroup': 'group',\n    };\n    this.schemaName = 'mfile';\n    this.dateFormat = 'MM/DD/YYYY';\n    this.timeFormat = 'hh:mm:ss';\n    this.modulePath = 'files';\n    this.indexFields = ['name', ];\n  }\n  ngOnInit() {\n    this.style = this.style || {};\n    this.options = this.options || {};\n  }\n}","import {\n  Injectable,\n  Inject,\n  OnDestroy,\n  SkipSelf\n} from '@angular/core';\nimport {\n  HttpClient\n} from '@angular/common/http';\nimport {\n  MfileBaseService\n} from './mfile.base.service';\nimport {\n  Files_SERVER_ROOT_URI\n} from '../files.tokens';\n@Injectable({\n  providedIn: 'root',\n})\nexport class MfileService extends MfileBaseService implements OnDestroy {\n  constructor(http: HttpClient, @Inject(Files_SERVER_ROOT_URI) private filesServerRootUri: string) {\n    super(http, filesServerRootUri);\n  }\n  ngOnDestroy() {}\n}","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  MfilegroupComponent,\n  ViewType\n} from '../mfilegroup.component';\nimport {\n  MfilegroupService\n} from '../mfilegroup.service';\n@Component({\n  selector: 'app-mfilegroup-detail-field',\n  templateUrl: './mfilegroup-detail-field.component.html',\n  styleUrls: ['./mfilegroup-detail.component.css']\n})\nexport class MfilegroupDetailFieldComponent extends MfilegroupComponent\nimplements OnInit {\n  // @Input() id: string;\n  // @Input() detailObj: any;\n  // @Input() showFieldsStr: string;\n  showFields: string[];\n  constructor(public mfilegroupService: MfilegroupService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(mfilegroupService, injector, router, route, location);\n    this.view = ViewType.DETAIL;\n    this.fieldDisplayNames = {\n      'name': 'Name',\n      'createdAt': 'Created at',\n    };\n    this.stringFields.push('name');\n    this.dateFields = ['createdAt', ];\n  }\n  ngOnInit() {\n    if (!this.showFieldsStr) {\n      console.error(\"A field has to be given to show it.\");\n      return;\n    }\n    this.showFields = this.showFieldsStr.match(/\\S+/g);\n    if (this.detailObj) {\n      this.onDetailReturned(this.detailObj, null);\n    } else {\n      if (!this.id) this.id = this.id;\n      if (this.id) this.populateDetail(this.id);\n      else {\n        console.error(\"No id provided to show info\");\n        return;\n      }\n    }\n  }\n}","<div *ngIf=\"detail && showFields.includes('name')\">\n  {{detail['name']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('createdAt')\"> {{detail['createdAt']? (detail['createdAt']['originalValue'] | date:'medium') : ''}}\n</div>","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  MfilegroupDetailComponent\n} from './mfilegroup-detail.component';\nimport {\n  MfilegroupService\n} from '../mfilegroup.service';\n@Component({\n  selector: 'app-mfilegroup-detail-pop',\n  templateUrl: './mfilegroup-detail-pop.component.html',\n  styleUrls: ['./mfilegroup-detail.component.css']\n})\nexport class MfilegroupDetailPopComponent extends MfilegroupDetailComponent\nimplements OnInit {\n  // @Input() inputData;\n  // @Output() outputData;\n  done = new EventEmitter < boolean > ();\n  constructor(public mfilegroupService: MfilegroupService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(mfilegroupService, injector, router, route, location);\n    this.majorUi = false;\n  }\n  ngOnInit() {\n    if (!this.id) this.id = this.inputData;\n    if (this.id) this.populateDetail(this.id);\n    else console.error(\"Routing error for detail view... no id...\");\n  }\n  ngAfterViewInit() {}\n}","<div class=\"select-model show\" (keyup.esc)=\"uiOnEscapeKey()\" tabindex=\"0\" #FilesModal>\n  <div class=\"container select-model-content\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\">{{ItemCamelName}} Detail</h5>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"uiCloseModal()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <!--  model body starts -->\n        <div class=\"detail\" *ngIf=\"detail\">\n          <div class=\"action-buttons\">\n          </div>\n          <div class=\"card text-left\">\n            <div class=\"card-body\">\n              <div class=\"card-text\">\n                <div class=\"card-header grid-head\">\n                  <div class=\"ml-1\">\n                    <h5>\n                      <div class=\"mr-1 d-inline-block\">\n                        {{detail['name']}}\n                      </div>\n                    </h5>\n                  </div>\n                </div>\n                <div class=\"card-body\">\n                  <div>\n                    <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n                      <div><label>Created at:</label></div>\n                      <div class=\"ml-3\"> {{detail['createdAt']? (detail['createdAt']['originalValue'] | date:'medium') : ''}}</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <!--  model body ends -->\n      </div>\n      <div class=\"modal-footer\">\n      </div>\n    </div>\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  MfilegroupDetailComponent\n} from './mfilegroup-detail.component';\nimport {\n  MfilegroupService\n} from '../mfilegroup.service';\n@Component({\n  selector: 'app-mfilegroup-detail-sel',\n  templateUrl: './mfilegroup-detail-sel.component.html',\n  styleUrls: ['./mfilegroup-detail.component.css']\n})\nexport class MfilegroupDetailSelComponent extends MfilegroupDetailComponent\nimplements OnInit {\n  // @Input() inputData;\n  // @Output() outputData;\n  done = new EventEmitter < boolean > ();\n  constructor(public mfilegroupService: MfilegroupService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(mfilegroupService, injector, router, route, location);\n    this.majorUi = false;\n  }\n  ngOnInit() {\n    if (!this.id) this.id = this.inputData;\n    if (this.id) this.populateDetail(this.id);\n    else console.error(\"Routing error for detail view... no id...\");\n  }\n  ngAfterViewInit() {}\n}","<div class=\"select-model show\" (keyup.esc)=\"uiOnEscapeKey()\" tabindex=\"0\" #FilesModal>\n  <div class=\"container select-model-content\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\">Selected {{ItemCamelName}}</h5>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"uiCloseModal()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <!--  model body starts -->\n        <div class=\"detail\" *ngIf=\"detail\">\n          <div class=\"action-buttons\">\n            <a class=\"action-go-list\" routerLink=\".\" (click)=\"detailSelBack()\"><i class=\"fas fa-angle-double-left\" title=\"Back to list\">&nbsp; {{ItemCamelName}} List</i></a>\n            <a routerLink=\".\" class=\"btn btn-outline-primary\" (click)=\"detailSelSelected()\">Select</a>\n          </div>\n          <div class=\"card text-left\">\n            <div class=\"card-body\">\n              <h4 class=\"card-title\">{{ItemCamelName}} Detail</h4>\n              <div class=\"card-text\">\n                <div class=\"card-header grid-head\">\n                  <div class=\"ml-1\">\n                    <h5>\n                      <div class=\"mr-1 d-inline-block\">\n                        {{detail['name']}}\n                      </div>\n                    </h5>\n                  </div>\n                </div>\n                <div class=\"card-body\">\n                  <div>\n                    <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n                      <div><label>Created at:</label></div>\n                      <div class=\"ml-3\"> {{detail['createdAt']? (detail['createdAt']['originalValue'] | date:'medium') : ''}}</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <!--  model body ends -->\n      </div>\n      <div class=\"modal-footer\">\n      </div>\n    </div>\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  MfilegroupDetailCustComponent\n} from '../../../files-cust/base/mfilegroup/mfilegroup-detail.cust.component';\nimport {\n  ViewType\n} from '../mfilegroup.component';\nimport {\n  MfilegroupService\n} from '../mfilegroup.service';\n@Component({\n  selector: 'app-mfilegroup-detail',\n  templateUrl: './mfilegroup-detail.component.html',\n  styleUrls: ['./mfilegroup-detail.component.css']\n})\nexport class MfilegroupDetailComponent extends MfilegroupDetailCustComponent implements OnInit, AfterViewInit {\n  // @Input() \n  // public id:string;\n  // @Input()\n  // public searchObj:any;\n  // @Input()\n  // public disableActionButtions:boolean;\n  // @Output()\n  // public eventEmitter: EventEmitter<any> = new EventEmitter();\n  constructor(public mfilegroupService: MfilegroupService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(mfilegroupService, injector, router, route, location);\n    this.view = ViewType.DETAIL;\n    this.fieldDisplayNames = {\n      'name': 'Name',\n      'createdAt': 'Created at',\n    };\n    this.stringFields.push('name');\n    this.dateFields = ['createdAt', ];\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    if (!this.id) this.id = this.route.snapshot.paramMap.get('id');\n    if (this.id) {\n      this.populateDetail(this.id);\n    } else if (this.searchObj) {\n      // search item based on the unique value\n      this.populateDetailByFields(this.searchObj);\n    } else {\n      console.error(\"Routing error for detail view... no id...\");\n      return;\n    }\n  }\n  ngAfterViewInit() {\n    //Load first reference, if not others activated\n    if (!this.options['disableRefLink'] && !this.isChildRouterActivated()) {\n      this.router.navigate(['./mfile/list', {}], {\n        relativeTo: this.route,\n        queryParamsHandling: 'preserve',\n      });\n    }\n  }\n}","<div class=\"detail\" *ngIf=\"detail\">\n  <div *ngIf=\"!options['disableActionButtions']\">\n    <div *ngIf=\"!disableActionButtions && !options['disableActionButtions']\" class=\"action-buttons\">\n      <a *ngIf=\"!options['disableActionList']\" routerLink=\"../../list\" class=\"action-go-list\"><i class=\"fas fa-list\" title=\"List\"></i><!--  span>&nbsp;&nbsp;{{ItemCamelName}} List</span--></a>\n      <a *ngIf=\"!options['disableActionEdit']\" [routerLink]=\"['../../edit', detail['_id'] ]\" [skipLocationChange]=\"false\" class=\"btn btn-outline-primary\">Edit</a>\n      <a *ngIf=\"!options['disableActionNew']\" [routerLink]=\"['../../new']\" [queryParams]=\"{cid: detail['_id']}\" [skipLocationChange]=\"false\" class=\"btn btn-outline-primary\">New</a>\n    </div>\n  </div>\n  <div class=\"card text-left transparent-border \">\n    <div class=\"grid-fields\">\n      <div class=\"card-header grid-head\">\n        <div class=\"ml-1\">\n          <h5>\n            <div class=\"mr-1 d-inline-block\">\n              {{detail['name']}}\n            </div>\n          </h5>\n        </div>\n      </div>\n      <div class=\"card-body\">\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Created at:</label></div>\n            <div class=\"ml-3\"> {{detail['createdAt']? (detail['createdAt']['originalValue'] | date:'medium') : ''}}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"!options['disablePipeline']\">\n  </div>\n  <div *ngIf=\"!options['disableRefLink']\">\n    <br />\n    <ul class=\"nav nav-tabs\">\n      <li class=\"nav-item\">\n        <a [routerLink]=\"['./mfile/list']\" class=\"nav-link\" routerLinkActive=\"active\">Picture</a>\n      </li>\n    </ul>\n    <router-outlet></router-outlet>\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  Directive,\n  EventEmitter\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\ndeclare const $: any;\nimport {\n  MfilegroupEditCustComponent\n} from '../../../files-cust/base/mfilegroup/mfilegroup-edit.cust.component';\nimport {\n  ViewType\n} from '../mfilegroup.component';\nimport {\n  MfilegroupService\n} from '../mfilegroup.service';\n@Component({\n  selector: 'app-mfilegroup-edit',\n  templateUrl: './mfilegroup-edit.component.html',\n  styleUrls: ['./mfilegroup-edit.component.css']\n})\nexport class MfilegroupEditComponent extends MfilegroupEditCustComponent implements OnInit, AfterViewInit {\n  // @Input() \n  // public id: string;\n  // @Input()\n  // public cid: string; // copy id\n  // @Input()\n  // public initData: any; // some fields has data already. eg: {a: b}. Used for add\n  // @Output()\n  // public doneData = new EventEmitter<boolean>();\n  // @Output()\n  // public done = new EventEmitter<any>();\n  // @Input()\n  // public embeddedView: boolean;\n  // @Input()\n  // public embedMode: string; // parent to tell the action - create\n  public action: string;\n  public minDate = {\n    year: (new Date()).getFullYear() - 100,\n    month: 1,\n    day: 1\n  };\n  constructor(public mfilegroupService: MfilegroupService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(mfilegroupService, injector, router, route, location);\n    this.view = ViewType.EDIT;\n    this.fieldDisplayNames = {\n      'name': 'Name',\n    };\n    this.stringFields.push('name');\n    const detail = {};\n    this.detail = this.formatDetail(detail);\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.embedMode == 'create') { // parent ask to create\n      this.action = 'Create';\n      this.getDetailData();\n    } else {\n      if (!this.id) this.id = this.route.snapshot.paramMap.get('id');\n      if (this.id) {\n        this.action = 'Edit';\n        this.populateDetailForAction(this.id, 'edit'); //populate with action as 'edit'\n      } else {\n        this.action = 'Create';\n        if (!this.cid) this.cid = this.route.snapshot.queryParamMap.get('cid');\n        if (this.cid) {\n          this.populateDetailFromCopy(this.cid);\n        } else {\n          this.getDetailData();\n        }\n      }\n    }\n    // get editHintFields\n    this.searchHintFieldValues();\n  }\n  ngAfterViewInit() {\n    // Initialize all tooltips\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n  getDetailData() {\n    if (this.initData) {\n      this.action = 'Add';\n      let detail = {};\n      for (let prop of Object.keys(this.initData)) {\n        detail[prop] = this.initData[prop];\n        this.hiddenFields.push(prop);\n      }\n      this.detail = this.formatDetail(detail);\n    } else {\n      let detail = {};\n      this.detail = this.formatDetail(detail);\n    }\n  }\n}","<div class=\"edit\" *ngIf=\"detail\">\n  <div class=\"card\" style=\"text-align: left;\">\n    <div class=\"card-body\">\n      <h4 class=\"card-title\" *ngIf=\"!embeddedView && !options['title']\">{{action}} Picture Group</h4>\n      <h4 class=\"card-title\" *ngIf=\"options['title']\" [ngStyle]=\"style['card-title']\">\n        {{options['title']}}\n      </h4>\n      <p *ngIf=\"options['subtitle']\" [ngStyle]=\"style['card-subtitle']\">\n        {{options['subtitle']}}\n      </p>\n      <form (ngSubmit)=\"onSubmit()\" #editForm=\"ngForm\">\n        <ng-template [ngIf]=\"action == 'Edit'\">\n          <ng-template [ngIf]=\"!hiddenFields.includes('name')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditName\">Name</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditName\" required [(ngModel)]=\"detail['name']\" name=\"EditName\" #EditName=\"ngModel\">\n                <div *ngIf=\"detail['name']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('name')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditName.valid || EditName.pristine || EditName.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditName.errors && EditName.errors.required\"> Name is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n        </ng-template>\n        <ng-template [ngIf]=\"action == 'Create' || action == 'Add' \">\n          <ng-template [ngIf]=\"!hiddenFields.includes('name')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditName\">Name</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditName\" required [(ngModel)]=\"detail['name']\" name=\"EditName\" #EditName=\"ngModel\">\n                <div *ngIf=\"detail['name']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('name')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditName.valid || EditName.pristine || EditName.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditName.errors && EditName.errors.required\"> Name is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n        </ng-template>\n        <div class=\"action-buttons-center\">\n          <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!editForm.form.valid\">Submit</button>\n          <button *ngIf=\"!options['disableCancel']\" class=\"btn btn-outline-success\" type=\"button\" (click)=\"editCancel()\">Cancel</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  MfilegroupListSelectComponent\n} from './mfilegroup-list-select.component';\nimport {\n  MfilegroupService\n} from '../mfilegroup.service';\n@Component({\n  selector: 'app-mfilegroup-list-select-index',\n  templateUrl: './mfilegroup-list-select-index.component.html',\n  styleUrls: ['./mfilegroup-list.component.css', './mfilegroup-list-select-index.component.css']\n})\nexport class MfilegroupListSelectIndexComponent extends MfilegroupListSelectComponent\nimplements OnInit {\n  constructor(public mfilegroupService: MfilegroupService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(mfilegroupService, injector, router, route, location);\n  }\n  ngOnInit() {\n    super.ngOnInit();\n  }\n}","<div class=\"select-model show\" (keyup.esc)=\"uiOnEscapeKey()\" tabindex=\"0\" #FilesModal>\n  <div class=\"container select-model-content\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\">Select {{ItemCamelName}}</h5>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"uiCloseModal()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <!--  model body starts -->\n        <div class=\"container search\">\n          <div class=\"row\" *ngIf=\"!options['disableListSearch']\">\n            <div class=\"col\">\n              <div class=\"input-group\">\n                <input type=\"search\" class=\"form-control border border-secondary\" id=\"mfilegroupTextSearch\" #mfilegroupTextSearch [(ngModel)]=\"searchText\" (search)=\"$event.target.blur();searchList();\" placeholder=\"Search for name\">\n                <div *ngIf=\"searchText\" class=\"input-group-append icon-search-clear\">\n                  <span>\n                    <i class=\"fas fa-times-circle\" (click)=\"onSearchTextClear()\" title=\"Clear\"></i>\n                  </span>\n                </div>\n                <div class=\"input-group-append\">\n                  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"searchList()\"><i class=\"fas fa-search\"></i></button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <hr />\n        </div>\n        <div class=\"d-flex align-items-start flex-wrap list-items\">\n          <div *ngFor=\"let detail of list;  let i = index\" [ngClass]=\"{'clicked-row': detail['_id']==clickedId}\" (click)=\"selectItemSelected(i)\" class=\"m-2 badge badge-secondary pointer\">\n            <span>\n              {{detail['name']}}\n            </span>\n          </div>\n        </div>\n        <div class=\"container\">\n          <div class=\"row justify-content-end mt-3\">\n          </div>\n          <div class=\"d-flex justify-content-between\">\n            <div>\n            </div>\n            <div>\n              <div class=\"total_counts\">\n                <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n              </div>\n            </div>\n          </div>\n          <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n            <div *ngIf=\"totalPages > 1\">\n              <ul class=\"pagination justify-content-center\">\n                <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n                  <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n                    <span aria-hidden=\"true\">&laquo;</span>\n                    <span class=\"sr-only\">Previous</span>\n                  </a>\n                </li>\n                <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n                <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n                  <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n                </li>\n                <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n                <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n                  <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n                    <span aria-hidden=\"true\">&raquo;</span>\n                    <span class=\"sr-only\">Next</span>\n                  </a>\n                </li>\n              </ul>\n            </div>\n            <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n              <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n            </div>\n          </div>\n        </div>\n        <!--  model body ends -->\n      </div>\n      <div class=\"modal-footer\">\n      </div>\n    </div>\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  Input,\n  EventEmitter,\n  Output,\n  ElementRef,\n  ViewChild,\n  AfterViewInit\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  MfilegroupListComponent\n} from './mfilegroup-list.component';\nimport {\n  MfilegroupService\n} from '../mfilegroup.service';\n@Component({\n  selector: 'app-mfilegroup-list-select',\n  templateUrl: './mfilegroup-list-select.component.html',\n  styleUrls: ['./mfilegroup-list.component.css']\n})\nexport class MfilegroupListSelectComponent extends MfilegroupListComponent\nimplements OnInit {\n  // @Input() inputData;\n  // @Output() outputData;\n  done = new EventEmitter < boolean > ();\n  constructor(public mfilegroupService: MfilegroupService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(mfilegroupService, injector, router, route, location);\n    this.majorUi = false;\n    this.itemMultiSelect = false;\n  }\n  ngOnInit() {\n    this.selectedId = this.inputData;\n    this.populateList();\n  }\n}","<div class=\"select-model show\" (keyup.esc)=\"uiOnEscapeKey()\" tabindex=\"0\" #FilesModal>\n  <div class=\"container select-model-content\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\">Select {{ItemCamelName}}</h5>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"uiCloseModal()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <!--  model body starts -->\n        <div class=\"container search\">\n          <div class=\"row\" *ngIf=\"!options['disableListSearch']\">\n            <div class=\"col\">\n              <div class=\"input-group\">\n                <input type=\"search\" class=\"form-control border border-secondary\" id=\"mfilegroupTextSearch\" #mfilegroupTextSearch [(ngModel)]=\"searchText\" (search)=\"$event.target.blur();searchList();\" placeholder=\"Search for name\">\n                <div *ngIf=\"searchText\" class=\"input-group-append icon-search-clear\">\n                  <span>\n                    <i class=\"fas fa-times-circle\" (click)=\"onSearchTextClear()\" title=\"Clear\"></i>\n                  </span>\n                </div>\n                <div class=\"input-group-append\">\n                  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"searchList()\"><i class=\"fas fa-search\"></i></button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <hr />\n          <div class=\"row justify-content-end mt-3\">\n          </div>\n          <div class=\"d-flex justify-content-between\">\n            <div>\n            </div>\n            <div>\n              <div class=\"total_counts\">\n                <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n              </div>\n            </div>\n          </div>\n          <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n            <div *ngIf=\"totalPages > 1\">\n              <ul class=\"pagination justify-content-center\">\n                <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n                  <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n                    <span aria-hidden=\"true\">&laquo;</span>\n                    <span class=\"sr-only\">Previous</span>\n                  </a>\n                </li>\n                <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n                <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n                  <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n                </li>\n                <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n                <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n                  <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n                    <span aria-hidden=\"true\">&raquo;</span>\n                    <span class=\"sr-only\">Next</span>\n                  </a>\n                </li>\n              </ul>\n            </div>\n            <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n              <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n            </div>\n          </div>\n        </div>\n        <table class=\"table table-bordered table-hover\">\n          <thead class=\"thead-light\">\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Name</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let detail of list;  let i = index\" [ngClass]=\"{'clicked-row': detail['_id']==clickedId}\">\n              <td scope=\"row\" (click)=\"selectItemSelected(i)\" class=\"pointer\">{{(page-1)*perPage+i+1}}</td>\n              <td (click)=\"selectItemSelected(i)\" class=\"pointer\">\n                {{detail['name']}}\n              </td>\n              <td><a routerLink=\".\" class=\"btn\" [ngClass]=\"{'btn-primary': detail['_id']==selectedId || checkedItem[i], \n\t\t\t\t\t \t\t\t'btn-outline-primary': detail['_id']!==selectedId && !checkedItem[i]}\" (click)=\"selectViewDetail(i)\">View Details</a>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div class=\"container\">\n          <div class=\"row justify-content-end mt-3\">\n          </div>\n          <div class=\"d-flex justify-content-between\">\n            <div>\n            </div>\n            <div>\n              <div class=\"total_counts\">\n                <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n              </div>\n            </div>\n          </div>\n          <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n            <div *ngIf=\"totalPages > 1\">\n              <ul class=\"pagination justify-content-center\">\n                <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n                  <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n                    <span aria-hidden=\"true\">&laquo;</span>\n                    <span class=\"sr-only\">Previous</span>\n                  </a>\n                </li>\n                <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n                <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n                  <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n                </li>\n                <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n                <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n                  <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n                    <span aria-hidden=\"true\">&raquo;</span>\n                    <span class=\"sr-only\">Next</span>\n                  </a>\n                </li>\n              </ul>\n            </div>\n            <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n              <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n            </div>\n          </div>\n        </div>\n        <!--  model body ends -->\n      </div>\n      <div class=\"modal-footer\">\n      </div>\n    </div>\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  MfilegroupListCustComponent\n} from '../../../files-cust/base/mfilegroup/mfilegroup-list.cust.component';\nimport {\n  ViewType\n} from '../mfilegroup.component';\nimport {\n  MfilegroupService\n} from '../mfilegroup.service';\n@Component({\n  selector: 'app-mfilegroup-list',\n  templateUrl: './mfilegroup-list.component.html',\n  styleUrls: ['./mfilegroup-list.component.css']\n})\nexport class MfilegroupListComponent extends MfilegroupListCustComponent implements OnInit {\n  public minDate = {\n    year: (new Date()).getFullYear() - 100,\n    month: 1,\n    day: 1\n  };\n  // @Input() options: any; {disableCatetory: false, disablePagination: false, disbleActionButtons: false\n  //                        disableListSearch: false, disableTitle: false, disableRefs: false\n  //                        disableListHead: false, disableTitleRow: false}\n  // @Input()\n  // public inputData:any;\n  // @Input()\n  // public searchObj:any;\n  // @Input()\n  // public queryParams: any;  // {listSortField: 'a', listSortOrder: 'asc' / 'desc', perPage: 6}\n  // @Input()\n  // public categoryBy:string; //field name whose value is used as category\n  constructor(public mfilegroupService: MfilegroupService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(mfilegroupService, injector, router, route, location);\n    this.view = ViewType.LIST;\n    this.fieldDisplayNames = {\n      'name': 'Name',\n    };\n    this.stringFields.push('name');\n    this.listViewFilter = 'list';\n    const listCategories = [];\n    this.listCategory1 = listCategories[0] || {};\n    this.listCategory2 = listCategories[1] || {};\n    this.clickItemAction = 'detail';\n    this.itemMultiSelect = true;\n    // initialize detail structure for search\n    let detail = {};\n    this.detail = this.formatDetail(detail);\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    this.adjustListViewForWindowSize();\n    this.clickItemAction = typeof this.options.clickItemAction === 'undefined' ? this.clickItemAction : this.options.clickItemAction;\n    this.itemMultiSelect = typeof this.options.itemMultiSelect === 'boolean' ? this.options.itemMultiSelect : this.itemMultiSelect;\n    if (!this.options) {\n      this.options = {};\n    }\n    if (this.options.disableCatetory) {\n      this.listCategory1 = {}; // no do query based on category for home view;\n      this.listCategory2 = {}; // no do query based on category for home view;\n    }\n    // this is to initialize the detail that will be used for search condition selection\n    let detail = {};\n    if (this.searchObj) {\n      this.searchDetailReady = true; // search provided from \"detail\", not from search bar.\n      detail = this.searchObj;\n    }\n    if (this.queryParams) {\n      this.listSortField = this.queryParams.listSortField;\n      this.listSortOrder = this.queryParams.listSortOrder;\n      if (this.queryParams.perPage) {\n        this.perPage = this.queryParams.perPage\n      }\n    }\n    this.detail = this.formatDetail(detail);\n    this.searchList();\n    // get editHintFields\n    this.searchHintFieldValues();\n  }\n  static getInstance() {\n    //used by others to call some common functions\n    return new MfilegroupListComponent(null, null, null, null, null);\n  }\n}","<div class=\"mt-4 mb-4 d-flex\" *ngIf=\"!options['disableTitleRow']\">\n</div>\n<ul *ngIf=\"listCategory1.listCategoryField\" class=\"nav nav-pills category-nav\">\n  <li *ngFor=\"let ele of categoryDisplays; let idx = index;\" class=\"nav-item\">\n    <a *ngIf=\" listCategory1.showEmptyCategory || (!listCategory1.showEmptyCategory && categoriesCounts[idx] > 0)\" class=\"nav-link\" [ngClass]=\"{'active': idx === selectedCategory }\" [routerLink]=\"['.']\" queryParamsHandling=\"preserve\" (click)=\"categorySelected(idx)\">\n      {{ele}} <span *ngIf=\"listCategory1.showCategoryCounts\">({{categoriesCounts[idx]}})</span>\n    </a>\n  </li>\n</ul>\n<div>\n  <div *ngIf=\"!options['disableListHead']\" class=\"container search\">\n    <div class=\"row\" *ngIf=\"!options['disableListSearch']\">\n      <div class=\"col\">\n        <div class=\"input-group\">\n          <input type=\"search\" class=\"form-control border border-secondary\" id=\"mfilegroupTextSearch\" #mfilegroupTextSearch [(ngModel)]=\"searchText\" (search)=\"$event.target.blur();searchList();\" placeholder=\"Search for name\">\n          <div *ngIf=\"searchText\" class=\"input-group-append icon-search-clear\">\n            <span>\n              <i class=\"fas fa-times-circle\" (click)=\"onSearchTextClear()\" title=\"Clear\"></i>\n            </span>\n          </div>\n          <div class=\"input-group-append\">\n            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"searchList()\"><i class=\"fas fa-search\"></i></button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"!options['disableActionButtions']\">\n      <div class=\"col\">\n        <div class=\"action-buttons\">\n          <a [routerLink]=\"['../new' ]\" [skipLocationChange]=\"false\" class=\"btn btn-outline-primary\">Create</a>\n        </div>\n      </div>\n    </div>\n    <hr />\n    <div *ngIf=\"!options['disablePagination']\">\n      <div class=\"row justify-content-end mt-3\">\n        <div *ngIf=\"list.length > 2\" class=\"sort-selection mr-5\">\n          <div class=\"dropdown\" style=\"width: 100%;\">\n            <button class=\"sort-dropdown btn btn-light btn-sm dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> Sort: <span *ngIf=\"listSortField && !viewHiddenFields.includes(listSortField)\">{{listSortFieldDisplay}}\n                <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up\"></i>\n                <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down\"></i>\n              </span>\n            </button>\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('name', 'Name', 'asc')\">Name<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('name', 'Name', 'desc')\">Name<i class=\"fas fa-arrow-down\"></i></a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-between\">\n        <div>\n          <div *ngIf=\"list.length > 0\">\n            <input type=\"radio\" name=\"view-filter\" id=\"list-view\" class=\"view-radio\" (click)=\"setListViewFilter('list')\" [checked]=\"isShowListView('list')\">\n            <label for=\"list-view\"><i class=\"fa fa-th-list\"></i></label>\n            <input type=\"radio\" name=\"view-filter\" id=\"grid-view\" class=\"view-radio\" (click)=\"setListViewFilter('grid')\" [checked]=\"isShowListView('grid')\">\n            <label for=\"grid-view\"><i class=\"fa fa-th\"></i></label>\n            <input type=\"radio\" name=\"view-filter\" id=\"table-view\" class=\"view-radio\" (click)=\"setListViewFilter('table')\" [checked]=\"isShowListView('table')\">\n            <label for=\"table-view\"><i class=\"fa fa-list-alt\"></i></label>\n          </div>\n        </div>\n        <div>\n          <div class=\"total_counts\">\n            <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n            <a class=\"ml-3\" routerLink=\".\" (click)=\"onRefresh()\"><i class=\"fa fa-sync-alt\"></i></a>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n        <div *ngIf=\"totalPages > 1\">\n          <ul class=\"pagination justify-content-center\">\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n                <span aria-hidden=\"true\">&laquo;</span>\n                <span class=\"sr-only\">Previous</span>\n              </a>\n            </li>\n            <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n            </li>\n            <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n                <span class=\"sr-only\">Next</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n          <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-records\" *ngIf=\"list.length === 0\">\n    <span *ngIf=\"loaded\">No records found.</span>\n    <span *ngIf=\"!loaded\">Loading...</span>\n  </div>\n  <div *ngIf=\"list.length > 0\">\n    <div class=\"listview\" *ngIf=\"isShowListView('list')\">\n      <div class=\"list-block\" *ngFor=\"let detail of list;  let i = index; let list_index = index;\">\n        <hr *ngIf=\"i==0\" class=\"list-devider\">\n        <div class=\"list-card text-left\" [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i],\n\t\t\t\t\t\t\t'clickable-card': clickItemAction}\">\n          <div class=\"list-fields\" [ngClass]=\"{pointer: clickItemAction}\" (click)=\"clickOneItem(i)\">\n            <div class=\"list-body-fields\">\n              <h5>\n                <div class=\"mr-1 d-inline-block\">\n                  {{detail['name']}}\n                </div>\n              </h5>\n              <div class=\"d-flex flex-row mt-1\">\n              </div>\n            </div>\n          </div>\n          <div class=\"card-action-icons\">\n            <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n          </div>\n        </div>\n        <hr class=\"list-devider\">\n      </div>\n    </div>\n    <div class=\"gridview\" *ngIf=\"isShowListView('grid')\">\n      <div class=\"grid-block\" *ngFor=\"let detail of list;  let i = index; let list_index = index;\">\n        <div class=\"card text-left h-100\" [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i],\n\t\t\t\t\t\t\t'clickable-card': clickItemAction}\">\n          <div class=\"grid-fields\" [ngClass]=\"{pointer: clickItemAction}\" (click)=\"clickOneItem(i)\">\n            <div class=\"card-header grid-head\">\n              <div>\n                <h5>\n                  <div class=\"mr-1 d-inline-block\">\n                    {{detail['name']}}\n                  </div>\n                </h5>\n              </div>\n            </div>\n            <div class=\"card-body\">\n            </div>\n          </div>\n          <div class=\"card-action-icons\">\n            <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n          </div>\n        </div>\n      </div>\n    </div>\n    <table *ngIf=\"isShowListView('table')\" class=\"table table-bordered table-hover\">\n      <thead class=\"thead-light\">\n        <tr>\n          <th scope=\"col\">#</th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('name', 'Name')\"> Name <span *ngIf=\"listSortField === 'name'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th scope=\"col\" style=\"width:3.8rem;\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        <ng-template ngFor let-detail [ngForOf]=\"list\" let-i=\"index\">\n          <tr [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i]}\">\n            <td scope=\"row\" (click)=\"clickOneItem(i)\" class=\"pointer read-more mt-3\">\n              {{(page-1)*perPage+i+1}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['name']}}\n            </td>\n            <td>\n              <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n            </td>\n          </tr>\n        </ng-template>\n      </tbody>\n    </table>\n  </div>\n  <div class=\"container\">\n    <div *ngIf=\"!options['disablePagination']\">\n      <div class=\"row justify-content-end mt-3\">\n      </div>\n      <div class=\"d-flex justify-content-between\">\n        <div>\n        </div>\n        <div>\n          <div class=\"total_counts\">\n            <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n        <div *ngIf=\"totalPages > 1\">\n          <ul class=\"pagination justify-content-center\">\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n                <span aria-hidden=\"true\">&laquo;</span>\n                <span class=\"sr-only\">Previous</span>\n              </a>\n            </li>\n            <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n            </li>\n            <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n                <span class=\"sr-only\">Next</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n          <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import {\n  HttpClient\n} from '@angular/common/http';\nimport {\n  MddsBaseService\n} from '@hicoder/angular-core';\nconst servicePath = '/mfilegroup/';\nexport class MfilegroupBaseService extends MddsBaseService {\n  constructor(http: HttpClient, serverRootUrl: string) {\n    const serviceUrl = serverRootUrl + servicePath;\n    super(http, serviceUrl);\n  }\n}","import {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  MddsBaseComponent,\n  ViewType\n} from '@hicoder/angular-core';\nimport {\n  Component,\n  OnInit,\n  Injector,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  MfilegroupService\n} from './mfilegroup.service';\nconst itemCamelName = 'picture Group';\nexport {\n  ViewType\n};\nimport {\n  ViewChild\n} from '@angular/core';\nimport {\n  ElementRef\n} from '@angular/core';\n@Component({\n  template: '',\n})\nexport class MfilegroupComponent extends MddsBaseComponent implements OnInit {\n  // *** common input fields\n  @Input()\n  public style: any; // {}\n  @Input()\n  public options: any; // {} uiOptions\n  @Input()\n  public searchObj: any;\n  // *** list component\n  @Input()\n  public inputData: any;\n  @Input()\n  public queryParams: any; // {listSortField: 'a', listSortOrder: 'asc' / 'desc', perPage: 6}\n  @Input()\n  public categoryBy: string; //field name whose value is used as category\n  // list-asso component\n  @Input('asso') public associationField: string;\n  // list select component\n  @Output() outputData: any;\n  // *** edit / create component\n  @Input()\n  public id: string;\n  @Input()\n  public cid: string; // copy id\n  @Input()\n  public initData: any; // some fields has data already. eg: {a: b}. Used for add\n  @Input()\n  public embeddedView: boolean;\n  @Input()\n  public embedMode: string; // parent to tell the action - create\n  @Output()\n  public doneData = new EventEmitter < boolean > ();\n  @Output()\n  public done = new EventEmitter < any > ();\n  // *** detail component\n  // @Input() \n  // public id:string;\n  @Input()\n  public disableActionButtions: boolean;\n  @Output()\n  public eventEmitter: EventEmitter < any > = new EventEmitter();\n  // detail sub component\n  // @Input() inputData;\n  // detail show field component\n  // @Input() id: string;\n  @Input() detailObj: any;\n  @Input() showFieldsStr: string;\n  // detail sel component\n  //@Input() inputData;\n  //@Output() outputData;\n  // detail pop component\n  // @Input() inputData;\n  // @Output() outputData;\n  @ViewChild('FilesModal', {\n    static: true\n  }) public focusEl: ElementRef;\n  constructor(public mfilegroupService: MfilegroupService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(mfilegroupService, injector, router, route, location);\n    this.setItemNames(itemCamelName);\n    this.briefFieldsInfo = [];\n    this.briefFieldsInfo.push(['name', 'Name']);\n    this.requiredFields = ['name', ];\n    this.schemaName = 'mfilegroup';\n    this.dateFormat = 'MM/DD/YYYY';\n    this.timeFormat = 'hh:mm:ss';\n    this.modulePath = 'files';\n    this.indexFields = ['name', ];\n  }\n  ngOnInit() {\n    this.style = this.style || {};\n    this.options = this.options || {};\n  }\n}","import {\n  Injectable,\n  Inject,\n  OnDestroy,\n  SkipSelf\n} from '@angular/core';\nimport {\n  HttpClient\n} from '@angular/common/http';\nimport {\n  MfilegroupBaseService\n} from './mfilegroup.base.service';\nimport {\n  Files_SERVER_ROOT_URI\n} from '../files.tokens';\n@Injectable({\n  providedIn: 'root',\n})\nexport class MfilegroupService extends MfilegroupBaseService implements OnDestroy {\n  constructor(http: HttpClient, @Inject(Files_SERVER_ROOT_URI) private filesServerRootUri: string) {\n    super(http, filesServerRootUri);\n  }\n  ngOnDestroy() {}\n}"]}
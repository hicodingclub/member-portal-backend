{"version":3,"sources":["./src/app/emailing-cust/base/emailqueue/emailqueue-detail.cust.component.ts","./src/app/emailing-cust/base/emailqueue/emailqueue-edit.cust.component.ts","./src/app/emailing-cust/base/emailqueue/emailqueue-list.cust.component.ts","./src/app/emailing-cust/base/emailsettings/emailsettings-detail.cust.component.ts","./src/app/emailing-cust/base/emailsettings/emailsettings-edit.cust.component.ts","./src/app/emailing-cust/base/emailsettings/emailsettings-list.cust.component.ts","./src/app/emailing-cust/base/emailtemplate/emailtemplate-detail.cust.component.ts","./src/app/emailing-cust/base/emailtemplate/emailtemplate-edit.cust.component.ts","./src/app/emailing-cust/base/emailtemplate/emailtemplate-list.cust.component.ts","./src/app/emailing-cust/emailing-routing.cust.path.ts","./src/app/emailing-cust/emailing.conf.ts","./src/app/emailing-cust/emailing.cust.module.ts","./src/app/emailing-cust/emailing.tokens.value.ts","./src/app/emailing/emailing-routing.core.module.ts","./src/app/emailing/emailing-routing.core.path.ts","./src/app/emailing/emailing-routing.module.ts","./src/app/emailing/emailing.component.ts","./src/app/emailing/emailing.component.html","./src/app/emailing/emailing.core.module.ts","./src/app/emailing/emailing.directive.ts","./src/app/emailing/emailing.module.ts","./src/app/emailing/emailing.tokens.ts","./src/app/emailing/emailqueue/emailqueue-detail/emailqueue-detail-field.component.ts","./src/app/emailing/emailqueue/emailqueue-detail/emailqueue-detail-field.component.html","./src/app/emailing/emailqueue/emailqueue-detail/emailqueue-detail.component.ts","./src/app/emailing/emailqueue/emailqueue-detail/emailqueue-detail.component.html","./src/app/emailing/emailqueue/emailqueue-edit/emailqueue-edit.component.ts","./src/app/emailing/emailqueue/emailqueue-edit/emailqueue-edit.component.html","./src/app/emailing/emailqueue/emailqueue-list/emailqueue-list.component.ts","./src/app/emailing/emailqueue/emailqueue-list/emailqueue-list.component.html","./src/app/emailing/emailqueue/emailqueue.base.service.ts","./src/app/emailing/emailqueue/emailqueue.component.ts","./src/app/emailing/emailqueue/emailqueue.service.ts","./src/app/emailing/emailsettings/emailsettings-detail/emailsettings-detail-field.component.ts","./src/app/emailing/emailsettings/emailsettings-detail/emailsettings-detail-field.component.html","./src/app/emailing/emailsettings/emailsettings-detail/emailsettings-detail.component.ts","./src/app/emailing/emailsettings/emailsettings-detail/emailsettings-detail.component.html","./src/app/emailing/emailsettings/emailsettings-edit/emailsettings-edit.component.ts","./src/app/emailing/emailsettings/emailsettings-edit/emailsettings-edit.component.html","./src/app/emailing/emailsettings/emailsettings-list/emailsettings-list.component.ts","./src/app/emailing/emailsettings/emailsettings-list/emailsettings-list.component.html","./src/app/emailing/emailsettings/emailsettings.base.service.ts","./src/app/emailing/emailsettings/emailsettings.component.ts","./src/app/emailing/emailsettings/emailsettings.service.ts","./src/app/emailing/emailtemplate/emailtemplate-detail/emailtemplate-detail-field.component.ts","./src/app/emailing/emailtemplate/emailtemplate-detail/emailtemplate-detail-field.component.html","./src/app/emailing/emailtemplate/emailtemplate-detail/emailtemplate-detail.component.ts","./src/app/emailing/emailtemplate/emailtemplate-detail/emailtemplate-detail.component.html","./src/app/emailing/emailtemplate/emailtemplate-edit/emailtemplate-edit.component.ts","./src/app/emailing/emailtemplate/emailtemplate-edit/emailtemplate-edit.component.html","./src/app/emailing/emailtemplate/emailtemplate-list/emailtemplate-list.component.ts","./src/app/emailing/emailtemplate/emailtemplate-list/emailtemplate-list.component.html","./src/app/emailing/emailtemplate/emailtemplate.base.service.ts","./src/app/emailing/emailtemplate/emailtemplate.component.ts","./src/app/emailing/emailtemplate/emailtemplate.service.ts"],"names":[],"mappings":"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","file":"emailing-emailing-module-es2015.js","sourcesContent":["import { Input, Component } from '@angular/core';\n\nimport { EmailqueueComponent } from '../../../emailing/emailqueue/emailqueue.component';\n\n@Component({\n    template: '',\n})\nexport class EmailqueueDetailCustComponent extends EmailqueueComponent {\n}\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:53 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  EmailqueueComponent\n} from '../../../emailing/emailqueue/emailqueue.component';\n@Component({\n  template: '',\n})\nexport class EmailqueueDetailCustComponent extends EmailqueueComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { EmailqueueComponent } from '../../../emailing/emailqueue/emailqueue.component';\n\n@Component({\n    template: '',\n})\nexport class EmailqueueEditCustComponent extends EmailqueueComponent {        \n}\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:53 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  EmailqueueComponent\n} from '../../../emailing/emailqueue/emailqueue.component';\n@Component({\n  template: '',\n})\nexport class EmailqueueEditCustComponent extends EmailqueueComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { EmailqueueComponent } from '../../../emailing/emailqueue/emailqueue.component';\n\n@Component({\n    template: '',\n})\nexport class EmailqueueListCustComponent extends EmailqueueComponent {\n}\n\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:53 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  EmailqueueComponent\n} from '../../../emailing/emailqueue/emailqueue.component';\n@Component({\n  template: '',\n})\nexport class EmailqueueListCustComponent extends EmailqueueComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { EmailsettingsComponent } from '../../../emailing/emailsettings/emailsettings.component';\n\n@Component({\n    template: '',\n})\nexport class EmailsettingsDetailCustComponent extends EmailsettingsComponent {\n}\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:53 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  EmailsettingsComponent\n} from '../../../emailing/emailsettings/emailsettings.component';\n@Component({\n  template: '',\n})\nexport class EmailsettingsDetailCustComponent extends EmailsettingsComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { EmailsettingsComponent } from '../../../emailing/emailsettings/emailsettings.component';\n\n@Component({\n    template: '',\n})\nexport class EmailsettingsEditCustComponent extends EmailsettingsComponent {        \n}\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:53 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  EmailsettingsComponent\n} from '../../../emailing/emailsettings/emailsettings.component';\n@Component({\n  template: '',\n})\nexport class EmailsettingsEditCustComponent extends EmailsettingsComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { EmailsettingsComponent } from '../../../emailing/emailsettings/emailsettings.component';\n\n@Component({\n    template: '',\n})\nexport class EmailsettingsListCustComponent extends EmailsettingsComponent {\n}\n\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:53 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  EmailsettingsComponent\n} from '../../../emailing/emailsettings/emailsettings.component';\n@Component({\n  template: '',\n})\nexport class EmailsettingsListCustComponent extends EmailsettingsComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { EmailtemplateComponent } from '../../../emailing/emailtemplate/emailtemplate.component';\n\n@Component({\n    template: '',\n})\nexport class EmailtemplateDetailCustComponent extends EmailtemplateComponent {\n}\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:53 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  EmailtemplateComponent\n} from '../../../emailing/emailtemplate/emailtemplate.component';\n@Component({\n  template: '',\n})\nexport class EmailtemplateDetailCustComponent extends EmailtemplateComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { EmailtemplateComponent } from '../../../emailing/emailtemplate/emailtemplate.component';\n\n@Component({\n    template: '',\n})\nexport class EmailtemplateEditCustComponent extends EmailtemplateComponent {        \n}\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:53 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  EmailtemplateComponent\n} from '../../../emailing/emailtemplate/emailtemplate.component';\n@Component({\n  template: '',\n})\nexport class EmailtemplateEditCustComponent extends EmailtemplateComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { EmailtemplateComponent } from '../../../emailing/emailtemplate/emailtemplate.component';\n\n@Component({\n    template: '',\n})\nexport class EmailtemplateListCustComponent extends EmailtemplateComponent {\n}\n\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:53 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  EmailtemplateComponent\n} from '../../../emailing/emailtemplate/emailtemplate.component';\n@Component({\n  template: '',\n})\nexport class EmailtemplateListCustComponent extends EmailtemplateComponent {}**** End of recent updates.<<<*/\n","\n\n// Path under emailing/cust/\nexport const EmailingRoutingCustPath = [\n  // your customization goes here\n];\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:52 GMT-0700 (Pacific Daylight Time)\n\n// Path under emailing/cust/\nexport const EmailingRoutingCustPath = [\n  // your customization goes here\n];**** End of recent updates.<<<*/\n","import { Routes } from '@angular/router';\n\nimport { EmailingComponent } from '../emailing/emailing.component';\n\n//Import routing paths\nimport { \n  emailtemplateRoutingCorePath,\n  emailsettingsRoutingCorePath,\n  emailqueueRoutingCorePath,  \n} from '../emailing/emailing-routing.core.path';\n\nexport const EmailingCoreRoutes: Routes = [\n  { \n    // Lazy Load: and add to app routing: \n    //     { path: 'emailing', loadChildren: () => import('./emailing/emailing.module').then(m => m.EmailingModule) },\n    path: '',\n    // non lazy load config. Include module in app module.\n    // path: 'emailing',\n\n    component: EmailingComponent,\n    children: [\n      {path: '',  redirectTo: 'emailtemplate', pathMatch: 'full'},\n\n      { path: 'emailtemplate',\n        children: emailtemplateRoutingCorePath,\n        data: {mraLevel: 1, item: 'emailtemplate'}\n      },\n      { path: 'emailsettings',\n        children: emailsettingsRoutingCorePath,\n        data: {mraLevel: 1, item: 'emailsettings'}\n      },\n      { path: 'emailqueue',\n        children: emailqueueRoutingCorePath,\n        data: {mraLevel: 1, item: 'emailqueue'}\n      },\n    ]\n  },\n];\n\nimport { EmailingRoutingCustPath } from './emailing-routing.cust.path';\n\nexport const EmailingRoutes: Routes = [\n  {\n    // Lazy Load: and add to app routing: \n    //     { path: 'emailing', loadChildren: () => import('./emailing/emailing.module').then(m => m.EmailingModule) },\n    path: 'cust',\n    // non lazy load config. Include module in app module.\n    // path: 'emailing/cust',\n\n    children: EmailingRoutingCustPath,\n  },\n];\n\nexport const emailing_server_root_uri: string = '/api/emailing';\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:52 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Routes\n} from '@angular/router';\nimport {\n  EmailingComponent\n} from '../emailing/emailing.component';\n//Import routing paths\nimport {\n  emailtemplateRoutingCorePath,\n  emailsettingsRoutingCorePath,\n  emailqueueRoutingCorePath,\n} from '../emailing/emailing-routing.core.path';\nexport const EmailingCoreRoutes: Routes = [{\n  // Lazy Load: and add to app routing:\n  //     { path: 'emailing', loadChildren: () => import('./emailing/emailing.module').then(m => m.EmailingModule) },\n  path: '',\n  // non lazy load config. Include module in app module.\n  // path: 'emailing',\n  component: EmailingComponent,\n  children: [{\n    path: '',\n    redirectTo: 'emailtemplate',\n    pathMatch: 'full'\n  }, {\n    path: 'emailtemplate',\n    children: emailtemplateRoutingCorePath,\n    data: {\n      mraLevel: 1,\n      item: 'emailtemplate'\n    }\n  }, {\n    path: 'emailsettings',\n    children: emailsettingsRoutingCorePath,\n    data: {\n      mraLevel: 1,\n      item: 'emailsettings'\n    }\n  }, {\n    path: 'emailqueue',\n    children: emailqueueRoutingCorePath,\n    data: {\n      mraLevel: 1,\n      item: 'emailqueue'\n    }\n  }, ]\n}, ];\nimport {\n  EmailingRoutingCustPath\n} from './emailing-routing.cust.path';\nexport const EmailingRoutes: Routes = [{\n  // Lazy Load: and add to app routing:\n  //     { path: 'emailing', loadChildren: () => import('./emailing/emailing.module').then(m => m.EmailingModule) },\n  path: 'cust',\n  // non lazy load config. Include module in app module.\n  // path: 'emailing/cust',\n  children: EmailingRoutingCustPath,\n}, ];**** End of recent updates.<<<*/\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { EmailingCoreModule } from '../emailing/emailing.core.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n  \n    EmailingCoreModule,\n  ],\n  declarations: [\n  ],\n  exports: [\n  ],\n  providers: [\n  ],\n  entryComponents: [\n  ],\n})\nexport class EmailingCustModule { }\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:52 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  NgModule\n} from '@angular/core';\nimport {\n  CommonModule\n} from '@angular/common';\nimport {\n  RouterModule\n} from '@angular/router';\nimport {\n  FormsModule\n} from '@angular/forms';\nimport {\n  EmailingCoreModule\n} from '../emailing/emailing.core.module';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    EmailingCoreModule,\n  ],\n  declarations: [],\n  exports: [],\n  providers: [],\n  entryComponents: [],\n})\nexport class EmailingCustModule {}**** End of recent updates.<<<*/\n","export const emailing_server_root_uri: string = '/api/emailing';\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:52 GMT-0700 (Pacific Daylight Time)\n\nexport const emailing_server_root_uri: string = '/api/emailing';**** End of recent updates.<<<*/\n","import {\n  NgModule\n} from '@angular/core';\nimport {\n  RouterModule\n} from '@angular/router';\nimport {\n  EmailingComponent\n} from './emailing.component';\nimport {\n  EmailingCoreRoutes\n} from '../emailing-cust/emailing.conf';\n@NgModule({\n  imports: [RouterModule.forChild(EmailingCoreRoutes)],\n  exports: [RouterModule],\n  providers: [],\n})\nexport class EmailingRoutingCoreModule {}","// Import components for each schema\nimport {\n  EmailtemplateListComponent\n} from './emailtemplate/emailtemplate-list/emailtemplate-list.component';\nimport {\n  EmailtemplateDetailComponent\n} from './emailtemplate/emailtemplate-detail/emailtemplate-detail.component';\nimport {\n  EmailtemplateEditComponent\n} from './emailtemplate/emailtemplate-edit/emailtemplate-edit.component';\nimport {\n  EmailsettingsListComponent\n} from './emailsettings/emailsettings-list/emailsettings-list.component';\nimport {\n  EmailsettingsDetailComponent\n} from './emailsettings/emailsettings-detail/emailsettings-detail.component';\nimport {\n  EmailsettingsEditComponent\n} from './emailsettings/emailsettings-edit/emailsettings-edit.component';\nimport {\n  EmailqueueListComponent\n} from './emailqueue/emailqueue-list/emailqueue-list.component';\nimport {\n  EmailqueueDetailComponent\n} from './emailqueue/emailqueue-detail/emailqueue-detail.component';\nimport {\n  EmailqueueEditComponent\n} from './emailqueue/emailqueue-edit/emailqueue-edit.component';\nimport {\n  AuthGuard\n} from '@hicoder/angular-auth';\nexport const emailtemplateRoutingCorePath = [{\n  path: 'list',\n  component: EmailtemplateListComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'detail/:id',\n  component: EmailtemplateDetailComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'edit/:id',\n  component: EmailtemplateEditComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'new',\n  component: EmailtemplateEditComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: '**',\n  redirectTo: 'list',\n  pathMatch: 'full'\n}];\nexport const emailsettingsRoutingCorePath = [{\n  path: 'list',\n  component: EmailsettingsListComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'detail/:id',\n  component: EmailsettingsDetailComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'edit/:id',\n  component: EmailsettingsEditComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: '**',\n  redirectTo: 'list',\n  pathMatch: 'full'\n}];\nexport const emailqueueRoutingCorePath = [{\n  path: 'list',\n  component: EmailqueueListComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'detail/:id',\n  component: EmailqueueDetailComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'edit/:id',\n  component: EmailqueueEditComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: '**',\n  redirectTo: 'list',\n  pathMatch: 'full'\n}];","import {\n  NgModule\n} from '@angular/core';\nimport {\n  RouterModule\n} from '@angular/router';\nimport {\n  EmailingRoutes\n} from '../emailing-cust/emailing.conf';\n@NgModule({\n  imports: [RouterModule.forChild(EmailingRoutes)],\n  exports: [RouterModule],\n  providers: [],\n})\nexport class EmailingRoutingModule {}","import {\n  Component,\n  OnInit\n} from '@angular/core';\n@Component({\n  selector: 'app-emailing',\n  templateUrl: './emailing.component.html',\n  styleUrls: ['./emailing.component.css'],\n})\nexport class EmailingComponent implements OnInit {\n  constructor() {}\n  ngOnInit() {}\n}","<div class=\"container\">\n  <div class=\"card component-main-card\">\n    <div class=\"card-header\">\n      <nav class=\"nav nav-pills\">\n        <a class=\"nav-item nav-link\" routerLink=\"./emailtemplate\" routerLinkActive=\"active\">Email Template</a>\n        <a class=\"nav-item nav-link\" routerLink=\"./emailsettings\" routerLinkActive=\"active\">Email Settings</a>\n        <a class=\"nav-item nav-link\" routerLink=\"./emailqueue\" routerLinkActive=\"active\">Email Queue</a>\n      </nav>\n    </div>\n    <div class=\"card-body\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>","import {\n  NgModule\n} from '@angular/core';\nimport {\n  CommonModule\n} from '@angular/common';\nimport {\n  FormsModule\n} from '@angular/forms';\nimport {\n  NgbModule,\n  NgbDateParserFormatter\n} from '@ng-bootstrap/ng-bootstrap';\nimport {\n  MraNgbDateFormatterService\n} from './emailing.directive';\nimport {\n  MddsRichtextEditorModule\n} from '@hicoder/angular-richtext';\nimport {\n  MddsCoreModule\n} from '@hicoder/angular-core';\nimport {\n  EmailingRoutingCoreModule\n} from './emailing-routing.core.module';\nimport {\n  EmailingComponent\n} from './emailing.component';\n// Import components for each schema\nimport {\n  EmailtemplateComponent\n} from './emailtemplate/emailtemplate.component';\nimport {\n  EmailtemplateListComponent\n} from './emailtemplate/emailtemplate-list/emailtemplate-list.component';\nimport {\n  EmailtemplateListCustComponent\n} from '../emailing-cust/base/emailtemplate/emailtemplate-list.cust.component';\nimport {\n  EmailtemplateDetailComponent\n} from './emailtemplate/emailtemplate-detail/emailtemplate-detail.component';\nimport {\n  EmailtemplateDetailCustComponent\n} from '../emailing-cust/base/emailtemplate/emailtemplate-detail.cust.component';\nimport {\n  EmailtemplateDetailFieldComponent\n} from './emailtemplate/emailtemplate-detail/emailtemplate-detail-field.component';\nimport {\n  EmailtemplateEditComponent\n} from './emailtemplate/emailtemplate-edit/emailtemplate-edit.component';\nimport {\n  EmailtemplateEditCustComponent\n} from '../emailing-cust/base/emailtemplate/emailtemplate-edit.cust.component';\nimport {\n  EmailsettingsComponent\n} from './emailsettings/emailsettings.component';\nimport {\n  EmailsettingsListComponent\n} from './emailsettings/emailsettings-list/emailsettings-list.component';\nimport {\n  EmailsettingsListCustComponent\n} from '../emailing-cust/base/emailsettings/emailsettings-list.cust.component';\nimport {\n  EmailsettingsDetailComponent\n} from './emailsettings/emailsettings-detail/emailsettings-detail.component';\nimport {\n  EmailsettingsDetailCustComponent\n} from '../emailing-cust/base/emailsettings/emailsettings-detail.cust.component';\nimport {\n  EmailsettingsDetailFieldComponent\n} from './emailsettings/emailsettings-detail/emailsettings-detail-field.component';\nimport {\n  EmailsettingsEditComponent\n} from './emailsettings/emailsettings-edit/emailsettings-edit.component';\nimport {\n  EmailsettingsEditCustComponent\n} from '../emailing-cust/base/emailsettings/emailsettings-edit.cust.component';\nimport {\n  EmailqueueComponent\n} from './emailqueue/emailqueue.component';\nimport {\n  EmailqueueListComponent\n} from './emailqueue/emailqueue-list/emailqueue-list.component';\nimport {\n  EmailqueueListCustComponent\n} from '../emailing-cust/base/emailqueue/emailqueue-list.cust.component';\nimport {\n  EmailqueueDetailComponent\n} from './emailqueue/emailqueue-detail/emailqueue-detail.component';\nimport {\n  EmailqueueDetailCustComponent\n} from '../emailing-cust/base/emailqueue/emailqueue-detail.cust.component';\nimport {\n  EmailqueueDetailFieldComponent\n} from './emailqueue/emailqueue-detail/emailqueue-detail-field.component';\nimport {\n  EmailqueueEditComponent\n} from './emailqueue/emailqueue-edit/emailqueue-edit.component';\nimport {\n  EmailqueueEditCustComponent\n} from '../emailing-cust/base/emailqueue/emailqueue-edit.cust.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgbModule,\n    MddsCoreModule,\n    MddsRichtextEditorModule,\n    EmailingRoutingCoreModule,\n  ],\n  declarations: [\n    EmailingComponent,\n    EmailtemplateComponent,\n    EmailtemplateListComponent,\n    EmailtemplateListCustComponent,\n    EmailtemplateDetailCustComponent,\n    EmailtemplateDetailComponent,\n    EmailtemplateDetailFieldComponent,\n    EmailtemplateEditComponent,\n    EmailtemplateEditCustComponent,\n    EmailsettingsComponent,\n    EmailsettingsListComponent,\n    EmailsettingsListCustComponent,\n    EmailsettingsDetailCustComponent,\n    EmailsettingsDetailComponent,\n    EmailsettingsDetailFieldComponent,\n    EmailsettingsEditComponent,\n    EmailsettingsEditCustComponent,\n    EmailqueueComponent,\n    EmailqueueListComponent,\n    EmailqueueListCustComponent,\n    EmailqueueDetailCustComponent,\n    EmailqueueDetailComponent,\n    EmailqueueDetailFieldComponent,\n    EmailqueueEditComponent,\n    EmailqueueEditCustComponent,\n  ],\n  exports: [\n    EmailingComponent,\n    EmailtemplateListComponent,\n    EmailtemplateDetailComponent,\n    EmailtemplateDetailFieldComponent,\n    EmailtemplateEditComponent,\n    EmailsettingsListComponent,\n    EmailsettingsDetailComponent,\n    EmailsettingsDetailFieldComponent,\n    EmailsettingsEditComponent,\n    EmailqueueListComponent,\n    EmailqueueDetailComponent,\n    EmailqueueDetailFieldComponent,\n    EmailqueueEditComponent,\n  ],\n  providers: [{\n    provide: NgbDateParserFormatter,\n    useClass: MraNgbDateFormatterService\n  }, ],\n  entryComponents: [\n    EmailtemplateEditComponent,\n  ]\n})\nexport class EmailingCoreModule {}","import {\n  Injectable\n} from \"@angular/core\";\nimport {\n  NgbDateParserFormatter,\n  NgbDateStruct\n} from '@ng-bootstrap/ng-bootstrap';\nimport {\n  dateStructureToString,\n  stringToDateStructure\n} from '@hicoder/angular-core';\n@Injectable()\nexport class MraNgbDateFormatterService extends NgbDateParserFormatter {\n  private dateFormat = 'MM-DD-YYYY';\n  private timeFormat = 'hh:mm:ss';\n  // from input -> internal model\n  parse(value: string): NgbDateStruct {\n    return stringToDateStructure(value, this.dateFormat);\n  }\n  // from internal model -> string\n  format(date: NgbDateStruct): string {\n    return dateStructureToString(date, this.dateFormat);\n  }\n}","import {\n  NgModule\n} from '@angular/core';\nimport {\n  EmailingRoutingModule\n} from './emailing-routing.module';\nimport {\n  EmailingCoreModule\n} from './emailing.core.module';\nimport {\n  EmailingCustModule\n} from '../emailing-cust/emailing.cust.module'\n@NgModule({\n  imports: [\n    EmailingRoutingModule,\n    EmailingCoreModule,\n    EmailingCustModule,\n  ],\n  declarations: [],\n  exports: [\n    EmailingCoreModule,\n    EmailingCustModule,\n  ],\n  providers: [],\n  entryComponents: []\n})\nexport class EmailingModule {}","import {\n  InjectionToken\n} from '@angular/core';\nimport {\n  emailing_server_root_uri\n} from '../emailing-cust/emailing.tokens.value';\nexport const Emailing_SERVER_ROOT_URI = new InjectionToken < string > ('Emailing_SERVER_ROOT_URI', {\n  factory: (): string => emailing_server_root_uri,\n  providedIn: 'root',\n}, );","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  EmailqueueComponent,\n  ViewType\n} from '../emailqueue.component';\nimport {\n  EmailqueueService\n} from '../emailqueue.service';\n@Component({\n  selector: 'app-emailqueue-detail-field',\n  templateUrl: './emailqueue-detail-field.component.html',\n  styleUrls: ['./emailqueue-detail.component.css']\n})\nexport class EmailqueueDetailFieldComponent extends EmailqueueComponent\nimplements OnInit {\n  // @Input() id: string;\n  // @Input() detailObj: any;\n  // @Input() showFieldsStr: string;\n  showFields: string[];\n  constructor(public emailqueueService: EmailqueueService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(emailqueueService, injector, router, route, location);\n    this.view = ViewType.DETAIL;\n    this.fieldDisplayNames = {\n      'subject': 'Subject',\n      'from': 'From',\n      'to': 'To',\n      'processed': 'Processed',\n      'number': 'Number',\n      'sent': 'Sent',\n      'result': 'Result',\n      'createdAt': 'Created at',\n      'updatedAt': 'Updated at',\n      'content': 'Content',\n      'replacements': 'Replacements',\n      'defaultReplacement': 'Default Replacement',\n    };\n    this.stringFields.push('subject');\n    this.stringFields.push('from');\n    this.stringFields.push('to');\n    this.stringFields.push('result');\n    this.stringFields.push('content');\n    this.stringFields.push('replacements');\n    this.stringFields.push('defaultReplacement');\n    this.dateFields = ['createdAt', 'updatedAt', ];\n    this.numberFields = ['number', 'sent', ];\n  }\n  ngOnInit() {\n    if (!this.showFieldsStr) {\n      console.error(\"A field has to be given to show it.\");\n      return;\n    }\n    this.showFields = this.showFieldsStr.match(/\\S+/g);\n    if (this.detailObj) {\n      this.onDetailReturned(this.detailObj, null);\n    } else {\n      if (!this.id) this.id = this.id;\n      if (this.id) this.populateDetail(this.id);\n      else {\n        console.error(\"No id provided to show info\");\n        return;\n      }\n    }\n  }\n}","<div *ngIf=\"detail && showFields.includes('subject')\">\n  {{detail['subject']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('from')\">\n  {{detail['from']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('to')\">\n  {{detail['to']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('processed')\">{{detail['processed']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('number')\">\n  {{detail['number']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('sent')\">\n  {{detail['sent']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('result')\">\n  {{detail['result']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('createdAt')\"> {{detail['createdAt']? (detail['createdAt']['originalValue'] | date:'medium') : ''}}\n</div>\n<div *ngIf=\"detail && showFields.includes('updatedAt')\"> {{detail['updatedAt']? (detail['updatedAt']['originalValue'] | date:'medium') : ''}}\n</div>\n<div *ngIf=\"detail && showFields.includes('content')\">\n  <div libMddsRichtextShow=\"emailqueueDetailContent\" [content]=\"detail['content']\"></div>\n</div>\n<div *ngIf=\"detail && showFields.includes('replacements')\">\n  {{detail['replacements']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('defaultReplacement')\">\n  {{detail['defaultReplacement']}}\n</div>","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  EmailqueueDetailCustComponent\n} from '../../../emailing-cust/base/emailqueue/emailqueue-detail.cust.component';\nimport {\n  ViewType\n} from '../emailqueue.component';\nimport {\n  EmailqueueService\n} from '../emailqueue.service';\n@Component({\n  selector: 'app-emailqueue-detail',\n  templateUrl: './emailqueue-detail.component.html',\n  styleUrls: ['./emailqueue-detail.component.css']\n})\nexport class EmailqueueDetailComponent extends EmailqueueDetailCustComponent implements OnInit, AfterViewInit {\n  // @Input() \n  // public id:string;\n  // @Input()\n  // public searchObj:any;\n  // @Input()\n  // public disableActionButtions:boolean;\n  // @Output()\n  // public eventEmitter: EventEmitter<any> = new EventEmitter();\n  constructor(public emailqueueService: EmailqueueService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(emailqueueService, injector, router, route, location);\n    this.view = ViewType.DETAIL;\n    this.fieldDisplayNames = {\n      'subject': 'Subject',\n      'from': 'From',\n      'to': 'To',\n      'processed': 'Processed',\n      'number': 'Number',\n      'sent': 'Sent',\n      'result': 'Result',\n      'createdAt': 'Created at',\n      'updatedAt': 'Updated at',\n      'content': 'Content',\n      'replacements': 'Replacements',\n      'defaultReplacement': 'Default Replacement',\n    };\n    this.stringFields.push('subject');\n    this.stringFields.push('from');\n    this.stringFields.push('to');\n    this.stringFields.push('result');\n    this.stringFields.push('content');\n    this.stringFields.push('replacements');\n    this.stringFields.push('defaultReplacement');\n    this.dateFields = ['createdAt', 'updatedAt', ];\n    this.numberFields = ['number', 'sent', ];\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    if (!this.id) this.id = this.route.snapshot.paramMap.get('id');\n    if (this.id) {\n      this.populateDetail(this.id);\n    } else if (this.searchObj) {\n      // search item based on the unique value\n      this.populateDetailByFields(this.searchObj);\n    } else {\n      console.error(\"Routing error for detail view... no id...\");\n      return;\n    }\n  }\n  ngAfterViewInit() {}\n}","<div class=\"detail\" *ngIf=\"detail\">\n  <div *ngIf=\"!options['disableActionButtions']\">\n    <div *ngIf=\"!disableActionButtions && !options['disableActionButtions']\" class=\"action-buttons\">\n      <a *ngIf=\"!options['disableActionList']\" routerLink=\"../../list\" class=\"action-go-list\"><i class=\"fas fa-list\" title=\"List\"></i><!--  span>&nbsp;&nbsp;{{ItemCamelName}} List</span--></a>\n      <a *ngIf=\"!options['disableActionEdit']\" [routerLink]=\"['../../edit', detail['_id'] ]\" [skipLocationChange]=\"false\" class=\"btn btn-outline-primary\">Edit</a>\n    </div>\n  </div>\n  <div class=\"card text-left transparent-border \">\n    <div class=\"grid-fields\">\n      <div class=\"card-header grid-head\">\n        <div class=\"ml-1\">\n          <h5>\n            <div class=\"mr-1 d-inline-block\">\n              {{detail['subject']}}\n            </div>\n          </h5>\n        </div>\n      </div>\n      <div class=\"card-body\">\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>From:</label></div>\n            <div class=\"ml-3\">\n              {{detail['from']}}</div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>To:</label></div>\n            <div class=\"ml-3\">\n              {{detail['to']}}</div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Processed:</label></div>\n            <div class=\"ml-3\">{{detail['processed']}} </div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Number:</label></div>\n            <div class=\"ml-3\">\n              {{detail['number']}}</div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Sent:</label></div>\n            <div class=\"ml-3\">\n              {{detail['sent']}}</div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Result:</label></div>\n            <div class=\"ml-3\">\n              {{detail['result']}}</div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Created at:</label></div>\n            <div class=\"ml-3\"> {{detail['createdAt']? (detail['createdAt']['originalValue'] | date:'medium') : ''}}</div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Updated at:</label></div>\n            <div class=\"ml-3\"> {{detail['updatedAt']? (detail['updatedAt']['originalValue'] | date:'medium') : ''}}</div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Content:</label></div>\n            <div class=\"ml-3\">\n              <div libMddsRichtextShow=\"emailqueueDetailContent\" [content]=\"detail['content']\"></div>\n            </div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Replacements:</label></div>\n            <div class=\"ml-3\">\n              {{detail['replacements']}}</div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Default Replacement:</label></div>\n            <div class=\"ml-3\">\n              {{detail['defaultReplacement']}}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"!options['disablePipeline']\">\n  </div>\n  <div *ngIf=\"!options['disableRefLink']\">\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  Directive,\n  EventEmitter\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\ndeclare const $: any;\nimport {\n  EmailqueueEditCustComponent\n} from '../../../emailing-cust/base/emailqueue/emailqueue-edit.cust.component';\nimport {\n  ViewType\n} from '../emailqueue.component';\nimport {\n  EmailqueueService\n} from '../emailqueue.service';\n@Component({\n  selector: 'app-emailqueue-edit',\n  templateUrl: './emailqueue-edit.component.html',\n  styleUrls: ['./emailqueue-edit.component.css']\n})\nexport class EmailqueueEditComponent extends EmailqueueEditCustComponent implements OnInit, AfterViewInit {\n  // @Input() \n  // public id: string;\n  // @Input()\n  // public cid: string; // copy id\n  // @Input()\n  // public initData: any; // some fields has data already. eg: {a: b}. Used for add\n  // @Output()\n  // public doneData = new EventEmitter<boolean>();\n  // @Output()\n  // public done = new EventEmitter<any>();\n  // @Input()\n  // public embeddedView: boolean;\n  // @Input()\n  // public embedMode: string; // parent to tell the action - create\n  public action: string;\n  public minDate = {\n    year: (new Date()).getFullYear() - 100,\n    month: 1,\n    day: 1\n  };\n  constructor(public emailqueueService: EmailqueueService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(emailqueueService, injector, router, route, location);\n    this.view = ViewType.EDIT;\n    this.fieldDisplayNames = {\n      'subject': 'Subject',\n      'from': 'From',\n      'to': 'To',\n      'processed': 'Processed',\n      'number': 'Number',\n      'sent': 'Sent',\n      'result': 'Result',\n      'content': 'Content',\n      'replacements': 'Replacements',\n      'defaultReplacement': 'Default Replacement',\n    };\n    this.stringFields.push('subject');\n    this.stringFields.push('from');\n    this.stringFields.push('to');\n    this.stringFields.push('result');\n    this.stringFields.push('content');\n    this.stringFields.push('replacements');\n    this.stringFields.push('defaultReplacement');\n    this.numberFields = ['number', 'sent', ];\n    const detail = {};\n    this.detail = this.formatDetail(detail);\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.embedMode == 'create') { // parent ask to create\n      this.action = 'Create';\n      this.getDetailData();\n    } else {\n      if (!this.id) this.id = this.route.snapshot.paramMap.get('id');\n      if (this.id) {\n        this.action = 'Edit';\n        this.populateDetailForAction(this.id, 'edit'); //populate with action as 'edit'\n      } else {\n        this.action = 'Create';\n        if (!this.cid) this.cid = this.route.snapshot.queryParamMap.get('cid');\n        if (this.cid) {\n          this.populateDetailFromCopy(this.cid);\n        } else {\n          this.getDetailData();\n        }\n      }\n    }\n    // get editHintFields\n    this.searchHintFieldValues();\n  }\n  ngAfterViewInit() {\n    // Initialize all tooltips\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n  getDetailData() {\n    if (this.initData) {\n      this.action = 'Add';\n      let detail = {\n        processed: false,\n        sent: 0,\n      };\n      for (let prop of Object.keys(this.initData)) {\n        detail[prop] = this.initData[prop];\n        this.hiddenFields.push(prop);\n      }\n      this.detail = this.formatDetail(detail);\n    } else {\n      let detail = {\n        processed: false,\n        sent: 0,\n      };\n      this.detail = this.formatDetail(detail);\n    }\n  }\n}","<div class=\"edit\" *ngIf=\"detail\">\n  <div class=\"card\" style=\"text-align: left;\">\n    <div class=\"card-body\">\n      <h4 class=\"card-title\" *ngIf=\"!embeddedView && !options['title']\">{{action}} Email Queue</h4>\n      <h4 class=\"card-title\" *ngIf=\"options['title']\" [ngStyle]=\"style['card-title']\">\n        {{options['title']}}\n      </h4>\n      <p *ngIf=\"options['subtitle']\" [ngStyle]=\"style['card-subtitle']\">\n        {{options['subtitle']}}\n      </p>\n      <form (ngSubmit)=\"onSubmit()\" #editForm=\"ngForm\">\n        <ng-template [ngIf]=\"action == 'Edit'\">\n          <ng-template [ngIf]=\"!hiddenFields.includes('subject')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditSubject\">Subject</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditSubject\" [(ngModel)]=\"detail['subject']\" name=\"EditSubject\" #EditSubject=\"ngModel\">\n                <div *ngIf=\"detail['subject']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('subject')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditSubject.valid || EditSubject.pristine || EditSubject.errors.minlength\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('from')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditFrom\">From</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditFrom\" [(ngModel)]=\"detail['from']\" name=\"EditFrom\" #EditFrom=\"ngModel\">\n                <div *ngIf=\"detail['from']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('from')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditFrom.valid || EditFrom.pristine || EditFrom.errors.minlength\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('to')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditTo\">To</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditTo\" [(ngModel)]=\"detail['to']\" name=\"EditTo\" #EditTo=\"ngModel\">\n                <div *ngIf=\"detail['to']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('to')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditTo.valid || EditTo.pristine || EditTo.errors.minlength\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('processed')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditProcessed\">Processed</label>\n              <div class=\"form-check\" [ngClass]=\"{'ng-valid': true} \">\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditProcessed\" class=\"form-check-input\" id=\"EditProcessedYes\" [value]=\"true\" [(ngModel)]=\"detail['processed']\" #EditProcessed=\"ngModel\">\n                  <label class=\"form-check-label\">Yes</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditProcessed\" class=\"form-check-input\" id=\"EditProcessedNo\" [value]=\"false\" [(ngModel)]=\"detail['processed']\" #EditProcessed=\"ngModel\">\n                  <label class=\"form-check-label\">No</label>\n                </div>\n                <div *ngIf=\"detail['processed'] == true || detail['processed'] == false\" class=\"form-check-inline\" (click)=\"clearValueFromDetail('processed')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditProcessed.valid || EditProcessed.pristine\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('number')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditNumber\">Number</label>\n              <input type=\"number\" class=\"form-control\" id=\"EditNumber\" [(ngModel)]=\"detail['number']\" name=\"EditNumber\" #EditNumber=\"ngModel\">\n              <div [hidden]=\"EditNumber.valid || EditNumber.pristine || EditNumber.errors.libMddsMinNumber\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('sent')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditSent\">Sent</label>\n              <input type=\"number\" class=\"form-control\" id=\"EditSent\" [(ngModel)]=\"detail['sent']\" name=\"EditSent\" #EditSent=\"ngModel\">\n              <div [hidden]=\"EditSent.valid || EditSent.pristine || EditSent.errors.libMddsMinNumber\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('result')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditResult\">Result</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditResult\" [(ngModel)]=\"detail['result']\" name=\"EditResult\" #EditResult=\"ngModel\">\n                <div *ngIf=\"detail['result']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('result')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditResult.valid || EditResult.pristine || EditResult.errors.minlength\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('content')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditContent\">Content</label>\n              <lib-richtext-editor [(ngModel)]=\"detail['content']\" name=\"EditContent\" #EditContent=\"ngModel\">\n              </lib-richtext-editor>\n              <div [hidden]=\"EditContent.valid\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('replacements')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditReplacements\">Replacements</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditReplacements\" [(ngModel)]=\"detail['replacements']\" name=\"EditReplacements\" #EditReplacements=\"ngModel\">\n                <div *ngIf=\"detail['replacements']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('replacements')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditReplacements.valid || EditReplacements.pristine || EditReplacements.errors.minlength\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('defaultReplacement')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditDefaultReplacement\">Default Replacement</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditDefaultReplacement\" [(ngModel)]=\"detail['defaultReplacement']\" name=\"EditDefaultReplacement\" #EditDefaultReplacement=\"ngModel\">\n                <div *ngIf=\"detail['defaultReplacement']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('defaultReplacement')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditDefaultReplacement.valid || EditDefaultReplacement.pristine || EditDefaultReplacement.errors.minlength\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n        </ng-template>\n        <ng-template [ngIf]=\"action == 'Create' || action == 'Add' \">\n          <ng-template [ngIf]=\"!hiddenFields.includes('subject')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditSubject\">Subject</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditSubject\" [(ngModel)]=\"detail['subject']\" name=\"EditSubject\" #EditSubject=\"ngModel\">\n                <div *ngIf=\"detail['subject']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('subject')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditSubject.valid || EditSubject.pristine || EditSubject.errors.minlength\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('from')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditFrom\">From</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditFrom\" [(ngModel)]=\"detail['from']\" name=\"EditFrom\" #EditFrom=\"ngModel\">\n                <div *ngIf=\"detail['from']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('from')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditFrom.valid || EditFrom.pristine || EditFrom.errors.minlength\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('to')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditTo\">To</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditTo\" [(ngModel)]=\"detail['to']\" name=\"EditTo\" #EditTo=\"ngModel\">\n                <div *ngIf=\"detail['to']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('to')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditTo.valid || EditTo.pristine || EditTo.errors.minlength\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('subject')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditSubject\">Subject</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditSubject\" [(ngModel)]=\"detail['subject']\" name=\"EditSubject\" #EditSubject=\"ngModel\">\n                <div *ngIf=\"detail['subject']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('subject')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditSubject.valid || EditSubject.pristine || EditSubject.errors.minlength\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('processed')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditProcessed\">Processed</label>\n              <div class=\"form-check\" [ngClass]=\"{'ng-valid': true} \">\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditProcessed\" class=\"form-check-input\" id=\"EditProcessedYes\" [value]=\"true\" [(ngModel)]=\"detail['processed']\" #EditProcessed=\"ngModel\">\n                  <label class=\"form-check-label\">Yes</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditProcessed\" class=\"form-check-input\" id=\"EditProcessedNo\" [value]=\"false\" [(ngModel)]=\"detail['processed']\" #EditProcessed=\"ngModel\">\n                  <label class=\"form-check-label\">No</label>\n                </div>\n                <div *ngIf=\"detail['processed'] == true || detail['processed'] == false\" class=\"form-check-inline\" (click)=\"clearValueFromDetail('processed')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditProcessed.valid || EditProcessed.pristine\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('number')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditNumber\">Number</label>\n              <input type=\"number\" class=\"form-control\" id=\"EditNumber\" [(ngModel)]=\"detail['number']\" name=\"EditNumber\" #EditNumber=\"ngModel\">\n              <div [hidden]=\"EditNumber.valid || EditNumber.pristine || EditNumber.errors.libMddsMinNumber\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('sent')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditSent\">Sent</label>\n              <input type=\"number\" class=\"form-control\" id=\"EditSent\" [(ngModel)]=\"detail['sent']\" name=\"EditSent\" #EditSent=\"ngModel\">\n              <div [hidden]=\"EditSent.valid || EditSent.pristine || EditSent.errors.libMddsMinNumber\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('result')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditResult\">Result</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditResult\" [(ngModel)]=\"detail['result']\" name=\"EditResult\" #EditResult=\"ngModel\">\n                <div *ngIf=\"detail['result']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('result')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditResult.valid || EditResult.pristine || EditResult.errors.minlength\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('content')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditContent\">Content</label>\n              <lib-richtext-editor [(ngModel)]=\"detail['content']\" name=\"EditContent\" #EditContent=\"ngModel\">\n              </lib-richtext-editor>\n              <div [hidden]=\"EditContent.valid\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('replacements')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditReplacements\">Replacements</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditReplacements\" [(ngModel)]=\"detail['replacements']\" name=\"EditReplacements\" #EditReplacements=\"ngModel\">\n                <div *ngIf=\"detail['replacements']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('replacements')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditReplacements.valid || EditReplacements.pristine || EditReplacements.errors.minlength\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('defaultReplacement')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditDefaultReplacement\">Default Replacement</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditDefaultReplacement\" [(ngModel)]=\"detail['defaultReplacement']\" name=\"EditDefaultReplacement\" #EditDefaultReplacement=\"ngModel\">\n                <div *ngIf=\"detail['defaultReplacement']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('defaultReplacement')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditDefaultReplacement.valid || EditDefaultReplacement.pristine || EditDefaultReplacement.errors.minlength\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n        </ng-template>\n        <div class=\"action-buttons-center\">\n          <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!editForm.form.valid\">Submit</button>\n          <button *ngIf=\"!options['disableCancel']\" class=\"btn btn-outline-success\" type=\"button\" (click)=\"editCancel()\">Cancel</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  EmailqueueListCustComponent\n} from '../../../emailing-cust/base/emailqueue/emailqueue-list.cust.component';\nimport {\n  ViewType\n} from '../emailqueue.component';\nimport {\n  EmailqueueService\n} from '../emailqueue.service';\n@Component({\n  selector: 'app-emailqueue-list',\n  templateUrl: './emailqueue-list.component.html',\n  styleUrls: ['./emailqueue-list.component.css']\n})\nexport class EmailqueueListComponent extends EmailqueueListCustComponent implements OnInit {\n  public minDate = {\n    year: (new Date()).getFullYear() - 100,\n    month: 1,\n    day: 1\n  };\n  // @Input() options: any; {disableCatetory: false, disablePagination: false, disbleActionButtons: false\n  //                        disableListSearch: false, disableTitle: false, disableRefs: false\n  //                        disableListHead: false, disableTitleRow: false}\n  // @Input()\n  // public inputData:any;\n  // @Input()\n  // public searchObj:any;\n  // @Input()\n  // public queryParams: any;  // {listSortField: 'a', listSortOrder: 'asc' / 'desc', perPage: 6}\n  // @Input()\n  // public categoryBy:string; //field name whose value is used as category\n  constructor(public emailqueueService: EmailqueueService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(emailqueueService, injector, router, route, location);\n    this.view = ViewType.LIST;\n    this.fieldDisplayNames = {\n      'subject': 'Subject',\n      'processed': 'Processed',\n      'number': 'Number',\n      'sent': 'Sent',\n      'createdAt': 'Created at',\n    };\n    this.stringFields.push('subject');\n    this.dateFields = ['createdAt', ];\n    this.numberFields = ['number', 'sent', ];\n    this.listViewFilter = 'list';\n    this.setListSort('createdAt', 'Created at', 'desc');\n    const listCategories = [];\n    this.listCategory1 = listCategories[0] || {};\n    this.listCategory2 = listCategories[1] || {};\n    this.clickItemAction = 'detail';\n    this.itemMultiSelect = true;\n    // initialize detail structure for search\n    let detail = {};\n    this.detail = this.formatDetail(detail);\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    this.adjustListViewForWindowSize();\n    this.clickItemAction = typeof this.options.clickItemAction === 'undefined' ? this.clickItemAction : this.options.clickItemAction;\n    this.itemMultiSelect = typeof this.options.itemMultiSelect === 'boolean' ? this.options.itemMultiSelect : this.itemMultiSelect;\n    if (!this.options) {\n      this.options = {};\n    }\n    if (this.options.disableCatetory) {\n      this.listCategory1 = {}; // no do query based on category for home view;\n      this.listCategory2 = {}; // no do query based on category for home view;\n    }\n    // this is to initialize the detail that will be used for search condition selection\n    let detail = {};\n    if (this.searchObj) {\n      this.searchDetailReady = true; // search provided from \"detail\", not from search bar.\n      detail = this.searchObj;\n    }\n    if (this.queryParams) {\n      this.listSortField = this.queryParams.listSortField;\n      this.listSortOrder = this.queryParams.listSortOrder;\n      if (this.queryParams.perPage) {\n        this.perPage = this.queryParams.perPage\n      }\n    }\n    this.detail = this.formatDetail(detail);\n    this.searchList();\n    // get editHintFields\n    this.searchHintFieldValues();\n  }\n  static getInstance() {\n    //used by others to call some common functions\n    return new EmailqueueListComponent(null, null, null, null, null);\n  }\n}","<div class=\"mt-4 mb-4 d-flex\" *ngIf=\"!options['disableTitleRow']\">\n</div>\n<ul *ngIf=\"listCategory1.listCategoryField\" class=\"nav nav-pills category-nav\">\n  <li *ngFor=\"let ele of categoryDisplays; let idx = index;\" class=\"nav-item\">\n    <a *ngIf=\" listCategory1.showEmptyCategory || (!listCategory1.showEmptyCategory && categoriesCounts[idx] > 0)\" class=\"nav-link\" [ngClass]=\"{'active': idx === selectedCategory }\" [routerLink]=\"['.']\" queryParamsHandling=\"preserve\" (click)=\"categorySelected(idx)\">\n      {{ele}} <span *ngIf=\"listCategory1.showCategoryCounts\">({{categoriesCounts[idx]}})</span>\n    </a>\n  </li>\n</ul>\n<div>\n  <div *ngIf=\"!options['disableListHead']\" class=\"container search\">\n    <div class=\"row\" *ngIf=\"!options['disableListSearch']\">\n      <div class=\"col\">\n        <div class=\"input-group\">\n          <input type=\"search\" class=\"form-control border border-secondary\" id=\"emailqueueTextSearch\" #emailqueueTextSearch [(ngModel)]=\"searchText\" (search)=\"$event.target.blur();searchList();\" placeholder=\"Search for subject\">\n          <div *ngIf=\"searchText\" class=\"input-group-append icon-search-clear\">\n            <span>\n              <i class=\"fas fa-times-circle\" (click)=\"onSearchTextClear()\" title=\"Clear\"></i>\n            </span>\n          </div>\n          <div class=\"input-group-append\">\n            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"searchList()\"><i class=\"fas fa-search\"></i></button>\n          </div>\n        </div>\n        <div class=\"text-center\">\n          <span class=\"pointer\" (click)=\"toggleMoreSearch()\">\n            <span class=\"refine-search-text\">Refine Search &nbsp;</span>\n            <span>\n              <i *ngIf=\"!moreSearchOpened\" class=\"fas fa-plus-circle\" title=\"More\"></i>\n              <i *ngIf=\"moreSearchOpened\" class=\"fas fa-minus-circle\" title=\"Less\"></i>\n            </span>\n          </span>\n        </div>\n        <div class=\"shadow\" *ngIf=\"moreSearchOpened\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <div class=\"d-flex flex-wrap align-items-center\">\n                <div class=\"container two-column-search small\">\n                  <div class=\"row col-gutter align-items-center\">\n                    <div class=\"col-12 col-sm-3\">\n                      <label for=\"emailqueueEditProcessed\"> Processed </label>\n                    </div>\n                    <div class=\"col-11 col-sm-8\">\n                      <div class=\"form-check-inline\">\n                        <input type=\"radio\" name=\"emailqueueEditProcessed\" class=\"form-check-input\" id=\"emailqueueEditProcessedYes\" [value]=\"true\" [(ngModel)]=\"detail['processed']\" #emailqueueEditProcessed=\"ngModel\">\n                        <span class=\"form-check-label\">Yes</span>\n                      </div>\n                      <div class=\"form-check-inline\">\n                        <input type=\"radio\" name=\"emailqueueEditProcessed\" class=\"form-check-input\" id=\"emailqueueEditProcessedNo\" [value]=\"false\" [(ngModel)]=\"detail['processed']\" #emailqueueEditProcessed=\"ngModel\">\n                        <span class=\"form-check-label\">No</span>\n                      </div>\n                    </div>\n                    <div class=\"col-1\">\n                      <div class=\"pointer\" (click)=\"clearValueFromDetail('processed')\" *ngIf=\"checkValueDefinedFromDetail('processed')\"><i class=\"fas fa-times-circle\" title=\"Clear\"></i></div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"container two-column-search small\">\n                  <div class=\"row col-gutter align-items-center\">\n                    <div class=\"col-12 col-sm-3\">\n                      <label for=\"emailqueueEditNumber\"> Number </label>\n                    </div>\n                    <div class=\"col-11 col-sm-8\">\n                      <div class=\"input-group input-group-sm align-items-center\">\n                        <input type=\"number\" class=\"form-control form-control-sm\" id=\"emailqueueEditNumber\" [(ngModel)]=\"detail['__mra_number_from']\" name=\"emailqueueEditNumber\" #emailqueueEditNumber=\"ngModel\">\n                        <span>&nbsp; ~ &nbsp;</span>\n                        <input type=\"number\" class=\"form-control form-control-sm\" id=\"emailqueueEditNumber\" [(ngModel)]=\"detail['__mra_number_to']\" name=\"emailqueueEditNumber\" #emailqueueEditNumber=\"ngModel\">\n                      </div>\n                    </div>\n                    <div class=\"col-1\">\n                      <div class=\"pointer\" (click)=\"clearValueFromDetail('number')\" *ngIf=\"checkValueDefinedFromDetail('number')\"><i class=\"fas fa-times-circle\" title=\"Clear\"></i></div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"container two-column-search small\">\n                  <div class=\"row col-gutter align-items-center\">\n                    <div class=\"col-12 col-sm-3\">\n                      <label for=\"emailqueueEditSent\"> Sent </label>\n                    </div>\n                    <div class=\"col-11 col-sm-8\">\n                      <div class=\"input-group input-group-sm align-items-center\">\n                        <input type=\"number\" class=\"form-control form-control-sm\" id=\"emailqueueEditSent\" [(ngModel)]=\"detail['__mra_sent_from']\" name=\"emailqueueEditSent\" #emailqueueEditSent=\"ngModel\">\n                        <span>&nbsp; ~ &nbsp;</span>\n                        <input type=\"number\" class=\"form-control form-control-sm\" id=\"emailqueueEditSent\" [(ngModel)]=\"detail['__mra_sent_to']\" name=\"emailqueueEditSent\" #emailqueueEditSent=\"ngModel\">\n                      </div>\n                    </div>\n                    <div class=\"col-1\">\n                      <div class=\"pointer\" (click)=\"clearValueFromDetail('sent')\" *ngIf=\"checkValueDefinedFromDetail('sent')\"><i class=\"fas fa-times-circle\" title=\"Clear\"></i></div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"container one-column-search small\">\n                  <div class=\"row col-gutter align-items-center\">\n                    <div class=\"col-12 col-lg-3\">\n                      <label for=\"emailqueueEditCreatedAt\"> Created at </label>\n                    </div>\n                    <div class=\"col-11 col-lg-8\">\n                      <div class=\"row\">\n                        <div class=\"input-group input-group-sm col-12 col-md-6 align-items-center\">\n                          <span class=\"small mx-1\" style=\"width:2rem\">From</span>\n                          <input class=\"form-control form-control-sm\" id=\"emailqueueEditCreatedAtFrom\" placeholder=\"{{dateFormat}}\" [(ngModel)]=\"detail['createdAt']['from']\" name=\"emailqueueEditCreatedAt\" ngbDatepicker [minDate]=\"minDate\" #emailqueueEditCreatedAt=\"ngModel\">\n                          <div class=\"input-group-append\">\n                            <button class=\"btn btn-outline-secondary\" (click)=\"onDateSelectionToggle('createdAt')\" type=\"button\">\n                              <i class=\"fas fa-calendar-alt\"></i>\n                            </button>\n                          </div>\n                        </div>\n                        <div class=\"input-group input-group-sm col-12 col-md-6 align-items-center\">\n                          <span class=\"small mx-1\" style=\"width:2rem\">to</span>\n                          <input class=\"form-control form-control-sm\" id=\"emailqueueEditCreatedAtTo\" placeholder=\"{{dateFormat}}\" [(ngModel)]=\"detail['createdAt']['to']\" name=\"emailqueueEditCreatedAt\" ngbDatepicker [minDate]=\"minDate\" #emailqueueEditCreatedAt=\"ngModel\">\n                          <div class=\"input-group-append\">\n                            <button class=\"btn btn-outline-secondary\" (click)=\"onDateSelectionToggle('createdAt')\" type=\"button\">\n                              <i class=\"fas fa-calendar-alt\"></i>\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"date-selection-pop\" *ngIf=\"detail['createdAt']['pop']\">\n                        <ngb-datepicker #dp [minDate]=\"minDate\" (select)=\"onDateSelection('createdAt', $event)\" [displayMonths]=\"datePickerDisplayMonths\" [dayTemplate]=\"emailqueueEditCreatedAtT\">\n                        </ngb-datepicker>\n                        <ng-template #emailqueueEditCreatedAtT let-emailqueueEditCreatedAtDate=\"date\" let-emailqueueEditCreatedAtFocused=\"focused\">\n                          <span class=\"custom-day\" [class.focused]=\"emailqueueEditCreatedAtFocused\" [class.range]=\"isRange('createdAt', emailqueueEditCreatedAtDate)\" [class.faded]=\"isHovered('createdAt', emailqueueEditCreatedAtDate) || isInside('createdAt', emailqueueEditCreatedAtDate)\" (mouseenter)=\"hoveredDate = emailqueueEditCreatedAtDate\" (mouseleave)=\"hoveredDate = null\">\n                            {{ emailqueueEditCreatedAtDate.day }}\n                          </span>\n                        </ng-template>\n                      </div>\n                    </div>\n                    <div class=\"col-1\">\n                      <div class=\"pointer\" (click)=\"clearValueFromDetail('createdAt')\" *ngIf=\"checkValueDefinedFromDetail('createdAt')\"><i class=\"fas fa-times-circle\" title=\"Clear\"></i></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"action-buttons\">\n                <button type=\"button\" class=\"btn btn-outline-success\" (click)=\"onSearchClear()\">Reset</button>\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"searchList()\">Search</button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div *ngIf=\"!moreSearchOpened\" style=\"text-align: left;\">\n          <span class=\"badge badge-pill badge-info\" *ngFor=\"let value of searchMoreDetail\">\n            <a (click)=\"toggleMoreSearch()\" class=\"pointer\"> {{value[0]}}: {{value[1]}}</a>\n            <i class=\"fas fa-times-circle icon-clear-badge\" (click)=\"clearValueFromDetailAndSearchList(value[2])\" title=\"Clear\"></i>\n          </span>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"!options['disableActionButtions']\">\n      <div class=\"col\">\n        <div class=\"action-buttons\">\n        </div>\n      </div>\n    </div>\n    <hr />\n    <div *ngIf=\"!options['disablePagination']\">\n      <div class=\"row justify-content-end mt-3\">\n        <div *ngIf=\"list.length > 2\" class=\"sort-selection mr-5\">\n          <div class=\"dropdown\" style=\"width: 100%;\">\n            <button class=\"sort-dropdown btn btn-light btn-sm dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> Sort: <span *ngIf=\"listSortField && !viewHiddenFields.includes(listSortField)\">{{listSortFieldDisplay}}\n                <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up\"></i>\n                <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down\"></i>\n              </span>\n            </button>\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('subject', 'Subject', 'asc')\">Subject<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('subject', 'Subject', 'desc')\">Subject<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('processed', 'Processed', 'asc')\">Processed<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('processed', 'Processed', 'desc')\">Processed<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('number', 'Number', 'asc')\">Number<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('number', 'Number', 'desc')\">Number<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('sent', 'Sent', 'asc')\">Sent<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('sent', 'Sent', 'desc')\">Sent<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('createdAt', 'Created at', 'asc')\">Created at<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('createdAt', 'Created at', 'desc')\">Created at<i class=\"fas fa-arrow-down\"></i></a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-between\">\n        <div>\n          <div *ngIf=\"list.length > 0\">\n            <input type=\"radio\" name=\"view-filter\" id=\"list-view\" class=\"view-radio\" (click)=\"setListViewFilter('list')\" [checked]=\"isShowListView('list')\">\n            <label for=\"list-view\"><i class=\"fa fa-th-list\"></i></label>\n            <input type=\"radio\" name=\"view-filter\" id=\"grid-view\" class=\"view-radio\" (click)=\"setListViewFilter('grid')\" [checked]=\"isShowListView('grid')\">\n            <label for=\"grid-view\"><i class=\"fa fa-th\"></i></label>\n            <input type=\"radio\" name=\"view-filter\" id=\"table-view\" class=\"view-radio\" (click)=\"setListViewFilter('table')\" [checked]=\"isShowListView('table')\">\n            <label for=\"table-view\"><i class=\"fa fa-list-alt\"></i></label>\n          </div>\n        </div>\n        <div>\n          <div class=\"total_counts\">\n            <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n            <a class=\"ml-3\" routerLink=\".\" (click)=\"onRefresh()\"><i class=\"fa fa-sync-alt\"></i></a>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n        <div *ngIf=\"totalPages > 1\">\n          <ul class=\"pagination justify-content-center\">\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n                <span aria-hidden=\"true\">&laquo;</span>\n                <span class=\"sr-only\">Previous</span>\n              </a>\n            </li>\n            <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n            </li>\n            <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n                <span class=\"sr-only\">Next</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n          <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-records\" *ngIf=\"list.length === 0\">\n    <span *ngIf=\"loaded\">No records found.</span>\n    <span *ngIf=\"!loaded\">Loading...</span>\n  </div>\n  <div *ngIf=\"list.length > 0\">\n    <div class=\"listview\" *ngIf=\"isShowListView('list')\">\n      <div class=\"list-block\" *ngFor=\"let detail of list;  let i = index; let list_index = index;\">\n        <hr *ngIf=\"i==0\" class=\"list-devider\">\n        <div class=\"list-card text-left\" [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i],\n\t\t\t\t\t\t\t'clickable-card': clickItemAction}\">\n          <div class=\"list-fields\" [ngClass]=\"{pointer: clickItemAction}\" (click)=\"clickOneItem(i)\">\n            <div class=\"list-body-fields\">\n              <h5>\n                <div class=\"mr-1 d-inline-block\">\n                  {{detail['subject']}}\n                </div>\n              </h5>\n              <div>\n                <div *ngIf=\"fieldHasValue(detail['processed'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Processed:</label></div>\n                  <div class=\"ml-3\">{{detail['processed']}}\n                  </div>\n                </div>\n                <div *ngIf=\"fieldHasValue(detail['number'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Number:</label></div>\n                  <div class=\"ml-3\">\n                    {{detail['number']}}\n                  </div>\n                </div>\n                <div *ngIf=\"fieldHasValue(detail['sent'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Sent:</label></div>\n                  <div class=\"ml-3\">\n                    {{detail['sent']}}\n                  </div>\n                </div>\n                <div *ngIf=\"fieldHasValue(detail['createdAt'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Created at:</label></div>\n                  <div class=\"ml-3\"> {{detail['createdAt']? (detail['createdAt']['originalValue'] | date:'medium') : ''}}\n                  </div>\n                </div>\n              </div>\n              <div class=\"d-flex flex-row mt-1\">\n              </div>\n            </div>\n          </div>\n          <div class=\"card-action-icons\">\n            <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n          </div>\n        </div>\n        <hr class=\"list-devider\">\n      </div>\n    </div>\n    <div class=\"gridview\" *ngIf=\"isShowListView('grid')\">\n      <div class=\"grid-block\" *ngFor=\"let detail of list;  let i = index; let list_index = index;\">\n        <div class=\"card text-left h-100\" [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i],\n\t\t\t\t\t\t\t'clickable-card': clickItemAction}\">\n          <div class=\"grid-fields\" [ngClass]=\"{pointer: clickItemAction}\" (click)=\"clickOneItem(i)\">\n            <div class=\"card-header grid-head\">\n              <div>\n                <h5>\n                  <div class=\"mr-1 d-inline-block\">\n                    {{detail['subject']}}\n                  </div>\n                </h5>\n              </div>\n            </div>\n            <div class=\"card-body\">\n              <div *ngIf=\"fieldHasValue(detail['processed'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>Processed:</label></div>\n                <div class=\"ml-3\">{{detail['processed']}} </div>\n              </div>\n              <div *ngIf=\"fieldHasValue(detail['number'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>Number:</label></div>\n                <div class=\"ml-3\">\n                  {{detail['number']}}</div>\n              </div>\n              <div *ngIf=\"fieldHasValue(detail['sent'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>Sent:</label></div>\n                <div class=\"ml-3\">\n                  {{detail['sent']}}</div>\n              </div>\n              <div *ngIf=\"fieldHasValue(detail['createdAt'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>Created at:</label></div>\n                <div class=\"ml-3\"> {{detail['createdAt']? (detail['createdAt']['originalValue'] | date:'medium') : ''}}</div>\n              </div>\n            </div>\n          </div>\n          <div class=\"card-action-icons\">\n            <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n          </div>\n        </div>\n      </div>\n    </div>\n    <table *ngIf=\"isShowListView('table')\" class=\"table table-bordered table-hover\">\n      <thead class=\"thead-light\">\n        <tr>\n          <th scope=\"col\">#</th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('subject', 'Subject')\"> Subject <span *ngIf=\"listSortField === 'subject'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('processed', 'Processed')\"> Processed <span *ngIf=\"listSortField === 'processed'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('number', 'Number')\"> Number <span *ngIf=\"listSortField === 'number'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('sent', 'Sent')\"> Sent <span *ngIf=\"listSortField === 'sent'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('createdAt', 'Created at')\"> Created at <span *ngIf=\"listSortField === 'createdAt'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th scope=\"col\" style=\"width:3.8rem;\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        <ng-template ngFor let-detail [ngForOf]=\"list\" let-i=\"index\">\n          <tr [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i]}\">\n            <td scope=\"row\" (click)=\"clickOneItem(i)\" class=\"pointer read-more mt-3\">\n              {{(page-1)*perPage+i+1}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['subject']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['processed']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['number']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['sent']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['createdAt']? (detail['createdAt']['originalValue'] | date:'medium') : ''}}\n            </td>\n            <td>\n              <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n            </td>\n          </tr>\n        </ng-template>\n      </tbody>\n    </table>\n  </div>\n  <div class=\"container\">\n    <div *ngIf=\"!options['disablePagination']\">\n      <div class=\"row justify-content-end mt-3\">\n      </div>\n      <div class=\"d-flex justify-content-between\">\n        <div>\n        </div>\n        <div>\n          <div class=\"total_counts\">\n            <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n        <div *ngIf=\"totalPages > 1\">\n          <ul class=\"pagination justify-content-center\">\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n                <span aria-hidden=\"true\">&laquo;</span>\n                <span class=\"sr-only\">Previous</span>\n              </a>\n            </li>\n            <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n            </li>\n            <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n                <span class=\"sr-only\">Next</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n          <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import {\n  HttpClient\n} from '@angular/common/http';\nimport {\n  MddsBaseService\n} from '@hicoder/angular-core';\nconst servicePath = '/emailqueue/';\nexport class EmailqueueBaseService extends MddsBaseService {\n  constructor(http: HttpClient, serverRootUrl: string) {\n    const serviceUrl = serverRootUrl + servicePath;\n    super(http, serviceUrl);\n  }\n}","import {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  MddsBaseComponent,\n  ViewType\n} from '@hicoder/angular-core';\nimport {\n  Component,\n  OnInit,\n  Injector,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  EmailqueueService\n} from './emailqueue.service';\nconst itemCamelName = 'email Queue';\nexport {\n  ViewType\n};\n@Component({\n  template: '',\n})\nexport class EmailqueueComponent extends MddsBaseComponent implements OnInit {\n  // *** common input fields\n  @Input()\n  public style: any; // {}\n  @Input()\n  public options: any; // {} uiOptions\n  @Input()\n  public searchObj: any;\n  // *** list component\n  @Input()\n  public inputData: any;\n  @Input()\n  public queryParams: any; // {listSortField: 'a', listSortOrder: 'asc' / 'desc', perPage: 6}\n  @Input()\n  public categoryBy: string; //field name whose value is used as category\n  // list-asso component\n  @Input('asso') public associationField: string;\n  // list select component\n  @Output() outputData: any;\n  // *** edit / create component\n  @Input()\n  public id: string;\n  @Input()\n  public cid: string; // copy id\n  @Input()\n  public initData: any; // some fields has data already. eg: {a: b}. Used for add\n  @Input()\n  public embeddedView: boolean;\n  @Input()\n  public embedMode: string; // parent to tell the action - create\n  @Output()\n  public doneData = new EventEmitter < boolean > ();\n  @Output()\n  public done = new EventEmitter < any > ();\n  // *** detail component\n  // @Input() \n  // public id:string;\n  @Input()\n  public disableActionButtions: boolean;\n  @Output()\n  public eventEmitter: EventEmitter < any > = new EventEmitter();\n  // detail sub component\n  // @Input() inputData;\n  // detail show field component\n  // @Input() id: string;\n  @Input() detailObj: any;\n  @Input() showFieldsStr: string;\n  // detail sel component\n  //@Input() inputData;\n  //@Output() outputData;\n  // detail pop component\n  // @Input() inputData;\n  // @Output() outputData;\n  constructor(public emailqueueService: EmailqueueService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(emailqueueService, injector, router, route, location);\n    this.setItemNames(itemCamelName);\n    this.briefFieldsInfo = [];\n    this.briefFieldsInfo.push(['subject', 'Subject']);\n    this.briefFieldsInfo.push(['processed', 'Processed']);\n    this.briefFieldsInfo.push(['number', 'Number']);\n    this.briefFieldsInfo.push(['sent', 'Sent']);\n    this.briefFieldsInfo.push(['createdAt', 'Created at']);\n    this.schemaName = 'emailqueue';\n    this.dateFormat = 'MM-DD-YYYY';\n    this.timeFormat = 'hh:mm:ss';\n    this.modulePath = 'emailing';\n    this.indexFields = ['subject', ];\n  }\n  ngOnInit() {\n    this.style = this.style || {};\n    this.options = this.options || {};\n  }\n}","import {\n  Injectable,\n  Inject,\n  OnDestroy,\n  SkipSelf\n} from '@angular/core';\nimport {\n  HttpClient\n} from '@angular/common/http';\nimport {\n  EmailqueueBaseService\n} from './emailqueue.base.service';\nimport {\n  Emailing_SERVER_ROOT_URI\n} from '../emailing.tokens';\n@Injectable({\n  providedIn: 'root',\n})\nexport class EmailqueueService extends EmailqueueBaseService implements OnDestroy {\n  constructor(http: HttpClient, @Inject(Emailing_SERVER_ROOT_URI) private emailingServerRootUri: string) {\n    super(http, emailingServerRootUri);\n  }\n  ngOnDestroy() {}\n}","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  EmailsettingsComponent,\n  ViewType\n} from '../emailsettings.component';\nimport {\n  EmailsettingsService\n} from '../emailsettings.service';\n@Component({\n  selector: 'app-emailsettings-detail-field',\n  templateUrl: './emailsettings-detail-field.component.html',\n  styleUrls: ['./emailsettings-detail.component.css']\n})\nexport class EmailsettingsDetailFieldComponent extends EmailsettingsComponent\nimplements OnInit {\n  // @Input() id: string;\n  // @Input() detailObj: any;\n  // @Input() showFieldsStr: string;\n  showFields: string[];\n  constructor(public emailsettingsService: EmailsettingsService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(emailsettingsService, injector, router, route, location);\n    this.view = ViewType.DETAIL;\n    this.fieldDisplayNames = {\n      'settingName': 'Setting Name',\n      'defaultSender': 'Default Sender Email Address',\n    };\n    this.stringFields.push('settingName');\n    this.stringFields.push('defaultSender');\n  }\n  ngOnInit() {\n    if (!this.showFieldsStr) {\n      console.error(\"A field has to be given to show it.\");\n      return;\n    }\n    this.showFields = this.showFieldsStr.match(/\\S+/g);\n    if (this.detailObj) {\n      this.onDetailReturned(this.detailObj, null);\n    } else {\n      if (!this.id) this.id = this.id;\n      if (this.id) this.populateDetail(this.id);\n      else {\n        console.error(\"No id provided to show info\");\n        return;\n      }\n    }\n  }\n}","<div *ngIf=\"detail && showFields.includes('settingName')\">\n  {{detail['settingName']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('defaultSender')\">\n  {{detail['defaultSender']}}\n</div>","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  EmailsettingsDetailCustComponent\n} from '../../../emailing-cust/base/emailsettings/emailsettings-detail.cust.component';\nimport {\n  ViewType\n} from '../emailsettings.component';\nimport {\n  EmailsettingsService\n} from '../emailsettings.service';\n@Component({\n  selector: 'app-emailsettings-detail',\n  templateUrl: './emailsettings-detail.component.html',\n  styleUrls: ['./emailsettings-detail.component.css']\n})\nexport class EmailsettingsDetailComponent extends EmailsettingsDetailCustComponent implements OnInit, AfterViewInit {\n  // @Input() \n  // public id:string;\n  // @Input()\n  // public searchObj:any;\n  // @Input()\n  // public disableActionButtions:boolean;\n  // @Output()\n  // public eventEmitter: EventEmitter<any> = new EventEmitter();\n  constructor(public emailsettingsService: EmailsettingsService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(emailsettingsService, injector, router, route, location);\n    this.view = ViewType.DETAIL;\n    this.fieldDisplayNames = {\n      'settingName': 'Setting Name',\n      'defaultSender': 'Default Sender Email Address',\n    };\n    this.stringFields.push('settingName');\n    this.stringFields.push('defaultSender');\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    if (!this.id) this.id = this.route.snapshot.paramMap.get('id');\n    if (this.id) {\n      this.populateDetail(this.id);\n    } else if (this.searchObj) {\n      // search item based on the unique value\n      this.populateDetailByFields(this.searchObj);\n    } else {\n      console.error(\"Routing error for detail view... no id...\");\n      return;\n    }\n  }\n  ngAfterViewInit() {}\n}","<div class=\"detail\" *ngIf=\"detail\">\n  <div *ngIf=\"!options['disableActionButtions']\">\n    <div *ngIf=\"!disableActionButtions && !options['disableActionButtions']\" class=\"action-buttons\">\n      <a *ngIf=\"!options['disableActionList']\" routerLink=\"../../list\" class=\"action-go-list\"><i class=\"fas fa-list\" title=\"List\"></i><!--  span>&nbsp;&nbsp;{{ItemCamelName}} List</span--></a>\n      <a *ngIf=\"!options['disableActionEdit']\" [routerLink]=\"['../../edit', detail['_id'] ]\" [skipLocationChange]=\"false\" class=\"btn btn-outline-primary\">Edit</a>\n    </div>\n  </div>\n  <div class=\"card text-left transparent-border \">\n    <div class=\"grid-fields\">\n      <div class=\"card-header grid-head\">\n        <div class=\"ml-1\">\n          <h5>\n            <div class=\"mr-1 d-inline-block\">\n              {{detail['settingName']}}\n            </div>\n          </h5>\n        </div>\n      </div>\n      <div class=\"card-body\">\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Default Sender Email Address:</label></div>\n            <div class=\"ml-3\">\n              {{detail['defaultSender']}}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"!options['disablePipeline']\">\n  </div>\n  <div *ngIf=\"!options['disableRefLink']\">\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  Directive,\n  EventEmitter\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\ndeclare const $: any;\nimport {\n  EmailsettingsEditCustComponent\n} from '../../../emailing-cust/base/emailsettings/emailsettings-edit.cust.component';\nimport {\n  ViewType\n} from '../emailsettings.component';\nimport {\n  EmailsettingsService\n} from '../emailsettings.service';\n@Component({\n  selector: 'app-emailsettings-edit',\n  templateUrl: './emailsettings-edit.component.html',\n  styleUrls: ['./emailsettings-edit.component.css']\n})\nexport class EmailsettingsEditComponent extends EmailsettingsEditCustComponent implements OnInit, AfterViewInit {\n  // @Input() \n  // public id: string;\n  // @Input()\n  // public cid: string; // copy id\n  // @Input()\n  // public initData: any; // some fields has data already. eg: {a: b}. Used for add\n  // @Output()\n  // public doneData = new EventEmitter<boolean>();\n  // @Output()\n  // public done = new EventEmitter<any>();\n  // @Input()\n  // public embeddedView: boolean;\n  // @Input()\n  // public embedMode: string; // parent to tell the action - create\n  public action: string;\n  public minDate = {\n    year: (new Date()).getFullYear() - 100,\n    month: 1,\n    day: 1\n  };\n  constructor(public emailsettingsService: EmailsettingsService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(emailsettingsService, injector, router, route, location);\n    this.view = ViewType.EDIT;\n    this.fieldDisplayNames = {\n      'defaultSender': 'Default Sender Email Address',\n    };\n    this.stringFields.push('defaultSender');\n    const detail = {};\n    this.detail = this.formatDetail(detail);\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.embedMode == 'create') { // parent ask to create\n      this.action = 'Create';\n      this.getDetailData();\n    } else {\n      if (!this.id) this.id = this.route.snapshot.paramMap.get('id');\n      if (this.id) {\n        this.action = 'Edit';\n        this.populateDetailForAction(this.id, 'edit'); //populate with action as 'edit'\n      } else {\n        this.action = 'Create';\n        if (!this.cid) this.cid = this.route.snapshot.queryParamMap.get('cid');\n        if (this.cid) {\n          this.populateDetailFromCopy(this.cid);\n        } else {\n          this.getDetailData();\n        }\n      }\n    }\n    // get editHintFields\n    this.searchHintFieldValues();\n  }\n  ngAfterViewInit() {\n    // Initialize all tooltips\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n  getDetailData() {\n    if (this.initData) {\n      this.action = 'Add';\n      let detail = {};\n      for (let prop of Object.keys(this.initData)) {\n        detail[prop] = this.initData[prop];\n        this.hiddenFields.push(prop);\n      }\n      this.detail = this.formatDetail(detail);\n    } else {\n      let detail = {};\n      this.detail = this.formatDetail(detail);\n    }\n  }\n}","<div class=\"edit\" *ngIf=\"detail\">\n  <div class=\"card\" style=\"text-align: left;\">\n    <div class=\"card-body\">\n      <h4 class=\"card-title\" *ngIf=\"!embeddedView && !options['title']\">{{action}} Email Settings</h4>\n      <h4 class=\"card-title\" *ngIf=\"options['title']\" [ngStyle]=\"style['card-title']\">\n        {{options['title']}}\n      </h4>\n      <p *ngIf=\"options['subtitle']\" [ngStyle]=\"style['card-subtitle']\">\n        {{options['subtitle']}}\n      </p>\n      <form (ngSubmit)=\"onSubmit()\" #editForm=\"ngForm\">\n        <ng-template [ngIf]=\"action == 'Edit'\">\n          <ng-template [ngIf]=\"!hiddenFields.includes('defaultSender')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditDefaultSender\">Default Sender Email Address</label><span><i data-toggle=\"tooltip\" title=\"Default sender email address. Must be validated by email service for it to take effect.\" class=\"far fa-question-circle\"></i></span>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditDefaultSender\" required [(ngModel)]=\"detail['defaultSender']\" name=\"EditDefaultSender\" #EditDefaultSender=\"ngModel\">\n                <div *ngIf=\"detail['defaultSender']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('defaultSender')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditDefaultSender.valid || EditDefaultSender.pristine || EditDefaultSender.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditDefaultSender.errors && EditDefaultSender.errors.required\"> DefaultSender is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n        </ng-template>\n        <ng-template [ngIf]=\"action == 'Create' || action == 'Add' \">\n          <ng-template [ngIf]=\"!hiddenFields.includes('settingName')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditSettingName\">Setting Name</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditSettingName\" required [(ngModel)]=\"detail['settingName']\" name=\"EditSettingName\" #EditSettingName=\"ngModel\">\n                <div *ngIf=\"detail['settingName']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('settingName')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditSettingName.valid || EditSettingName.pristine || EditSettingName.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditSettingName.errors && EditSettingName.errors.required\"> SettingName is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('defaultSender')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditDefaultSender\">Default Sender Email Address</label>\n              <span><i data-toggle=\"tooltip\" title=\"Default sender email address. Must be validated by email service for it to take effect.\" class=\"far fa-question-circle\"></i></span>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditDefaultSender\" required [(ngModel)]=\"detail['defaultSender']\" name=\"EditDefaultSender\" #EditDefaultSender=\"ngModel\">\n                <div *ngIf=\"detail['defaultSender']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('defaultSender')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditDefaultSender.valid || EditDefaultSender.pristine || EditDefaultSender.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditDefaultSender.errors && EditDefaultSender.errors.required\"> DefaultSender is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n        </ng-template>\n        <div class=\"action-buttons-center\">\n          <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!editForm.form.valid\">Submit</button>\n          <button *ngIf=\"!options['disableCancel']\" class=\"btn btn-outline-success\" type=\"button\" (click)=\"editCancel()\">Cancel</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  EmailsettingsListCustComponent\n} from '../../../emailing-cust/base/emailsettings/emailsettings-list.cust.component';\nimport {\n  ViewType\n} from '../emailsettings.component';\nimport {\n  EmailsettingsService\n} from '../emailsettings.service';\n@Component({\n  selector: 'app-emailsettings-list',\n  templateUrl: './emailsettings-list.component.html',\n  styleUrls: ['./emailsettings-list.component.css']\n})\nexport class EmailsettingsListComponent extends EmailsettingsListCustComponent implements OnInit {\n  // @Input() options: any; {disableCatetory: false, disablePagination: false, disbleActionButtons: false\n  //                        disableListSearch: false, disableTitle: false, disableRefs: false\n  //                        disableListHead: false, disableTitleRow: false}\n  // @Input()\n  // public inputData:any;\n  // @Input()\n  // public searchObj:any;\n  // @Input()\n  // public queryParams: any;  // {listSortField: 'a', listSortOrder: 'asc' / 'desc', perPage: 6}\n  // @Input()\n  // public categoryBy:string; //field name whose value is used as category\n  constructor(public emailsettingsService: EmailsettingsService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(emailsettingsService, injector, router, route, location);\n    this.view = ViewType.LIST;\n    this.fieldDisplayNames = {\n      'settingName': 'Setting Name',\n      'defaultSender': 'Default Sender Email Address',\n    };\n    this.stringFields.push('settingName');\n    this.stringFields.push('defaultSender');\n    this.listViewFilter = 'list';\n    const listCategories = [];\n    this.listCategory1 = listCategories[0] || {};\n    this.listCategory2 = listCategories[1] || {};\n    this.clickItemAction = 'detail';\n    this.itemMultiSelect = true;\n    // initialize detail structure for search\n    let detail = {};\n    this.detail = this.formatDetail(detail);\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    this.adjustListViewForWindowSize();\n    this.clickItemAction = typeof this.options.clickItemAction === 'undefined' ? this.clickItemAction : this.options.clickItemAction;\n    this.itemMultiSelect = typeof this.options.itemMultiSelect === 'boolean' ? this.options.itemMultiSelect : this.itemMultiSelect;\n    if (!this.options) {\n      this.options = {};\n    }\n    if (this.options.disableCatetory) {\n      this.listCategory1 = {}; // no do query based on category for home view;\n      this.listCategory2 = {}; // no do query based on category for home view;\n    }\n    // this is to initialize the detail that will be used for search condition selection\n    let detail = {};\n    if (this.searchObj) {\n      this.searchDetailReady = true; // search provided from \"detail\", not from search bar.\n      detail = this.searchObj;\n    }\n    if (this.queryParams) {\n      this.listSortField = this.queryParams.listSortField;\n      this.listSortOrder = this.queryParams.listSortOrder;\n      if (this.queryParams.perPage) {\n        this.perPage = this.queryParams.perPage\n      }\n    }\n    this.detail = this.formatDetail(detail);\n    this.searchList();\n    // get editHintFields\n    this.searchHintFieldValues();\n  }\n  static getInstance() {\n    //used by others to call some common functions\n    return new EmailsettingsListComponent(null, null, null, null, null);\n  }\n}","<div class=\"mt-4 mb-4 d-flex\" *ngIf=\"!options['disableTitleRow']\">\n</div>\n<ul *ngIf=\"listCategory1.listCategoryField\" class=\"nav nav-pills category-nav\">\n  <li *ngFor=\"let ele of categoryDisplays; let idx = index;\" class=\"nav-item\">\n    <a *ngIf=\" listCategory1.showEmptyCategory || (!listCategory1.showEmptyCategory && categoriesCounts[idx] > 0)\" class=\"nav-link\" [ngClass]=\"{'active': idx === selectedCategory }\" [routerLink]=\"['.']\" queryParamsHandling=\"preserve\" (click)=\"categorySelected(idx)\">\n      {{ele}} <span *ngIf=\"listCategory1.showCategoryCounts\">({{categoriesCounts[idx]}})</span>\n    </a>\n  </li>\n</ul>\n<div>\n  <div *ngIf=\"!options['disableListHead']\" class=\"container search\">\n    <div class=\"row\" *ngIf=\"!options['disableListSearch']\">\n      <div class=\"col\">\n        <div class=\"input-group\">\n          <input type=\"search\" class=\"form-control border border-secondary\" id=\"emailsettingsTextSearch\" #emailsettingsTextSearch [(ngModel)]=\"searchText\" (search)=\"$event.target.blur();searchList();\" placeholder=\"Search for setting name, default sender email address\">\n          <div *ngIf=\"searchText\" class=\"input-group-append icon-search-clear\">\n            <span>\n              <i class=\"fas fa-times-circle\" (click)=\"onSearchTextClear()\" title=\"Clear\"></i>\n            </span>\n          </div>\n          <div class=\"input-group-append\">\n            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"searchList()\"><i class=\"fas fa-search\"></i></button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"!options['disableActionButtions']\">\n      <div class=\"col\">\n        <div class=\"action-buttons\">\n        </div>\n      </div>\n    </div>\n    <hr />\n    <div *ngIf=\"!options['disablePagination']\">\n      <div class=\"row justify-content-end mt-3\">\n        <div *ngIf=\"list.length > 2\" class=\"sort-selection mr-5\">\n          <div class=\"dropdown\" style=\"width: 100%;\">\n            <button class=\"sort-dropdown btn btn-light btn-sm dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> Sort: <span *ngIf=\"listSortField && !viewHiddenFields.includes(listSortField)\">{{listSortFieldDisplay}}\n                <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up\"></i>\n                <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down\"></i>\n              </span>\n            </button>\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('settingName', 'Setting Name', 'asc')\">Setting Name<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('settingName', 'Setting Name', 'desc')\">Setting Name<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('defaultSender', 'Default Sender Email Address', 'asc')\">Default Sender Email Address<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('defaultSender', 'Default Sender Email Address', 'desc')\">Default Sender Email Address<i class=\"fas fa-arrow-down\"></i></a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-between\">\n        <div>\n          <div *ngIf=\"list.length > 0\">\n            <input type=\"radio\" name=\"view-filter\" id=\"list-view\" class=\"view-radio\" (click)=\"setListViewFilter('list')\" [checked]=\"isShowListView('list')\">\n            <label for=\"list-view\"><i class=\"fa fa-th-list\"></i></label>\n            <input type=\"radio\" name=\"view-filter\" id=\"grid-view\" class=\"view-radio\" (click)=\"setListViewFilter('grid')\" [checked]=\"isShowListView('grid')\">\n            <label for=\"grid-view\"><i class=\"fa fa-th\"></i></label>\n            <input type=\"radio\" name=\"view-filter\" id=\"table-view\" class=\"view-radio\" (click)=\"setListViewFilter('table')\" [checked]=\"isShowListView('table')\">\n            <label for=\"table-view\"><i class=\"fa fa-list-alt\"></i></label>\n          </div>\n        </div>\n        <div>\n          <div class=\"total_counts\">\n            <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n            <a class=\"ml-3\" routerLink=\".\" (click)=\"onRefresh()\"><i class=\"fa fa-sync-alt\"></i></a>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n        <div *ngIf=\"totalPages > 1\">\n          <ul class=\"pagination justify-content-center\">\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n                <span aria-hidden=\"true\">&laquo;</span>\n                <span class=\"sr-only\">Previous</span>\n              </a>\n            </li>\n            <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n            </li>\n            <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n                <span class=\"sr-only\">Next</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n          <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-records\" *ngIf=\"list.length === 0\">\n    <span *ngIf=\"loaded\">No records found.</span>\n    <span *ngIf=\"!loaded\">Loading...</span>\n  </div>\n  <div *ngIf=\"list.length > 0\">\n    <div class=\"listview\" *ngIf=\"isShowListView('list')\">\n      <div class=\"list-block\" *ngFor=\"let detail of list;  let i = index; let list_index = index;\">\n        <hr *ngIf=\"i==0\" class=\"list-devider\">\n        <div class=\"list-card text-left\" [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i],\n\t\t\t\t\t\t\t'clickable-card': clickItemAction}\">\n          <div class=\"list-fields\" [ngClass]=\"{pointer: clickItemAction}\" (click)=\"clickOneItem(i)\">\n            <div class=\"list-body-fields\">\n              <h5>\n                <div class=\"mr-1 d-inline-block\">\n                  {{detail['settingName']}}\n                </div>\n              </h5>\n              <div>\n                <div *ngIf=\"fieldHasValue(detail['defaultSender'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Default Sender Email Address:</label></div>\n                  <div class=\"ml-3\">\n                    {{detail['defaultSender']}}\n                  </div>\n                </div>\n              </div>\n              <div class=\"d-flex flex-row mt-1\">\n              </div>\n            </div>\n          </div>\n          <div class=\"card-action-icons\">\n            <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n          </div>\n        </div>\n        <hr class=\"list-devider\">\n      </div>\n    </div>\n    <div class=\"gridview\" *ngIf=\"isShowListView('grid')\">\n      <div class=\"grid-block\" *ngFor=\"let detail of list;  let i = index; let list_index = index;\">\n        <div class=\"card text-left h-100\" [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i],\n\t\t\t\t\t\t\t'clickable-card': clickItemAction}\">\n          <div class=\"grid-fields\" [ngClass]=\"{pointer: clickItemAction}\" (click)=\"clickOneItem(i)\">\n            <div class=\"card-header grid-head\">\n              <div>\n                <h5>\n                  <div class=\"mr-1 d-inline-block\">\n                    {{detail['settingName']}}\n                  </div>\n                </h5>\n              </div>\n            </div>\n            <div class=\"card-body\">\n              <div *ngIf=\"fieldHasValue(detail['defaultSender'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>Default Sender Email Address:</label></div>\n                <div class=\"ml-3\">\n                  {{detail['defaultSender']}}</div>\n              </div>\n            </div>\n          </div>\n          <div class=\"card-action-icons\">\n            <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n          </div>\n        </div>\n      </div>\n    </div>\n    <table *ngIf=\"isShowListView('table')\" class=\"table table-bordered table-hover\">\n      <thead class=\"thead-light\">\n        <tr>\n          <th scope=\"col\">#</th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('settingName', 'Setting Name')\"> Setting Name <span *ngIf=\"listSortField === 'settingName'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('defaultSender', 'Default Sender Email Address')\"> Default Sender Email Address <span *ngIf=\"listSortField === 'defaultSender'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th scope=\"col\" style=\"width:3.8rem;\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        <ng-template ngFor let-detail [ngForOf]=\"list\" let-i=\"index\">\n          <tr [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i]}\">\n            <td scope=\"row\" (click)=\"clickOneItem(i)\" class=\"pointer read-more mt-3\">\n              {{(page-1)*perPage+i+1}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['settingName']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['defaultSender']}}\n            </td>\n            <td>\n              <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n            </td>\n          </tr>\n        </ng-template>\n      </tbody>\n    </table>\n  </div>\n  <div class=\"container\">\n    <div *ngIf=\"!options['disablePagination']\">\n      <div class=\"row justify-content-end mt-3\">\n      </div>\n      <div class=\"d-flex justify-content-between\">\n        <div>\n        </div>\n        <div>\n          <div class=\"total_counts\">\n            <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n        <div *ngIf=\"totalPages > 1\">\n          <ul class=\"pagination justify-content-center\">\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n                <span aria-hidden=\"true\">&laquo;</span>\n                <span class=\"sr-only\">Previous</span>\n              </a>\n            </li>\n            <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n            </li>\n            <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n                <span class=\"sr-only\">Next</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n          <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import {\n  HttpClient\n} from '@angular/common/http';\nimport {\n  MddsBaseService\n} from '@hicoder/angular-core';\nconst servicePath = '/emailsettings/';\nexport class EmailsettingsBaseService extends MddsBaseService {\n  constructor(http: HttpClient, serverRootUrl: string) {\n    const serviceUrl = serverRootUrl + servicePath;\n    super(http, serviceUrl);\n  }\n}","import {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  MddsBaseComponent,\n  ViewType\n} from '@hicoder/angular-core';\nimport {\n  Component,\n  OnInit,\n  Injector,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  EmailsettingsService\n} from './emailsettings.service';\nconst itemCamelName = 'email Settings';\nexport {\n  ViewType\n};\n@Component({\n  template: '',\n})\nexport class EmailsettingsComponent extends MddsBaseComponent implements OnInit {\n  // *** common input fields\n  @Input()\n  public style: any; // {}\n  @Input()\n  public options: any; // {} uiOptions\n  @Input()\n  public searchObj: any;\n  // *** list component\n  @Input()\n  public inputData: any;\n  @Input()\n  public queryParams: any; // {listSortField: 'a', listSortOrder: 'asc' / 'desc', perPage: 6}\n  @Input()\n  public categoryBy: string; //field name whose value is used as category\n  // list-asso component\n  @Input('asso') public associationField: string;\n  // list select component\n  @Output() outputData: any;\n  // *** edit / create component\n  @Input()\n  public id: string;\n  @Input()\n  public cid: string; // copy id\n  @Input()\n  public initData: any; // some fields has data already. eg: {a: b}. Used for add\n  @Input()\n  public embeddedView: boolean;\n  @Input()\n  public embedMode: string; // parent to tell the action - create\n  @Output()\n  public doneData = new EventEmitter < boolean > ();\n  @Output()\n  public done = new EventEmitter < any > ();\n  // *** detail component\n  // @Input() \n  // public id:string;\n  @Input()\n  public disableActionButtions: boolean;\n  @Output()\n  public eventEmitter: EventEmitter < any > = new EventEmitter();\n  // detail sub component\n  // @Input() inputData;\n  // detail show field component\n  // @Input() id: string;\n  @Input() detailObj: any;\n  @Input() showFieldsStr: string;\n  // detail sel component\n  //@Input() inputData;\n  //@Output() outputData;\n  // detail pop component\n  // @Input() inputData;\n  // @Output() outputData;\n  constructor(public emailsettingsService: EmailsettingsService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(emailsettingsService, injector, router, route, location);\n    this.setItemNames(itemCamelName);\n    this.briefFieldsInfo = [];\n    this.briefFieldsInfo.push(['settingName', 'Setting Name']);\n    this.briefFieldsInfo.push(['defaultSender', 'Default Sender Email Address']);\n    this.requiredFields = ['defaultSender', 'settingName', ];\n    this.schemaName = 'emailsettings';\n    this.modulePath = 'emailing';\n    this.indexFields = ['settingName', ];\n  }\n  ngOnInit() {\n    this.style = this.style || {};\n    this.options = this.options || {};\n  }\n}","import {\n  Injectable,\n  Inject,\n  OnDestroy,\n  SkipSelf\n} from '@angular/core';\nimport {\n  HttpClient\n} from '@angular/common/http';\nimport {\n  EmailsettingsBaseService\n} from './emailsettings.base.service';\nimport {\n  Emailing_SERVER_ROOT_URI\n} from '../emailing.tokens';\n@Injectable({\n  providedIn: 'root',\n})\nexport class EmailsettingsService extends EmailsettingsBaseService implements OnDestroy {\n  constructor(http: HttpClient, @Inject(Emailing_SERVER_ROOT_URI) private emailingServerRootUri: string) {\n    super(http, emailingServerRootUri);\n  }\n  ngOnDestroy() {}\n}","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  EmailtemplateComponent,\n  ViewType\n} from '../emailtemplate.component';\nimport {\n  EmailtemplateService\n} from '../emailtemplate.service';\n@Component({\n  selector: 'app-emailtemplate-detail-field',\n  templateUrl: './emailtemplate-detail-field.component.html',\n  styleUrls: ['./emailtemplate-detail.component.css']\n})\nexport class EmailtemplateDetailFieldComponent extends EmailtemplateComponent\nimplements OnInit {\n  // @Input() id: string;\n  // @Input() detailObj: any;\n  // @Input() showFieldsStr: string;\n  showFields: string[];\n  constructor(public emailtemplateService: EmailtemplateService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(emailtemplateService, injector, router, route, location);\n    this.view = ViewType.DETAIL;\n    this.fieldDisplayNames = {\n      'templateName': 'Template Name',\n      'fromEmail': 'From Email',\n      'subject': 'Subject',\n      'content': 'Content',\n      'tag': 'Tag',\n    };\n    this.stringFields.push('templateName');\n    this.stringFields.push('fromEmail');\n    this.stringFields.push('subject');\n    this.stringFields.push('content');\n    this.stringFields.push('tag');\n  }\n  ngOnInit() {\n    if (!this.showFieldsStr) {\n      console.error(\"A field has to be given to show it.\");\n      return;\n    }\n    this.showFields = this.showFieldsStr.match(/\\S+/g);\n    if (this.detailObj) {\n      this.onDetailReturned(this.detailObj, null);\n    } else {\n      if (!this.id) this.id = this.id;\n      if (this.id) this.populateDetail(this.id);\n      else {\n        console.error(\"No id provided to show info\");\n        return;\n      }\n    }\n  }\n}","<div *ngIf=\"detail && showFields.includes('templateName')\">\n  {{detail['templateName']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('fromEmail')\">\n  {{detail['fromEmail']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('subject')\">\n  {{detail['subject']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('content')\">\n  <div libMddsRichtextShow=\"emailtemplateDetailContent\" [content]=\"detail['content']\"></div>\n</div>\n<div *ngIf=\"detail && showFields.includes('tag')\">\n  {{detail['tag']}}\n</div>","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  EmailtemplateDetailCustComponent\n} from '../../../emailing-cust/base/emailtemplate/emailtemplate-detail.cust.component';\nimport {\n  ViewType\n} from '../emailtemplate.component';\nimport {\n  EmailtemplateService\n} from '../emailtemplate.service';\n@Component({\n  selector: 'app-emailtemplate-detail',\n  templateUrl: './emailtemplate-detail.component.html',\n  styleUrls: ['./emailtemplate-detail.component.css']\n})\nexport class EmailtemplateDetailComponent extends EmailtemplateDetailCustComponent implements OnInit, AfterViewInit {\n  // @Input() \n  // public id:string;\n  // @Input()\n  // public searchObj:any;\n  // @Input()\n  // public disableActionButtions:boolean;\n  // @Output()\n  // public eventEmitter: EventEmitter<any> = new EventEmitter();\n  constructor(public emailtemplateService: EmailtemplateService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(emailtemplateService, injector, router, route, location);\n    this.view = ViewType.DETAIL;\n    this.fieldDisplayNames = {\n      'templateName': 'Template Name',\n      'fromEmail': 'From Email',\n      'subject': 'Subject',\n      'content': 'Content',\n      'tag': 'Tag',\n    };\n    this.stringFields.push('templateName');\n    this.stringFields.push('fromEmail');\n    this.stringFields.push('subject');\n    this.stringFields.push('content');\n    this.stringFields.push('tag');\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    if (!this.id) this.id = this.route.snapshot.paramMap.get('id');\n    if (this.id) {\n      this.populateDetail(this.id);\n    } else if (this.searchObj) {\n      // search item based on the unique value\n      this.populateDetailByFields(this.searchObj);\n    } else {\n      console.error(\"Routing error for detail view... no id...\");\n      return;\n    }\n  }\n  ngAfterViewInit() {}\n}","<div class=\"detail\" *ngIf=\"detail\">\n  <div *ngIf=\"!options['disableActionButtions']\">\n    <div *ngIf=\"!disableActionButtions && !options['disableActionButtions']\" class=\"action-buttons\">\n      <a *ngIf=\"!options['disableActionList']\" routerLink=\"../../list\" class=\"action-go-list\"><i class=\"fas fa-list\" title=\"List\"></i><!--  span>&nbsp;&nbsp;{{ItemCamelName}} List</span--></a>\n      <a *ngIf=\"!options['disableActionEdit']\" [routerLink]=\"['../../edit', detail['_id'] ]\" [skipLocationChange]=\"false\" class=\"btn btn-outline-primary\">Edit</a>\n      <a *ngIf=\"!options['disableActionNew']\" [routerLink]=\"['../../new']\" [queryParams]=\"{cid: detail['_id']}\" [skipLocationChange]=\"false\" class=\"btn btn-outline-primary\">New</a>\n      <a *ngIf=\"!options['disableActionDelete']\" routerLink=\".\" class=\"btn btn-outline-primary\" (click)=\"onDelete(detail['_id'], null)\">Delete</a>\n      <a *ngIf=\"!options['disableActionArchive']\" routerLink=\".\" class=\"btn btn-outline-primary\" (click)=\"onArchive(detail['_id'], null, detail['archived'])\">\n        <ng-template [ngIf]=\"!detail['archived']\">Archive</ng-template>\n        <ng-template [ngIf]=\"detail['archived']\">Unarchive</ng-template>\n      </a>\n    </div>\n  </div>\n  <div class=\"card text-left transparent-border \">\n    <div class=\"grid-fields\">\n      <div class=\"card-header grid-head\">\n        <div class=\"ml-1\">\n          <h5>\n            <div class=\"mr-1 d-inline-block\">\n              {{detail['templateName']}}\n            </div>\n          </h5>\n        </div>\n      </div>\n      <div class=\"card-body\">\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>From Email:</label></div>\n            <div class=\"ml-3\">\n              {{detail['fromEmail']}}</div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Subject:</label></div>\n            <div class=\"ml-3\">\n              {{detail['subject']}}</div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Content:</label></div>\n            <div class=\"ml-3\">\n              <div libMddsRichtextShow=\"emailtemplateDetailContent\" [content]=\"detail['content']\"></div>\n            </div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Tag:</label></div>\n            <div class=\"ml-3\">\n              {{detail['tag']}}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"!options['disablePipeline']\">\n  </div>\n  <div *ngIf=\"!options['disableRefLink']\">\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  Directive,\n  EventEmitter\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\ndeclare const $: any;\nimport {\n  EmailtemplateEditCustComponent\n} from '../../../emailing-cust/base/emailtemplate/emailtemplate-edit.cust.component';\nimport {\n  ViewType\n} from '../emailtemplate.component';\nimport {\n  EmailtemplateService\n} from '../emailtemplate.service';\n@Component({\n  selector: 'app-emailtemplate-edit',\n  templateUrl: './emailtemplate-edit.component.html',\n  styleUrls: ['./emailtemplate-edit.component.css']\n})\nexport class EmailtemplateEditComponent extends EmailtemplateEditCustComponent implements OnInit, AfterViewInit {\n  // @Input() \n  // public id: string;\n  // @Input()\n  // public cid: string; // copy id\n  // @Input()\n  // public initData: any; // some fields has data already. eg: {a: b}. Used for add\n  // @Output()\n  // public doneData = new EventEmitter<boolean>();\n  // @Output()\n  // public done = new EventEmitter<any>();\n  // @Input()\n  // public embeddedView: boolean;\n  // @Input()\n  // public embedMode: string; // parent to tell the action - create\n  public action: string;\n  public minDate = {\n    year: (new Date()).getFullYear() - 100,\n    month: 1,\n    day: 1\n  };\n  constructor(public emailtemplateService: EmailtemplateService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(emailtemplateService, injector, router, route, location);\n    this.view = ViewType.EDIT;\n    this.fieldDisplayNames = {\n      'templateName': 'Template Name',\n      'fromEmail': 'From Email',\n      'subject': 'Subject',\n      'content': 'Content',\n      'tag': 'Tag',\n    };\n    this.stringFields.push('templateName');\n    this.stringFields.push('fromEmail');\n    this.stringFields.push('subject');\n    this.stringFields.push('content');\n    this.stringFields.push('tag');\n    const detail = {};\n    this.detail = this.formatDetail(detail);\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.embedMode == 'create') { // parent ask to create\n      this.action = 'Create';\n      this.getDetailData();\n    } else {\n      if (!this.id) this.id = this.route.snapshot.paramMap.get('id');\n      if (this.id) {\n        this.action = 'Edit';\n        this.populateDetailForAction(this.id, 'edit'); //populate with action as 'edit'\n      } else {\n        this.action = 'Create';\n        if (!this.cid) this.cid = this.route.snapshot.queryParamMap.get('cid');\n        if (this.cid) {\n          this.populateDetailFromCopy(this.cid);\n        } else {\n          this.getDetailData();\n        }\n      }\n    }\n    // get editHintFields\n    this.searchHintFieldValues();\n  }\n  ngAfterViewInit() {\n    // Initialize all tooltips\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n  getDetailData() {\n    if (this.initData) {\n      this.action = 'Add';\n      let detail = {};\n      for (let prop of Object.keys(this.initData)) {\n        detail[prop] = this.initData[prop];\n        this.hiddenFields.push(prop);\n      }\n      this.detail = this.formatDetail(detail);\n    } else {\n      let detail = {};\n      this.detail = this.formatDetail(detail);\n    }\n  }\n}","<div class=\"edit\" *ngIf=\"detail\">\n  <div class=\"card\" style=\"text-align: left;\">\n    <div class=\"card-body\">\n      <h4 class=\"card-title\" *ngIf=\"!embeddedView && !options['title']\">{{action}} Email Template</h4>\n      <h4 class=\"card-title\" *ngIf=\"options['title']\" [ngStyle]=\"style['card-title']\">\n        {{options['title']}}\n      </h4>\n      <p *ngIf=\"options['subtitle']\" [ngStyle]=\"style['card-subtitle']\">\n        {{options['subtitle']}}\n      </p>\n      <form (ngSubmit)=\"onSubmit()\" #editForm=\"ngForm\">\n        <ng-template [ngIf]=\"action == 'Edit'\">\n          <ng-template [ngIf]=\"!hiddenFields.includes('templateName')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditTemplateName\">Template Name</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditTemplateName\" required [(ngModel)]=\"detail['templateName']\" name=\"EditTemplateName\" #EditTemplateName=\"ngModel\">\n                <div *ngIf=\"detail['templateName']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('templateName')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditTemplateName.valid || EditTemplateName.pristine || EditTemplateName.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditTemplateName.errors && EditTemplateName.errors.required\"> TemplateName is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('fromEmail')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditFromEmail\">From Email</label><span><i data-toggle=\"tooltip\" title=\"Leave it blank if default sender email address in email settings is used\" class=\"far fa-question-circle\"></i></span>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditFromEmail\" [(ngModel)]=\"detail['fromEmail']\" name=\"EditFromEmail\" #EditFromEmail=\"ngModel\">\n                <div *ngIf=\"detail['fromEmail']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('fromEmail')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditFromEmail.valid || EditFromEmail.pristine || EditFromEmail.errors.minlength\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('subject')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditSubject\">Subject</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditSubject\" required [(ngModel)]=\"detail['subject']\" name=\"EditSubject\" #EditSubject=\"ngModel\">\n                <div *ngIf=\"detail['subject']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('subject')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditSubject.valid || EditSubject.pristine || EditSubject.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditSubject.errors && EditSubject.errors.required\"> Subject is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('content')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditContent\">Content</label>\n              <lib-richtext-editor [(ngModel)]=\"detail['content']\" name=\"EditContent\" [required]=\"true\" #EditContent=\"ngModel\">\n              </lib-richtext-editor>\n              <div [hidden]=\"EditContent.valid\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditContent.errors && EditContent.errors.required\"> Content is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('tag')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditTag\">Tag</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditTag\" required [(ngModel)]=\"detail['tag']\" name=\"EditTag\" #EditTag=\"ngModel\">\n                <div *ngIf=\"detail['tag']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('tag')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditTag.valid || EditTag.pristine || EditTag.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditTag.errors && EditTag.errors.required\"> Tag is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n        </ng-template>\n        <ng-template [ngIf]=\"action == 'Create' || action == 'Add' \">\n          <ng-template [ngIf]=\"!hiddenFields.includes('templateName')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditTemplateName\">Template Name</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditTemplateName\" required [(ngModel)]=\"detail['templateName']\" name=\"EditTemplateName\" #EditTemplateName=\"ngModel\">\n                <div *ngIf=\"detail['templateName']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('templateName')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditTemplateName.valid || EditTemplateName.pristine || EditTemplateName.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditTemplateName.errors && EditTemplateName.errors.required\"> TemplateName is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('fromEmail')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditFromEmail\">From Email</label>\n              <span><i data-toggle=\"tooltip\" title=\"Leave it blank if default sender email address in email settings is used\" class=\"far fa-question-circle\"></i></span>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditFromEmail\" [(ngModel)]=\"detail['fromEmail']\" name=\"EditFromEmail\" #EditFromEmail=\"ngModel\">\n                <div *ngIf=\"detail['fromEmail']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('fromEmail')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditFromEmail.valid || EditFromEmail.pristine || EditFromEmail.errors.minlength\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('subject')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditSubject\">Subject</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditSubject\" required [(ngModel)]=\"detail['subject']\" name=\"EditSubject\" #EditSubject=\"ngModel\">\n                <div *ngIf=\"detail['subject']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('subject')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditSubject.valid || EditSubject.pristine || EditSubject.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditSubject.errors && EditSubject.errors.required\"> Subject is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('content')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditContent\">Content</label>\n              <lib-richtext-editor [(ngModel)]=\"detail['content']\" name=\"EditContent\" [required]=\"true\" #EditContent=\"ngModel\">\n              </lib-richtext-editor>\n              <div [hidden]=\"EditContent.valid\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditContent.errors && EditContent.errors.required\"> Content is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('tag')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditTag\">Tag</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditTag\" required [(ngModel)]=\"detail['tag']\" name=\"EditTag\" #EditTag=\"ngModel\">\n                <div *ngIf=\"detail['tag']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('tag')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditTag.valid || EditTag.pristine || EditTag.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditTag.errors && EditTag.errors.required\"> Tag is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n        </ng-template>\n        <div class=\"action-buttons-center\">\n          <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!editForm.form.valid\">Submit</button>\n          <button *ngIf=\"!options['disableCancel']\" class=\"btn btn-outline-success\" type=\"button\" (click)=\"editCancel()\">Cancel</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  EmailtemplateListCustComponent\n} from '../../../emailing-cust/base/emailtemplate/emailtemplate-list.cust.component';\nimport {\n  ViewType\n} from '../emailtemplate.component';\nimport {\n  EmailtemplateService\n} from '../emailtemplate.service';\n@Component({\n  selector: 'app-emailtemplate-list',\n  templateUrl: './emailtemplate-list.component.html',\n  styleUrls: ['./emailtemplate-list.component.css']\n})\nexport class EmailtemplateListComponent extends EmailtemplateListCustComponent implements OnInit {\n  // @Input() options: any; {disableCatetory: false, disablePagination: false, disbleActionButtons: false\n  //                        disableListSearch: false, disableTitle: false, disableRefs: false\n  //                        disableListHead: false, disableTitleRow: false}\n  // @Input()\n  // public inputData:any;\n  // @Input()\n  // public searchObj:any;\n  // @Input()\n  // public queryParams: any;  // {listSortField: 'a', listSortOrder: 'asc' / 'desc', perPage: 6}\n  // @Input()\n  // public categoryBy:string; //field name whose value is used as category\n  constructor(public emailtemplateService: EmailtemplateService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(emailtemplateService, injector, router, route, location);\n    this.view = ViewType.LIST;\n    this.fieldDisplayNames = {\n      'templateName': 'Template Name',\n      'fromEmail': 'From Email',\n      'subject': 'Subject',\n      'tag': 'Tag',\n    };\n    this.stringFields.push('templateName');\n    this.stringFields.push('fromEmail');\n    this.stringFields.push('subject');\n    this.stringFields.push('tag');\n    this.listViewFilter = 'list';\n    const listCategories = [];\n    this.listCategory1 = listCategories[0] || {};\n    this.listCategory2 = listCategories[1] || {};\n    this.clickItemAction = 'detail';\n    this.itemMultiSelect = true;\n    // initialize detail structure for search\n    let detail = {};\n    this.detail = this.formatDetail(detail);\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    this.adjustListViewForWindowSize();\n    this.clickItemAction = typeof this.options.clickItemAction === 'undefined' ? this.clickItemAction : this.options.clickItemAction;\n    this.itemMultiSelect = typeof this.options.itemMultiSelect === 'boolean' ? this.options.itemMultiSelect : this.itemMultiSelect;\n    if (!this.options) {\n      this.options = {};\n    }\n    if (this.options.disableCatetory) {\n      this.listCategory1 = {}; // no do query based on category for home view;\n      this.listCategory2 = {}; // no do query based on category for home view;\n    }\n    // this is to initialize the detail that will be used for search condition selection\n    let detail = {};\n    if (this.searchObj) {\n      this.searchDetailReady = true; // search provided from \"detail\", not from search bar.\n      detail = this.searchObj;\n    }\n    if (this.queryParams) {\n      this.listSortField = this.queryParams.listSortField;\n      this.listSortOrder = this.queryParams.listSortOrder;\n      if (this.queryParams.perPage) {\n        this.perPage = this.queryParams.perPage\n      }\n    }\n    this.detail = this.formatDetail(detail);\n    this.searchList();\n    // get editHintFields\n    this.searchHintFieldValues();\n  }\n  static getInstance() {\n    //used by others to call some common functions\n    return new EmailtemplateListComponent(null, null, null, null, null);\n  }\n}","<div class=\"mt-4 mb-4 d-flex\" *ngIf=\"!options['disableTitleRow']\">\n</div>\n<ul *ngIf=\"listCategory1.listCategoryField\" class=\"nav nav-pills category-nav\">\n  <li *ngFor=\"let ele of categoryDisplays; let idx = index;\" class=\"nav-item\">\n    <a *ngIf=\" listCategory1.showEmptyCategory || (!listCategory1.showEmptyCategory && categoriesCounts[idx] > 0)\" class=\"nav-link\" [ngClass]=\"{'active': idx === selectedCategory }\" [routerLink]=\"['.']\" queryParamsHandling=\"preserve\" (click)=\"categorySelected(idx)\">\n      {{ele}} <span *ngIf=\"listCategory1.showCategoryCounts\">({{categoriesCounts[idx]}})</span>\n    </a>\n  </li>\n</ul>\n<div>\n  <div *ngIf=\"!options['disableListHead']\" class=\"container search\">\n    <div class=\"row\" *ngIf=\"!options['disableListSearch']\">\n      <div class=\"col\">\n        <div class=\"input-group\">\n          <input type=\"search\" class=\"form-control border border-secondary\" id=\"emailtemplateTextSearch\" #emailtemplateTextSearch [(ngModel)]=\"searchText\" (search)=\"$event.target.blur();searchList();\" placeholder=\"Search for template name, from email, subject, tag\">\n          <div *ngIf=\"searchText\" class=\"input-group-append icon-search-clear\">\n            <span>\n              <i class=\"fas fa-times-circle\" (click)=\"onSearchTextClear()\" title=\"Clear\"></i>\n            </span>\n          </div>\n          <div class=\"input-group-append\">\n            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"searchList()\"><i class=\"fas fa-search\"></i></button>\n          </div>\n        </div>\n        <div class=\"text-center\">\n          <span class=\"pointer\" (click)=\"toggleMoreSearch()\">\n            <span class=\"refine-search-text\">Refine Search &nbsp;</span>\n            <span>\n              <i *ngIf=\"!moreSearchOpened\" class=\"fas fa-plus-circle\" title=\"More\"></i>\n              <i *ngIf=\"moreSearchOpened\" class=\"fas fa-minus-circle\" title=\"Less\"></i>\n            </span>\n          </span>\n        </div>\n        <div class=\"shadow\" *ngIf=\"moreSearchOpened\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <div class=\"d-flex flex-wrap align-items-center\">\n              </div>\n              <hr>\n              <div class=\"container one-column-search mt-3 small\">\n                <div class=\"row col-gutter\">\n                  <div class=\"col-4 col-sm-3\"><label for=\"Archived\">Archived</label></div>\n                  <div class=\"col-8 col-sm-8\">\n                    <label class=\"mr-1\">No</label>\n                    <label class=\"switch\">\n                      <input type=\"checkbox\" [(ngModel)]=\"detail['archived']\" #EditArchived=\"ngModel\">\n                      <span class=\"slider round\"></span>\n                    </label>\n                    <label class=\"ml-1\">Yes</label>\n                  </div>\n                </div>\n              </div>\n              <hr>\n              <div class=\"action-buttons\">\n                <button type=\"button\" class=\"btn btn-outline-success\" (click)=\"onSearchClear()\">Reset</button>\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"searchList()\">Search</button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div *ngIf=\"!moreSearchOpened\" style=\"text-align: left;\">\n          <span class=\"badge badge-pill badge-info\" *ngFor=\"let value of searchMoreDetail\">\n            <a (click)=\"toggleMoreSearch()\" class=\"pointer\"> {{value[0]}}: {{value[1]}}</a>\n            <i class=\"fas fa-times-circle icon-clear-badge\" (click)=\"clearValueFromDetailAndSearchList(value[2])\" title=\"Clear\"></i>\n          </span>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"!options['disableActionButtions']\">\n      <div class=\"col\">\n        <div class=\"action-buttons\">\n          <a [routerLink]=\"['../new' ]\" [skipLocationChange]=\"false\" class=\"btn btn-outline-primary\">Create</a>\n          <a routerLink=\".\" class=\"btn btn-outline-primary\" (click)=\"onDeleteSelected()\" [ngClass]=\"{'disabled': !isItemSelected()}\">Delete</a>\n          <a routerLink=\".\" class=\"btn btn-outline-primary\" (click)=\"onArchiveSelected()\" [ngClass]=\"{'disabled': !isItemSelected()}\">\n            <span *ngIf=\"!archivedSearch\">Archive</span>\n            <span *ngIf=\"archivedSearch\">Unarchive</span>\n          </a>\n        </div>\n      </div>\n    </div>\n    <hr />\n    <div *ngIf=\"!options['disablePagination']\">\n      <div class=\"row justify-content-end mt-3\">\n        <div *ngIf=\"list.length > 2\" class=\"sort-selection mr-5\">\n          <div class=\"dropdown\" style=\"width: 100%;\">\n            <button class=\"sort-dropdown btn btn-light btn-sm dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> Sort: <span *ngIf=\"listSortField && !viewHiddenFields.includes(listSortField)\">{{listSortFieldDisplay}}\n                <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up\"></i>\n                <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down\"></i>\n              </span>\n            </button>\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('templateName', 'Template Name', 'asc')\">Template Name<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('templateName', 'Template Name', 'desc')\">Template Name<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('fromEmail', 'From Email', 'asc')\">From Email<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('fromEmail', 'From Email', 'desc')\">From Email<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('subject', 'Subject', 'asc')\">Subject<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('subject', 'Subject', 'desc')\">Subject<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('tag', 'Tag', 'asc')\">Tag<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('tag', 'Tag', 'desc')\">Tag<i class=\"fas fa-arrow-down\"></i></a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-between\">\n        <div>\n          <div *ngIf=\"list.length > 0\">\n            <input type=\"radio\" name=\"view-filter\" id=\"list-view\" class=\"view-radio\" (click)=\"setListViewFilter('list')\" [checked]=\"isShowListView('list')\">\n            <label for=\"list-view\"><i class=\"fa fa-th-list\"></i></label>\n            <input type=\"radio\" name=\"view-filter\" id=\"grid-view\" class=\"view-radio\" (click)=\"setListViewFilter('grid')\" [checked]=\"isShowListView('grid')\">\n            <label for=\"grid-view\"><i class=\"fa fa-th\"></i></label>\n            <input type=\"radio\" name=\"view-filter\" id=\"table-view\" class=\"view-radio\" (click)=\"setListViewFilter('table')\" [checked]=\"isShowListView('table')\">\n            <label for=\"table-view\"><i class=\"fa fa-list-alt\"></i></label>\n          </div>\n        </div>\n        <div>\n          <div class=\"total_counts\">\n            <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n            <span *ngIf=\"list.length > 1\"><input type=\"checkbox\" class=\"ml-3 mr-1\" [(ngModel)]=\"checkAll\" (change)=\"onCheckAllChange()\">All</span>\n            <a class=\"ml-3\" routerLink=\".\" (click)=\"onRefresh()\"><i class=\"fa fa-sync-alt\"></i></a>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n        <div *ngIf=\"totalPages > 1\">\n          <ul class=\"pagination justify-content-center\">\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n                <span aria-hidden=\"true\">&laquo;</span>\n                <span class=\"sr-only\">Previous</span>\n              </a>\n            </li>\n            <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n            </li>\n            <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n                <span class=\"sr-only\">Next</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n          <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-records\" *ngIf=\"list.length === 0\">\n    <span *ngIf=\"loaded\">No records found.</span>\n    <span *ngIf=\"!loaded\">Loading...</span>\n  </div>\n  <div *ngIf=\"list.length > 0\">\n    <div class=\"listview\" *ngIf=\"isShowListView('list')\">\n      <div class=\"list-block\" *ngFor=\"let detail of list;  let i = index; let list_index = index;\">\n        <hr *ngIf=\"i==0\" class=\"list-devider\">\n        <div class=\"list-card text-left\" [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i],\n\t\t\t\t\t\t\t'clickable-card': clickItemAction}\">\n          <div class=\"list-fields\" [ngClass]=\"{pointer: clickItemAction}\" (click)=\"clickOneItem(i)\">\n            <div class=\"list-body-fields\">\n              <h5>\n                <div class=\"mr-1 d-inline-block\">\n                  {{detail['templateName']}}\n                </div>\n              </h5>\n              <div>\n                <div *ngIf=\"fieldHasValue(detail['fromEmail'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>From Email:</label></div>\n                  <div class=\"ml-3\">\n                    {{detail['fromEmail']}}\n                  </div>\n                </div>\n                <div *ngIf=\"fieldHasValue(detail['subject'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Subject:</label></div>\n                  <div class=\"ml-3\">\n                    {{detail['subject']}}\n                  </div>\n                </div>\n                <div *ngIf=\"fieldHasValue(detail['tag'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Tag:</label></div>\n                  <div class=\"ml-3\">\n                    {{detail['tag']}}\n                  </div>\n                </div>\n              </div>\n              <div class=\"d-flex flex-row mt-1\">\n              </div>\n            </div>\n          </div>\n          <div class=\"card-action-icons\">\n            <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n            <a [routerLink]=\"['.']\" (click)=\"onDelete(detail['_id'], i)\"><i class=\"fas fa-trash-alt\" title=\"Delete\"></i></a>\n            <a [routerLink]=\"['.']\" (click)=\"onArchive(detail['_id'], i, archivedSearch)\">\n              <i *ngIf=\"!archivedSearch\" class=\"fa fa-archive\" title=\"Archive\"></i>\n              <i *ngIf=\"archivedSearch\" class=\"fas fa-trash-restore\" title=\"Unarchive\"></i>\n            </a>\n            <input class=\"list-check-box\" type=\"checkbox\" [ngModel]=\"checkedItem[i]\" (click)=\"selectOneItem(i)\" />\n          </div>\n        </div>\n        <hr class=\"list-devider\">\n      </div>\n    </div>\n    <div class=\"gridview\" *ngIf=\"isShowListView('grid')\">\n      <div class=\"grid-block\" *ngFor=\"let detail of list;  let i = index; let list_index = index;\">\n        <div class=\"card text-left h-100\" [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i],\n\t\t\t\t\t\t\t'clickable-card': clickItemAction}\">\n          <div class=\"grid-fields\" [ngClass]=\"{pointer: clickItemAction}\" (click)=\"clickOneItem(i)\">\n            <div class=\"card-header grid-head\">\n              <div>\n                <h5>\n                  <div class=\"mr-1 d-inline-block\">\n                    {{detail['templateName']}}\n                  </div>\n                </h5>\n              </div>\n            </div>\n            <div class=\"card-body\">\n              <div *ngIf=\"fieldHasValue(detail['fromEmail'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>From Email:</label></div>\n                <div class=\"ml-3\">\n                  {{detail['fromEmail']}}</div>\n              </div>\n              <div *ngIf=\"fieldHasValue(detail['subject'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>Subject:</label></div>\n                <div class=\"ml-3\">\n                  {{detail['subject']}}</div>\n              </div>\n              <div *ngIf=\"fieldHasValue(detail['tag'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>Tag:</label></div>\n                <div class=\"ml-3\">\n                  {{detail['tag']}}</div>\n              </div>\n            </div>\n          </div>\n          <div class=\"card-action-icons\">\n            <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n            <a routerLink=\".\" (click)=\"onDelete(detail['_id'], i)\"><i class=\"fas fa-trash-alt\" title=\"Delete\"></i></a>\n            <a routerLink=\".\" (click)=\"onArchive(detail['_id'], i, archivedSearch)\">\n              <i *ngIf=\"!archivedSearch\" class=\"fa fa-archive\" title=\"Archive\"></i>\n              <i *ngIf=\"archivedSearch\" class=\"fas fa-trash-restore\" title=\"Unarchive\"></i>\n            </a>\n            <input class=\"list-check-box\" type=\"checkbox\" [ngModel]=\"checkedItem[i]\" (click)=\"selectOneItem(i)\" />\n          </div>\n        </div>\n      </div>\n    </div>\n    <table *ngIf=\"isShowListView('table')\" class=\"table table-bordered table-hover\">\n      <thead class=\"thead-light\">\n        <tr>\n          <th scope=\"col\">#</th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('templateName', 'Template Name')\"> Template Name <span *ngIf=\"listSortField === 'templateName'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('fromEmail', 'From Email')\"> From Email <span *ngIf=\"listSortField === 'fromEmail'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('subject', 'Subject')\"> Subject <span *ngIf=\"listSortField === 'subject'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('tag', 'Tag')\"> Tag <span *ngIf=\"listSortField === 'tag'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th scope=\"col\" style=\"width:9.8rem;\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        <ng-template ngFor let-detail [ngForOf]=\"list\" let-i=\"index\">\n          <tr [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i]}\">\n            <td scope=\"row\" (click)=\"clickOneItem(i)\" class=\"pointer read-more mt-3\">\n              {{(page-1)*perPage+i+1}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['templateName']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['fromEmail']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['subject']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['tag']}}\n            </td>\n            <td>\n              <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n              <a routerLink=\".\" (click)=\"onDelete(detail['_id'], i)\"><i class=\"fas fa-trash-alt\" title=\"Delete\"></i></a>\n              <a routerLink=\".\" (click)=\"onArchive(detail['_id'], i, archivedSearch)\">\n                <i *ngIf=\"!archivedSearch\" class=\"fa fa-archive\" title=\"Archive\"></i>\n                <i *ngIf=\"archivedSearch\" class=\"fas fa-trash-restore\" title=\"Unarchive\"></i>\n              </a>\n              <input class=\"list-check-box\" type=\"checkbox\" [ngModel]=\"checkedItem[i]\" (click)=\"selectOneItem(i)\" />\n            </td>\n          </tr>\n        </ng-template>\n      </tbody>\n    </table>\n  </div>\n  <div class=\"container\">\n    <div *ngIf=\"!options['disablePagination']\">\n      <div class=\"row justify-content-end mt-3\">\n      </div>\n      <div class=\"d-flex justify-content-between\">\n        <div>\n        </div>\n        <div>\n          <div class=\"total_counts\">\n            <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n        <div *ngIf=\"totalPages > 1\">\n          <ul class=\"pagination justify-content-center\">\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n                <span aria-hidden=\"true\">&laquo;</span>\n                <span class=\"sr-only\">Previous</span>\n              </a>\n            </li>\n            <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n            </li>\n            <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n                <span class=\"sr-only\">Next</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n          <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import {\n  HttpClient\n} from '@angular/common/http';\nimport {\n  MddsBaseService\n} from '@hicoder/angular-core';\nconst servicePath = '/emailtemplate/';\nexport class EmailtemplateBaseService extends MddsBaseService {\n  constructor(http: HttpClient, serverRootUrl: string) {\n    const serviceUrl = serverRootUrl + servicePath;\n    super(http, serviceUrl);\n  }\n}","import {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  MddsBaseComponent,\n  ViewType\n} from '@hicoder/angular-core';\nimport {\n  Component,\n  OnInit,\n  Injector,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  EmailtemplateService\n} from './emailtemplate.service';\nconst itemCamelName = 'email Template';\nexport {\n  ViewType\n};\n@Component({\n  template: '',\n})\nexport class EmailtemplateComponent extends MddsBaseComponent implements OnInit {\n  // *** common input fields\n  @Input()\n  public style: any; // {}\n  @Input()\n  public options: any; // {} uiOptions\n  @Input()\n  public searchObj: any;\n  // *** list component\n  @Input()\n  public inputData: any;\n  @Input()\n  public queryParams: any; // {listSortField: 'a', listSortOrder: 'asc' / 'desc', perPage: 6}\n  @Input()\n  public categoryBy: string; //field name whose value is used as category\n  // list-asso component\n  @Input('asso') public associationField: string;\n  // list select component\n  @Output() outputData: any;\n  // *** edit / create component\n  @Input()\n  public id: string;\n  @Input()\n  public cid: string; // copy id\n  @Input()\n  public initData: any; // some fields has data already. eg: {a: b}. Used for add\n  @Input()\n  public embeddedView: boolean;\n  @Input()\n  public embedMode: string; // parent to tell the action - create\n  @Output()\n  public doneData = new EventEmitter < boolean > ();\n  @Output()\n  public done = new EventEmitter < any > ();\n  // *** detail component\n  // @Input() \n  // public id:string;\n  @Input()\n  public disableActionButtions: boolean;\n  @Output()\n  public eventEmitter: EventEmitter < any > = new EventEmitter();\n  // detail sub component\n  // @Input() inputData;\n  // detail show field component\n  // @Input() id: string;\n  @Input() detailObj: any;\n  @Input() showFieldsStr: string;\n  // detail sel component\n  //@Input() inputData;\n  //@Output() outputData;\n  // detail pop component\n  // @Input() inputData;\n  // @Output() outputData;\n  constructor(public emailtemplateService: EmailtemplateService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(emailtemplateService, injector, router, route, location);\n    this.setItemNames(itemCamelName);\n    this.briefFieldsInfo = [];\n    this.briefFieldsInfo.push(['templateName', 'Template Name']);\n    this.briefFieldsInfo.push(['fromEmail', 'From Email']);\n    this.briefFieldsInfo.push(['subject', 'Subject']);\n    this.briefFieldsInfo.push(['tag', 'Tag']);\n    this.requiredFields = ['templateName', 'subject', 'content', 'tag', ];\n    this.schemaName = 'emailtemplate';\n    this.modulePath = 'emailing';\n    this.indexFields = ['templateName', ];\n  }\n  ngOnInit() {\n    this.style = this.style || {};\n    this.options = this.options || {};\n  }\n}","import {\n  Injectable,\n  Inject,\n  OnDestroy,\n  SkipSelf\n} from '@angular/core';\nimport {\n  HttpClient\n} from '@angular/common/http';\nimport {\n  EmailtemplateBaseService\n} from './emailtemplate.base.service';\nimport {\n  Emailing_SERVER_ROOT_URI\n} from '../emailing.tokens';\n@Injectable({\n  providedIn: 'root',\n})\nexport class EmailtemplateService extends EmailtemplateBaseService implements OnDestroy {\n  constructor(http: HttpClient, @Inject(Emailing_SERVER_ROOT_URI) private emailingServerRootUri: string) {\n    super(http, emailingServerRootUri);\n  }\n  ngOnDestroy() {}\n}"],"sourceRoot":"webpack:///"}
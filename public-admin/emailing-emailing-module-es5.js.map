{"version":3,"sources":["webpack:///src/app/emailing-cust/base/emailqueue/emailqueue-detail.cust.component.ts","webpack:///src/app/emailing-cust/base/emailqueue/emailqueue-edit.cust.component.ts","webpack:///src/app/emailing-cust/base/emailqueue/emailqueue-list.cust.component.ts","webpack:///src/app/emailing-cust/base/emailsettings/emailsettings-detail.cust.component.ts","webpack:///src/app/emailing-cust/base/emailsettings/emailsettings-edit.cust.component.ts","webpack:///src/app/emailing-cust/base/emailsettings/emailsettings-list.cust.component.ts","webpack:///src/app/emailing-cust/base/emailtemplate/emailtemplate-detail.cust.component.ts","webpack:///src/app/emailing-cust/base/emailtemplate/emailtemplate-edit.cust.component.ts","webpack:///src/app/emailing-cust/base/emailtemplate/emailtemplate-list.cust.component.ts","webpack:///src/app/emailing-cust/emailing-routing.cust.path.ts","webpack:///src/app/emailing-cust/emailing.conf.ts","webpack:///src/app/emailing-cust/emailing.cust.module.ts","webpack:///src/app/emailing-cust/emailing.tokens.value.ts","webpack:///src/app/emailing/emailing-routing.core.module.ts","webpack:///src/app/emailing/emailing-routing.core.path.ts","webpack:///src/app/emailing/emailing-routing.module.ts","webpack:///src/app/emailing/emailing.component.ts","webpack:///src/app/emailing/emailing.component.html","webpack:///src/app/emailing/emailing.core.module.ts","webpack:///src/app/emailing/emailing.directive.ts","webpack:///src/app/emailing/emailing.module.ts","webpack:///src/app/emailing/emailing.tokens.ts","webpack:///src/app/emailing/emailqueue/emailqueue-detail/emailqueue-detail-field.component.ts","webpack:///src/app/emailing/emailqueue/emailqueue-detail/emailqueue-detail-field.component.html","webpack:///src/app/emailing/emailqueue/emailqueue-detail/emailqueue-detail.component.ts","webpack:///src/app/emailing/emailqueue/emailqueue-detail/emailqueue-detail.component.html","webpack:///src/app/emailing/emailqueue/emailqueue-edit/emailqueue-edit.component.ts","webpack:///src/app/emailing/emailqueue/emailqueue-edit/emailqueue-edit.component.html","webpack:///src/app/emailing/emailqueue/emailqueue-list/emailqueue-list.component.ts","webpack:///src/app/emailing/emailqueue/emailqueue-list/emailqueue-list.component.html","webpack:///src/app/emailing/emailqueue/emailqueue.base.service.ts","webpack:///src/app/emailing/emailqueue/emailqueue.component.ts","webpack:///src/app/emailing/emailqueue/emailqueue.service.ts","webpack:///src/app/emailing/emailsettings/emailsettings-detail/emailsettings-detail-field.component.ts","webpack:///src/app/emailing/emailsettings/emailsettings-detail/emailsettings-detail-field.component.html","webpack:///src/app/emailing/emailsettings/emailsettings-detail/emailsettings-detail.component.ts","webpack:///src/app/emailing/emailsettings/emailsettings-detail/emailsettings-detail.component.html","webpack:///src/app/emailing/emailsettings/emailsettings-edit/emailsettings-edit.component.ts","webpack:///src/app/emailing/emailsettings/emailsettings-edit/emailsettings-edit.component.html","webpack:///src/app/emailing/emailsettings/emailsettings-list/emailsettings-list.component.ts","webpack:///src/app/emailing/emailsettings/emailsettings-list/emailsettings-list.component.html","webpack:///src/app/emailing/emailsettings/emailsettings.base.service.ts","webpack:///src/app/emailing/emailsettings/emailsettings.component.ts","webpack:///src/app/emailing/emailsettings/emailsettings.service.ts","webpack:///src/app/emailing/emailtemplate/emailtemplate-detail/emailtemplate-detail-field.component.ts","webpack:///src/app/emailing/emailtemplate/emailtemplate-detail/emailtemplate-detail-field.component.html","webpack:///src/app/emailing/emailtemplate/emailtemplate-detail/emailtemplate-detail.component.ts","webpack:///src/app/emailing/emailtemplate/emailtemplate-detail/emailtemplate-detail.component.html","webpack:///src/app/emailing/emailtemplate/emailtemplate-edit/emailtemplate-edit.component.ts","webpack:///src/app/emailing/emailtemplate/emailtemplate-edit/emailtemplate-edit.component.html","webpack:///src/app/emailing/emailtemplate/emailtemplate-list/emailtemplate-list.component.ts","webpack:///src/app/emailing/emailtemplate/emailtemplate-list/emailtemplate-list.component.html","webpack:///src/app/emailing/emailtemplate/emailtemplate.base.service.ts","webpack:///src/app/emailing/emailtemplate/emailtemplate.component.ts","webpack:///src/app/emailing/emailtemplate/emailtemplate.service.ts"],"names":["EmailqueueDetailCustComponent","template","EmailqueueEditCustComponent","EmailqueueListCustComponent","EmailsettingsDetailCustComponent","EmailsettingsEditCustComponent","EmailsettingsListCustComponent","EmailtemplateDetailCustComponent","EmailtemplateEditCustComponent","EmailtemplateListCustComponent","EmailingRoutingCustPath","EmailingCoreRoutes","path","component","children","redirectTo","pathMatch","data","mraLevel","item","EmailingRoutes","emailing_server_root_uri","EmailingCustModule","imports","declarations","exports","providers","entryComponents","EmailingRoutingCoreModule","forChild","emailtemplateRoutingCorePath","canActivate","emailsettingsRoutingCorePath","emailqueueRoutingCorePath","EmailingRoutingModule","EmailingComponent","selector","templateUrl","styleUrls","EmailingCoreModule","provide","useClass","MraNgbDateFormatterService","dateFormat","timeFormat","value","date","EmailingModule","Emailing_SERVER_ROOT_URI","factory","providedIn","EmailqueueDetailFieldComponent","emailqueueService","injector","router","route","location","view","DETAIL","fieldDisplayNames","stringFields","push","dateFields","numberFields","showFieldsStr","console","error","showFields","match","detailObj","onDetailReturned","id","populateDetail","EmailqueueDetailComponent","snapshot","paramMap","get","searchObj","populateDetailByFields","EmailqueueEditComponent","minDate","year","Date","getFullYear","month","day","EDIT","detail","formatDetail","embedMode","action","getDetailData","populateDetailForAction","cid","queryParamMap","populateDetailFromCopy","searchHintFieldValues","$","tooltip","initData","processed","sent","Object","keys","prop","hiddenFields","$event","target","blur","EmailqueueListComponent","LIST","listViewFilter","setListSort","listCategories","listCategory1","listCategory2","clickItemAction","itemMultiSelect","adjustListViewForWindowSize","options","disableCatetory","searchDetailReady","queryParams","listSortField","listSortOrder","perPage","searchList","servicePath","EmailqueueBaseService","http","serverRootUrl","serviceUrl","itemCamelName","EmailqueueComponent","doneData","done","eventEmitter","setItemNames","briefFieldsInfo","schemaName","modulePath","indexFields","style","EmailqueueService","emailingServerRootUri","EmailsettingsDetailFieldComponent","emailsettingsService","EmailsettingsDetailComponent","EmailsettingsEditComponent","EmailsettingsListComponent","EmailsettingsBaseService","EmailsettingsComponent","requiredFields","EmailsettingsService","EmailtemplateDetailFieldComponent","emailtemplateService","EmailtemplateDetailComponent","EmailtemplateEditComponent","EmailtemplateListComponent","EmailtemplateBaseService","EmailtemplateComponent","EmailtemplateService"],"mappings":"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","file":"emailing-emailing-module-es5.js","sourcesContent":["import { Input, Component } from '@angular/core';\n\nimport { EmailqueueComponent } from '../../../emailing/emailqueue/emailqueue.component';\n\n@Component({\n    template: '',\n})\nexport class EmailqueueDetailCustComponent extends EmailqueueComponent {\n}\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:53 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  EmailqueueComponent\n} from '../../../emailing/emailqueue/emailqueue.component';\n@Component({\n  template: '',\n})\nexport class EmailqueueDetailCustComponent extends EmailqueueComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { EmailqueueComponent } from '../../../emailing/emailqueue/emailqueue.component';\n\n@Component({\n    template: '',\n})\nexport class EmailqueueEditCustComponent extends EmailqueueComponent {        \n}\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:53 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  EmailqueueComponent\n} from '../../../emailing/emailqueue/emailqueue.component';\n@Component({\n  template: '',\n})\nexport class EmailqueueEditCustComponent extends EmailqueueComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { EmailqueueComponent } from '../../../emailing/emailqueue/emailqueue.component';\n\n@Component({\n    template: '',\n})\nexport class EmailqueueListCustComponent extends EmailqueueComponent {\n}\n\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:53 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  EmailqueueComponent\n} from '../../../emailing/emailqueue/emailqueue.component';\n@Component({\n  template: '',\n})\nexport class EmailqueueListCustComponent extends EmailqueueComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { EmailsettingsComponent } from '../../../emailing/emailsettings/emailsettings.component';\n\n@Component({\n    template: '',\n})\nexport class EmailsettingsDetailCustComponent extends EmailsettingsComponent {\n}\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:53 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  EmailsettingsComponent\n} from '../../../emailing/emailsettings/emailsettings.component';\n@Component({\n  template: '',\n})\nexport class EmailsettingsDetailCustComponent extends EmailsettingsComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { EmailsettingsComponent } from '../../../emailing/emailsettings/emailsettings.component';\n\n@Component({\n    template: '',\n})\nexport class EmailsettingsEditCustComponent extends EmailsettingsComponent {        \n}\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:53 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  EmailsettingsComponent\n} from '../../../emailing/emailsettings/emailsettings.component';\n@Component({\n  template: '',\n})\nexport class EmailsettingsEditCustComponent extends EmailsettingsComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { EmailsettingsComponent } from '../../../emailing/emailsettings/emailsettings.component';\n\n@Component({\n    template: '',\n})\nexport class EmailsettingsListCustComponent extends EmailsettingsComponent {\n}\n\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:53 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  EmailsettingsComponent\n} from '../../../emailing/emailsettings/emailsettings.component';\n@Component({\n  template: '',\n})\nexport class EmailsettingsListCustComponent extends EmailsettingsComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { EmailtemplateComponent } from '../../../emailing/emailtemplate/emailtemplate.component';\n\n@Component({\n    template: '',\n})\nexport class EmailtemplateDetailCustComponent extends EmailtemplateComponent {\n}\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:53 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  EmailtemplateComponent\n} from '../../../emailing/emailtemplate/emailtemplate.component';\n@Component({\n  template: '',\n})\nexport class EmailtemplateDetailCustComponent extends EmailtemplateComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { EmailtemplateComponent } from '../../../emailing/emailtemplate/emailtemplate.component';\n\n@Component({\n    template: '',\n})\nexport class EmailtemplateEditCustComponent extends EmailtemplateComponent {        \n}\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:53 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  EmailtemplateComponent\n} from '../../../emailing/emailtemplate/emailtemplate.component';\n@Component({\n  template: '',\n})\nexport class EmailtemplateEditCustComponent extends EmailtemplateComponent {}**** End of recent updates.<<<*/\n","import { Input, Component } from '@angular/core';\n\nimport { EmailtemplateComponent } from '../../../emailing/emailtemplate/emailtemplate.component';\n\n@Component({\n    template: '',\n})\nexport class EmailtemplateListCustComponent extends EmailtemplateComponent {\n}\n\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:53 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Input,\n  Component\n} from '@angular/core';\nimport {\n  EmailtemplateComponent\n} from '../../../emailing/emailtemplate/emailtemplate.component';\n@Component({\n  template: '',\n})\nexport class EmailtemplateListCustComponent extends EmailtemplateComponent {}**** End of recent updates.<<<*/\n","\n\n// Path under emailing/cust/\nexport const EmailingRoutingCustPath = [\n  // your customization goes here\n];\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:52 GMT-0700 (Pacific Daylight Time)\n\n// Path under emailing/cust/\nexport const EmailingRoutingCustPath = [\n  // your customization goes here\n];**** End of recent updates.<<<*/\n","import { Routes } from '@angular/router';\n\nimport { EmailingComponent } from '../emailing/emailing.component';\n\n//Import routing paths\nimport { \n  emailtemplateRoutingCorePath,\n  emailsettingsRoutingCorePath,\n  emailqueueRoutingCorePath,  \n} from '../emailing/emailing-routing.core.path';\n\nexport const EmailingCoreRoutes: Routes = [\n  { \n    // Lazy Load: and add to app routing: \n    //     { path: 'emailing', loadChildren: () => import('./emailing/emailing.module').then(m => m.EmailingModule) },\n    path: '',\n    // non lazy load config. Include module in app module.\n    // path: 'emailing',\n\n    component: EmailingComponent,\n    children: [\n      {path: '',  redirectTo: 'emailtemplate', pathMatch: 'full'},\n\n      { path: 'emailtemplate',\n        children: emailtemplateRoutingCorePath,\n        data: {mraLevel: 1, item: 'emailtemplate'}\n      },\n      { path: 'emailsettings',\n        children: emailsettingsRoutingCorePath,\n        data: {mraLevel: 1, item: 'emailsettings'}\n      },\n      { path: 'emailqueue',\n        children: emailqueueRoutingCorePath,\n        data: {mraLevel: 1, item: 'emailqueue'}\n      },\n    ]\n  },\n];\n\nimport { EmailingRoutingCustPath } from './emailing-routing.cust.path';\n\nexport const EmailingRoutes: Routes = [\n  {\n    // Lazy Load: and add to app routing: \n    //     { path: 'emailing', loadChildren: () => import('./emailing/emailing.module').then(m => m.EmailingModule) },\n    path: 'cust',\n    // non lazy load config. Include module in app module.\n    // path: 'emailing/cust',\n\n    children: EmailingRoutingCustPath,\n  },\n];\n\nexport const emailing_server_root_uri: string = '/api/emailing';\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:52 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  Routes\n} from '@angular/router';\nimport {\n  EmailingComponent\n} from '../emailing/emailing.component';\n//Import routing paths\nimport {\n  emailtemplateRoutingCorePath,\n  emailsettingsRoutingCorePath,\n  emailqueueRoutingCorePath,\n} from '../emailing/emailing-routing.core.path';\nexport const EmailingCoreRoutes: Routes = [{\n  // Lazy Load: and add to app routing:\n  //     { path: 'emailing', loadChildren: () => import('./emailing/emailing.module').then(m => m.EmailingModule) },\n  path: '',\n  // non lazy load config. Include module in app module.\n  // path: 'emailing',\n  component: EmailingComponent,\n  children: [{\n    path: '',\n    redirectTo: 'emailtemplate',\n    pathMatch: 'full'\n  }, {\n    path: 'emailtemplate',\n    children: emailtemplateRoutingCorePath,\n    data: {\n      mraLevel: 1,\n      item: 'emailtemplate'\n    }\n  }, {\n    path: 'emailsettings',\n    children: emailsettingsRoutingCorePath,\n    data: {\n      mraLevel: 1,\n      item: 'emailsettings'\n    }\n  }, {\n    path: 'emailqueue',\n    children: emailqueueRoutingCorePath,\n    data: {\n      mraLevel: 1,\n      item: 'emailqueue'\n    }\n  }, ]\n}, ];\nimport {\n  EmailingRoutingCustPath\n} from './emailing-routing.cust.path';\nexport const EmailingRoutes: Routes = [{\n  // Lazy Load: and add to app routing:\n  //     { path: 'emailing', loadChildren: () => import('./emailing/emailing.module').then(m => m.EmailingModule) },\n  path: 'cust',\n  // non lazy load config. Include module in app module.\n  // path: 'emailing/cust',\n  children: EmailingRoutingCustPath,\n}, ];**** End of recent updates.<<<*/\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { EmailingCoreModule } from '../emailing/emailing.core.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n  \n    EmailingCoreModule,\n  ],\n  declarations: [\n  ],\n  exports: [\n  ],\n  providers: [\n  ],\n  entryComponents: [\n  ],\n})\nexport class EmailingCustModule { }\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:52 GMT-0700 (Pacific Daylight Time)\n\nimport {\n  NgModule\n} from '@angular/core';\nimport {\n  CommonModule\n} from '@angular/common';\nimport {\n  RouterModule\n} from '@angular/router';\nimport {\n  FormsModule\n} from '@angular/forms';\nimport {\n  EmailingCoreModule\n} from '../emailing/emailing.core.module';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    EmailingCoreModule,\n  ],\n  declarations: [],\n  exports: [],\n  providers: [],\n  entryComponents: [],\n})\nexport class EmailingCustModule {}**** End of recent updates.<<<*/\n","export const emailing_server_root_uri: string = '/api/emailing';\n/*>>> Please check this recent updates and merge with existing ones***\n**Date: Sun Jul 19 2020 22:23:52 GMT-0700 (Pacific Daylight Time)\n\nexport const emailing_server_root_uri: string = '/api/emailing';**** End of recent updates.<<<*/\n","import {\n  NgModule\n} from '@angular/core';\nimport {\n  RouterModule\n} from '@angular/router';\nimport {\n  EmailingComponent\n} from './emailing.component';\nimport {\n  EmailingCoreRoutes\n} from '../emailing-cust/emailing.conf';\n@NgModule({\n  imports: [RouterModule.forChild(EmailingCoreRoutes)],\n  exports: [RouterModule],\n  providers: [],\n})\nexport class EmailingRoutingCoreModule {}","// Import components for each schema\nimport {\n  EmailtemplateListComponent\n} from './emailtemplate/emailtemplate-list/emailtemplate-list.component';\nimport {\n  EmailtemplateDetailComponent\n} from './emailtemplate/emailtemplate-detail/emailtemplate-detail.component';\nimport {\n  EmailtemplateEditComponent\n} from './emailtemplate/emailtemplate-edit/emailtemplate-edit.component';\nimport {\n  EmailsettingsListComponent\n} from './emailsettings/emailsettings-list/emailsettings-list.component';\nimport {\n  EmailsettingsDetailComponent\n} from './emailsettings/emailsettings-detail/emailsettings-detail.component';\nimport {\n  EmailsettingsEditComponent\n} from './emailsettings/emailsettings-edit/emailsettings-edit.component';\nimport {\n  EmailqueueListComponent\n} from './emailqueue/emailqueue-list/emailqueue-list.component';\nimport {\n  EmailqueueDetailComponent\n} from './emailqueue/emailqueue-detail/emailqueue-detail.component';\nimport {\n  EmailqueueEditComponent\n} from './emailqueue/emailqueue-edit/emailqueue-edit.component';\nimport {\n  AuthGuard\n} from '@hicoder/angular-auth';\nexport const emailtemplateRoutingCorePath = [{\n  path: 'list',\n  component: EmailtemplateListComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'detail/:id',\n  component: EmailtemplateDetailComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'edit/:id',\n  component: EmailtemplateEditComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'new',\n  component: EmailtemplateEditComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: '**',\n  redirectTo: 'list',\n  pathMatch: 'full'\n}];\nexport const emailsettingsRoutingCorePath = [{\n  path: 'list',\n  component: EmailsettingsListComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'detail/:id',\n  component: EmailsettingsDetailComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'edit/:id',\n  component: EmailsettingsEditComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: '**',\n  redirectTo: 'list',\n  pathMatch: 'full'\n}];\nexport const emailqueueRoutingCorePath = [{\n  path: 'list',\n  component: EmailqueueListComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'detail/:id',\n  component: EmailqueueDetailComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'edit/:id',\n  component: EmailqueueEditComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: '**',\n  redirectTo: 'list',\n  pathMatch: 'full'\n}];","import {\n  NgModule\n} from '@angular/core';\nimport {\n  RouterModule\n} from '@angular/router';\nimport {\n  EmailingRoutes\n} from '../emailing-cust/emailing.conf';\n@NgModule({\n  imports: [RouterModule.forChild(EmailingRoutes)],\n  exports: [RouterModule],\n  providers: [],\n})\nexport class EmailingRoutingModule {}","import {\n  Component,\n  OnInit\n} from '@angular/core';\n@Component({\n  selector: 'app-emailing',\n  templateUrl: './emailing.component.html',\n  styleUrls: ['./emailing.component.css'],\n})\nexport class EmailingComponent implements OnInit {\n  constructor() {}\n  ngOnInit() {}\n}","<div class=\"container\">\n  <div class=\"card component-main-card\">\n    <div class=\"card-header\">\n      <nav class=\"nav nav-pills\">\n        <a class=\"nav-item nav-link\" routerLink=\"./emailtemplate\" routerLinkActive=\"active\">Email Template</a>\n        <a class=\"nav-item nav-link\" routerLink=\"./emailsettings\" routerLinkActive=\"active\">Email Settings</a>\n        <a class=\"nav-item nav-link\" routerLink=\"./emailqueue\" routerLinkActive=\"active\">Email Queue</a>\n      </nav>\n    </div>\n    <div class=\"card-body\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>","import {\n  NgModule\n} from '@angular/core';\nimport {\n  CommonModule\n} from '@angular/common';\nimport {\n  FormsModule\n} from '@angular/forms';\nimport {\n  NgbModule,\n  NgbDateParserFormatter\n} from '@ng-bootstrap/ng-bootstrap';\nimport {\n  MraNgbDateFormatterService\n} from './emailing.directive';\nimport {\n  MddsRichtextEditorModule\n} from '@hicoder/angular-richtext';\nimport {\n  MddsCoreModule\n} from '@hicoder/angular-core';\nimport {\n  EmailingRoutingCoreModule\n} from './emailing-routing.core.module';\nimport {\n  EmailingComponent\n} from './emailing.component';\n// Import components for each schema\nimport {\n  EmailtemplateComponent\n} from './emailtemplate/emailtemplate.component';\nimport {\n  EmailtemplateListComponent\n} from './emailtemplate/emailtemplate-list/emailtemplate-list.component';\nimport {\n  EmailtemplateListCustComponent\n} from '../emailing-cust/base/emailtemplate/emailtemplate-list.cust.component';\nimport {\n  EmailtemplateDetailComponent\n} from './emailtemplate/emailtemplate-detail/emailtemplate-detail.component';\nimport {\n  EmailtemplateDetailCustComponent\n} from '../emailing-cust/base/emailtemplate/emailtemplate-detail.cust.component';\nimport {\n  EmailtemplateDetailFieldComponent\n} from './emailtemplate/emailtemplate-detail/emailtemplate-detail-field.component';\nimport {\n  EmailtemplateEditComponent\n} from './emailtemplate/emailtemplate-edit/emailtemplate-edit.component';\nimport {\n  EmailtemplateEditCustComponent\n} from '../emailing-cust/base/emailtemplate/emailtemplate-edit.cust.component';\nimport {\n  EmailsettingsComponent\n} from './emailsettings/emailsettings.component';\nimport {\n  EmailsettingsListComponent\n} from './emailsettings/emailsettings-list/emailsettings-list.component';\nimport {\n  EmailsettingsListCustComponent\n} from '../emailing-cust/base/emailsettings/emailsettings-list.cust.component';\nimport {\n  EmailsettingsDetailComponent\n} from './emailsettings/emailsettings-detail/emailsettings-detail.component';\nimport {\n  EmailsettingsDetailCustComponent\n} from '../emailing-cust/base/emailsettings/emailsettings-detail.cust.component';\nimport {\n  EmailsettingsDetailFieldComponent\n} from './emailsettings/emailsettings-detail/emailsettings-detail-field.component';\nimport {\n  EmailsettingsEditComponent\n} from './emailsettings/emailsettings-edit/emailsettings-edit.component';\nimport {\n  EmailsettingsEditCustComponent\n} from '../emailing-cust/base/emailsettings/emailsettings-edit.cust.component';\nimport {\n  EmailqueueComponent\n} from './emailqueue/emailqueue.component';\nimport {\n  EmailqueueListComponent\n} from './emailqueue/emailqueue-list/emailqueue-list.component';\nimport {\n  EmailqueueListCustComponent\n} from '../emailing-cust/base/emailqueue/emailqueue-list.cust.component';\nimport {\n  EmailqueueDetailComponent\n} from './emailqueue/emailqueue-detail/emailqueue-detail.component';\nimport {\n  EmailqueueDetailCustComponent\n} from '../emailing-cust/base/emailqueue/emailqueue-detail.cust.component';\nimport {\n  EmailqueueDetailFieldComponent\n} from './emailqueue/emailqueue-detail/emailqueue-detail-field.component';\nimport {\n  EmailqueueEditComponent\n} from './emailqueue/emailqueue-edit/emailqueue-edit.component';\nimport {\n  EmailqueueEditCustComponent\n} from '../emailing-cust/base/emailqueue/emailqueue-edit.cust.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgbModule,\n    MddsCoreModule,\n    MddsRichtextEditorModule,\n    EmailingRoutingCoreModule,\n  ],\n  declarations: [\n    EmailingComponent,\n    EmailtemplateComponent,\n    EmailtemplateListComponent,\n    EmailtemplateListCustComponent,\n    EmailtemplateDetailCustComponent,\n    EmailtemplateDetailComponent,\n    EmailtemplateDetailFieldComponent,\n    EmailtemplateEditComponent,\n    EmailtemplateEditCustComponent,\n    EmailsettingsComponent,\n    EmailsettingsListComponent,\n    EmailsettingsListCustComponent,\n    EmailsettingsDetailCustComponent,\n    EmailsettingsDetailComponent,\n    EmailsettingsDetailFieldComponent,\n    EmailsettingsEditComponent,\n    EmailsettingsEditCustComponent,\n    EmailqueueComponent,\n    EmailqueueListComponent,\n    EmailqueueListCustComponent,\n    EmailqueueDetailCustComponent,\n    EmailqueueDetailComponent,\n    EmailqueueDetailFieldComponent,\n    EmailqueueEditComponent,\n    EmailqueueEditCustComponent,\n  ],\n  exports: [\n    EmailingComponent,\n    EmailtemplateListComponent,\n    EmailtemplateDetailComponent,\n    EmailtemplateDetailFieldComponent,\n    EmailtemplateEditComponent,\n    EmailsettingsListComponent,\n    EmailsettingsDetailComponent,\n    EmailsettingsDetailFieldComponent,\n    EmailsettingsEditComponent,\n    EmailqueueListComponent,\n    EmailqueueDetailComponent,\n    EmailqueueDetailFieldComponent,\n    EmailqueueEditComponent,\n  ],\n  providers: [{\n    provide: NgbDateParserFormatter,\n    useClass: MraNgbDateFormatterService\n  }, ],\n  entryComponents: [\n    EmailtemplateEditComponent,\n  ]\n})\nexport class EmailingCoreModule {}","import {\n  Injectable\n} from \"@angular/core\";\nimport {\n  NgbDateParserFormatter,\n  NgbDateStruct\n} from '@ng-bootstrap/ng-bootstrap';\nimport {\n  dateStructureToString,\n  stringToDateStructure\n} from '@hicoder/angular-core';\n@Injectable()\nexport class MraNgbDateFormatterService extends NgbDateParserFormatter {\n  private dateFormat = 'MM-DD-YYYY';\n  private timeFormat = 'hh:mm:ss';\n  // from input -> internal model\n  parse(value: string): NgbDateStruct {\n    return stringToDateStructure(value, this.dateFormat);\n  }\n  // from internal model -> string\n  format(date: NgbDateStruct): string {\n    return dateStructureToString(date, this.dateFormat);\n  }\n}","import {\n  NgModule\n} from '@angular/core';\nimport {\n  EmailingRoutingModule\n} from './emailing-routing.module';\nimport {\n  EmailingCoreModule\n} from './emailing.core.module';\nimport {\n  EmailingCustModule\n} from '../emailing-cust/emailing.cust.module'\n@NgModule({\n  imports: [\n    EmailingRoutingModule,\n    EmailingCoreModule,\n    EmailingCustModule,\n  ],\n  declarations: [],\n  exports: [\n    EmailingCoreModule,\n    EmailingCustModule,\n  ],\n  providers: [],\n  entryComponents: []\n})\nexport class EmailingModule {}","import {\n  InjectionToken\n} from '@angular/core';\nimport {\n  emailing_server_root_uri\n} from '../emailing-cust/emailing.tokens.value';\nexport const Emailing_SERVER_ROOT_URI = new InjectionToken < string > ('Emailing_SERVER_ROOT_URI', {\n  factory: (): string => emailing_server_root_uri,\n  providedIn: 'root',\n}, );","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  EmailqueueComponent,\n  ViewType\n} from '../emailqueue.component';\nimport {\n  EmailqueueService\n} from '../emailqueue.service';\n@Component({\n  selector: 'app-emailqueue-detail-field',\n  templateUrl: './emailqueue-detail-field.component.html',\n  styleUrls: ['./emailqueue-detail.component.css']\n})\nexport class EmailqueueDetailFieldComponent extends EmailqueueComponent\nimplements OnInit {\n  // @Input() id: string;\n  // @Input() detailObj: any;\n  // @Input() showFieldsStr: string;\n  showFields: string[];\n  constructor(public emailqueueService: EmailqueueService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(emailqueueService, injector, router, route, location);\n    this.view = ViewType.DETAIL;\n    this.fieldDisplayNames = {\n      'subject': 'Subject',\n      'from': 'From',\n      'to': 'To',\n      'processed': 'Processed',\n      'number': 'Number',\n      'sent': 'Sent',\n      'result': 'Result',\n      'createdAt': 'Created at',\n      'updatedAt': 'Updated at',\n      'content': 'Content',\n      'replacements': 'Replacements',\n      'defaultReplacement': 'Default Replacement',\n    };\n    this.stringFields.push('subject');\n    this.stringFields.push('from');\n    this.stringFields.push('to');\n    this.stringFields.push('result');\n    this.stringFields.push('content');\n    this.stringFields.push('replacements');\n    this.stringFields.push('defaultReplacement');\n    this.dateFields = ['createdAt', 'updatedAt', ];\n    this.numberFields = ['number', 'sent', ];\n  }\n  ngOnInit() {\n    if (!this.showFieldsStr) {\n      console.error(\"A field has to be given to show it.\");\n      return;\n    }\n    this.showFields = this.showFieldsStr.match(/\\S+/g);\n    if (this.detailObj) {\n      this.onDetailReturned(this.detailObj, null);\n    } else {\n      if (!this.id) this.id = this.id;\n      if (this.id) this.populateDetail(this.id);\n      else {\n        console.error(\"No id provided to show info\");\n        return;\n      }\n    }\n  }\n}","<div *ngIf=\"detail && showFields.includes('subject')\">\n  {{detail['subject']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('from')\">\n  {{detail['from']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('to')\">\n  {{detail['to']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('processed')\">{{detail['processed']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('number')\">\n  {{detail['number']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('sent')\">\n  {{detail['sent']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('result')\">\n  {{detail['result']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('createdAt')\"> {{detail['createdAt']? (detail['createdAt']['originalValue'] | date:'medium') : ''}}\n</div>\n<div *ngIf=\"detail && showFields.includes('updatedAt')\"> {{detail['updatedAt']? (detail['updatedAt']['originalValue'] | date:'medium') : ''}}\n</div>\n<div *ngIf=\"detail && showFields.includes('content')\">\n  <div libMddsRichtextShow=\"emailqueueDetailContent\" [content]=\"detail['content']\"></div>\n</div>\n<div *ngIf=\"detail && showFields.includes('replacements')\">\n  {{detail['replacements']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('defaultReplacement')\">\n  {{detail['defaultReplacement']}}\n</div>","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  EmailqueueDetailCustComponent\n} from '../../../emailing-cust/base/emailqueue/emailqueue-detail.cust.component';\nimport {\n  ViewType\n} from '../emailqueue.component';\nimport {\n  EmailqueueService\n} from '../emailqueue.service';\n@Component({\n  selector: 'app-emailqueue-detail',\n  templateUrl: './emailqueue-detail.component.html',\n  styleUrls: ['./emailqueue-detail.component.css']\n})\nexport class EmailqueueDetailComponent extends EmailqueueDetailCustComponent implements OnInit, AfterViewInit {\n  // @Input() \n  // public id:string;\n  // @Input()\n  // public searchObj:any;\n  // @Input()\n  // public disableActionButtions:boolean;\n  // @Output()\n  // public eventEmitter: EventEmitter<any> = new EventEmitter();\n  constructor(public emailqueueService: EmailqueueService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(emailqueueService, injector, router, route, location);\n    this.view = ViewType.DETAIL;\n    this.fieldDisplayNames = {\n      'subject': 'Subject',\n      'from': 'From',\n      'to': 'To',\n      'processed': 'Processed',\n      'number': 'Number',\n      'sent': 'Sent',\n      'result': 'Result',\n      'createdAt': 'Created at',\n      'updatedAt': 'Updated at',\n      'content': 'Content',\n      'replacements': 'Replacements',\n      'defaultReplacement': 'Default Replacement',\n    };\n    this.stringFields.push('subject');\n    this.stringFields.push('from');\n    this.stringFields.push('to');\n    this.stringFields.push('result');\n    this.stringFields.push('content');\n    this.stringFields.push('replacements');\n    this.stringFields.push('defaultReplacement');\n    this.dateFields = ['createdAt', 'updatedAt', ];\n    this.numberFields = ['number', 'sent', ];\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    if (!this.id) this.id = this.route.snapshot.paramMap.get('id');\n    if (this.id) {\n      this.populateDetail(this.id);\n    } else if (this.searchObj) {\n      // search item based on the unique value\n      this.populateDetailByFields(this.searchObj);\n    } else {\n      console.error(\"Routing error for detail view... no id...\");\n      return;\n    }\n  }\n  ngAfterViewInit() {}\n}","<div class=\"detail\" *ngIf=\"detail\">\n  <div *ngIf=\"!options['disableActionButtions']\">\n    <div *ngIf=\"!disableActionButtions && !options['disableActionButtions']\" class=\"action-buttons\">\n      <a *ngIf=\"!options['disableActionList']\" routerLink=\"../../list\" class=\"action-go-list\"><i class=\"fas fa-list\" title=\"List\"></i><!--  span>&nbsp;&nbsp;{{ItemCamelName}} List</span--></a>\n      <a *ngIf=\"!options['disableActionEdit']\" [routerLink]=\"['../../edit', detail['_id'] ]\" [skipLocationChange]=\"false\" class=\"btn btn-outline-primary\">Edit</a>\n    </div>\n  </div>\n  <div class=\"card text-left transparent-border \">\n    <div class=\"grid-fields\">\n      <div class=\"card-header grid-head\">\n        <div class=\"ml-1\">\n          <h5>\n            <div class=\"mr-1 d-inline-block\">\n              {{detail['subject']}}\n            </div>\n          </h5>\n        </div>\n      </div>\n      <div class=\"card-body\">\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>From:</label></div>\n            <div class=\"ml-3\">\n              {{detail['from']}}</div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>To:</label></div>\n            <div class=\"ml-3\">\n              {{detail['to']}}</div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Processed:</label></div>\n            <div class=\"ml-3\">{{detail['processed']}} </div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Number:</label></div>\n            <div class=\"ml-3\">\n              {{detail['number']}}</div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Sent:</label></div>\n            <div class=\"ml-3\">\n              {{detail['sent']}}</div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Result:</label></div>\n            <div class=\"ml-3\">\n              {{detail['result']}}</div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Created at:</label></div>\n            <div class=\"ml-3\"> {{detail['createdAt']? (detail['createdAt']['originalValue'] | date:'medium') : ''}}</div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Updated at:</label></div>\n            <div class=\"ml-3\"> {{detail['updatedAt']? (detail['updatedAt']['originalValue'] | date:'medium') : ''}}</div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Content:</label></div>\n            <div class=\"ml-3\">\n              <div libMddsRichtextShow=\"emailqueueDetailContent\" [content]=\"detail['content']\"></div>\n            </div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Replacements:</label></div>\n            <div class=\"ml-3\">\n              {{detail['replacements']}}</div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Default Replacement:</label></div>\n            <div class=\"ml-3\">\n              {{detail['defaultReplacement']}}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"!options['disablePipeline']\">\n  </div>\n  <div *ngIf=\"!options['disableRefLink']\">\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  Directive,\n  EventEmitter\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\ndeclare const $: any;\nimport {\n  EmailqueueEditCustComponent\n} from '../../../emailing-cust/base/emailqueue/emailqueue-edit.cust.component';\nimport {\n  ViewType\n} from '../emailqueue.component';\nimport {\n  EmailqueueService\n} from '../emailqueue.service';\n@Component({\n  selector: 'app-emailqueue-edit',\n  templateUrl: './emailqueue-edit.component.html',\n  styleUrls: ['./emailqueue-edit.component.css']\n})\nexport class EmailqueueEditComponent extends EmailqueueEditCustComponent implements OnInit, AfterViewInit {\n  // @Input() \n  // public id: string;\n  // @Input()\n  // public cid: string; // copy id\n  // @Input()\n  // public initData: any; // some fields has data already. eg: {a: b}. Used for add\n  // @Output()\n  // public doneData = new EventEmitter<boolean>();\n  // @Output()\n  // public done = new EventEmitter<any>();\n  // @Input()\n  // public embeddedView: boolean;\n  // @Input()\n  // public embedMode: string; // parent to tell the action - create\n  public action: string;\n  public minDate = {\n    year: (new Date()).getFullYear() - 100,\n    month: 1,\n    day: 1\n  };\n  constructor(public emailqueueService: EmailqueueService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(emailqueueService, injector, router, route, location);\n    this.view = ViewType.EDIT;\n    this.fieldDisplayNames = {\n      'subject': 'Subject',\n      'from': 'From',\n      'to': 'To',\n      'processed': 'Processed',\n      'number': 'Number',\n      'sent': 'Sent',\n      'result': 'Result',\n      'content': 'Content',\n      'replacements': 'Replacements',\n      'defaultReplacement': 'Default Replacement',\n    };\n    this.stringFields.push('subject');\n    this.stringFields.push('from');\n    this.stringFields.push('to');\n    this.stringFields.push('result');\n    this.stringFields.push('content');\n    this.stringFields.push('replacements');\n    this.stringFields.push('defaultReplacement');\n    this.numberFields = ['number', 'sent', ];\n    const detail = {};\n    this.detail = this.formatDetail(detail);\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.embedMode == 'create') { // parent ask to create\n      this.action = 'Create';\n      this.getDetailData();\n    } else {\n      if (!this.id) this.id = this.route.snapshot.paramMap.get('id');\n      if (this.id) {\n        this.action = 'Edit';\n        this.populateDetailForAction(this.id, 'edit'); //populate with action as 'edit'\n      } else {\n        this.action = 'Create';\n        if (!this.cid) this.cid = this.route.snapshot.queryParamMap.get('cid');\n        if (this.cid) {\n          this.populateDetailFromCopy(this.cid);\n        } else {\n          this.getDetailData();\n        }\n      }\n    }\n    // get editHintFields\n    this.searchHintFieldValues();\n  }\n  ngAfterViewInit() {\n    // Initialize all tooltips\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n  getDetailData() {\n    if (this.initData) {\n      this.action = 'Add';\n      let detail = {\n        processed: false,\n        sent: 0,\n      };\n      for (let prop of Object.keys(this.initData)) {\n        detail[prop] = this.initData[prop];\n        this.hiddenFields.push(prop);\n      }\n      this.detail = this.formatDetail(detail);\n    } else {\n      let detail = {\n        processed: false,\n        sent: 0,\n      };\n      this.detail = this.formatDetail(detail);\n    }\n  }\n}","<div class=\"edit\" *ngIf=\"detail\">\n  <div class=\"card\" style=\"text-align: left;\">\n    <div class=\"card-body\">\n      <h4 class=\"card-title\" *ngIf=\"!embeddedView && !options['title']\">{{action}} Email Queue</h4>\n      <h4 class=\"card-title\" *ngIf=\"options['title']\" [ngStyle]=\"style['card-title']\">\n        {{options['title']}}\n      </h4>\n      <p *ngIf=\"options['subtitle']\" [ngStyle]=\"style['card-subtitle']\">\n        {{options['subtitle']}}\n      </p>\n      <form (ngSubmit)=\"onSubmit()\" #editForm=\"ngForm\">\n        <ng-template [ngIf]=\"action == 'Edit'\">\n          <ng-template [ngIf]=\"!hiddenFields.includes('subject')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditSubject\">Subject</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditSubject\" [(ngModel)]=\"detail['subject']\" name=\"EditSubject\" #EditSubject=\"ngModel\">\n                <div *ngIf=\"detail['subject']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('subject')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditSubject.valid || EditSubject.pristine || EditSubject.errors.minlength\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('from')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditFrom\">From</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditFrom\" [(ngModel)]=\"detail['from']\" name=\"EditFrom\" #EditFrom=\"ngModel\">\n                <div *ngIf=\"detail['from']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('from')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditFrom.valid || EditFrom.pristine || EditFrom.errors.minlength\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('to')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditTo\">To</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditTo\" [(ngModel)]=\"detail['to']\" name=\"EditTo\" #EditTo=\"ngModel\">\n                <div *ngIf=\"detail['to']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('to')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditTo.valid || EditTo.pristine || EditTo.errors.minlength\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('processed')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditProcessed\">Processed</label>\n              <div class=\"form-check\" [ngClass]=\"{'ng-valid': true} \">\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditProcessed\" class=\"form-check-input\" id=\"EditProcessedYes\" [value]=\"true\" [(ngModel)]=\"detail['processed']\" #EditProcessed=\"ngModel\">\n                  <label class=\"form-check-label\">Yes</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditProcessed\" class=\"form-check-input\" id=\"EditProcessedNo\" [value]=\"false\" [(ngModel)]=\"detail['processed']\" #EditProcessed=\"ngModel\">\n                  <label class=\"form-check-label\">No</label>\n                </div>\n                <div *ngIf=\"detail['processed'] == true || detail['processed'] == false\" class=\"form-check-inline\" (click)=\"clearValueFromDetail('processed')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditProcessed.valid || EditProcessed.pristine\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('number')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditNumber\">Number</label>\n              <input type=\"number\" class=\"form-control\" id=\"EditNumber\" [(ngModel)]=\"detail['number']\" name=\"EditNumber\" #EditNumber=\"ngModel\">\n              <div [hidden]=\"EditNumber.valid || EditNumber.pristine || EditNumber.errors.libMddsMinNumber\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('sent')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditSent\">Sent</label>\n              <input type=\"number\" class=\"form-control\" id=\"EditSent\" [(ngModel)]=\"detail['sent']\" name=\"EditSent\" #EditSent=\"ngModel\">\n              <div [hidden]=\"EditSent.valid || EditSent.pristine || EditSent.errors.libMddsMinNumber\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('result')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditResult\">Result</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditResult\" [(ngModel)]=\"detail['result']\" name=\"EditResult\" #EditResult=\"ngModel\">\n                <div *ngIf=\"detail['result']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('result')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditResult.valid || EditResult.pristine || EditResult.errors.minlength\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('content')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditContent\">Content</label>\n              <lib-richtext-editor [(ngModel)]=\"detail['content']\" name=\"EditContent\" #EditContent=\"ngModel\">\n              </lib-richtext-editor>\n              <div [hidden]=\"EditContent.valid\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('replacements')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditReplacements\">Replacements</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditReplacements\" [(ngModel)]=\"detail['replacements']\" name=\"EditReplacements\" #EditReplacements=\"ngModel\">\n                <div *ngIf=\"detail['replacements']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('replacements')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditReplacements.valid || EditReplacements.pristine || EditReplacements.errors.minlength\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('defaultReplacement')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditDefaultReplacement\">Default Replacement</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditDefaultReplacement\" [(ngModel)]=\"detail['defaultReplacement']\" name=\"EditDefaultReplacement\" #EditDefaultReplacement=\"ngModel\">\n                <div *ngIf=\"detail['defaultReplacement']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('defaultReplacement')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditDefaultReplacement.valid || EditDefaultReplacement.pristine || EditDefaultReplacement.errors.minlength\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n        </ng-template>\n        <ng-template [ngIf]=\"action == 'Create' || action == 'Add' \">\n          <ng-template [ngIf]=\"!hiddenFields.includes('subject')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditSubject\">Subject</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditSubject\" [(ngModel)]=\"detail['subject']\" name=\"EditSubject\" #EditSubject=\"ngModel\">\n                <div *ngIf=\"detail['subject']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('subject')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditSubject.valid || EditSubject.pristine || EditSubject.errors.minlength\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('from')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditFrom\">From</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditFrom\" [(ngModel)]=\"detail['from']\" name=\"EditFrom\" #EditFrom=\"ngModel\">\n                <div *ngIf=\"detail['from']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('from')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditFrom.valid || EditFrom.pristine || EditFrom.errors.minlength\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('to')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditTo\">To</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditTo\" [(ngModel)]=\"detail['to']\" name=\"EditTo\" #EditTo=\"ngModel\">\n                <div *ngIf=\"detail['to']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('to')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditTo.valid || EditTo.pristine || EditTo.errors.minlength\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('subject')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditSubject\">Subject</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditSubject\" [(ngModel)]=\"detail['subject']\" name=\"EditSubject\" #EditSubject=\"ngModel\">\n                <div *ngIf=\"detail['subject']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('subject')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditSubject.valid || EditSubject.pristine || EditSubject.errors.minlength\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('processed')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditProcessed\">Processed</label>\n              <div class=\"form-check\" [ngClass]=\"{'ng-valid': true} \">\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditProcessed\" class=\"form-check-input\" id=\"EditProcessedYes\" [value]=\"true\" [(ngModel)]=\"detail['processed']\" #EditProcessed=\"ngModel\">\n                  <label class=\"form-check-label\">Yes</label>\n                </div>\n                <div class=\"form-check-inline\">\n                  <input type=\"radio\" name=\"EditProcessed\" class=\"form-check-input\" id=\"EditProcessedNo\" [value]=\"false\" [(ngModel)]=\"detail['processed']\" #EditProcessed=\"ngModel\">\n                  <label class=\"form-check-label\">No</label>\n                </div>\n                <div *ngIf=\"detail['processed'] == true || detail['processed'] == false\" class=\"form-check-inline\" (click)=\"clearValueFromDetail('processed')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditProcessed.valid || EditProcessed.pristine\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('number')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditNumber\">Number</label>\n              <input type=\"number\" class=\"form-control\" id=\"EditNumber\" [(ngModel)]=\"detail['number']\" name=\"EditNumber\" #EditNumber=\"ngModel\">\n              <div [hidden]=\"EditNumber.valid || EditNumber.pristine || EditNumber.errors.libMddsMinNumber\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('sent')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditSent\">Sent</label>\n              <input type=\"number\" class=\"form-control\" id=\"EditSent\" [(ngModel)]=\"detail['sent']\" name=\"EditSent\" #EditSent=\"ngModel\">\n              <div [hidden]=\"EditSent.valid || EditSent.pristine || EditSent.errors.libMddsMinNumber\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('result')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditResult\">Result</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditResult\" [(ngModel)]=\"detail['result']\" name=\"EditResult\" #EditResult=\"ngModel\">\n                <div *ngIf=\"detail['result']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('result')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditResult.valid || EditResult.pristine || EditResult.errors.minlength\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('content')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditContent\">Content</label>\n              <lib-richtext-editor [(ngModel)]=\"detail['content']\" name=\"EditContent\" #EditContent=\"ngModel\">\n              </lib-richtext-editor>\n              <div [hidden]=\"EditContent.valid\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('replacements')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditReplacements\">Replacements</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditReplacements\" [(ngModel)]=\"detail['replacements']\" name=\"EditReplacements\" #EditReplacements=\"ngModel\">\n                <div *ngIf=\"detail['replacements']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('replacements')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditReplacements.valid || EditReplacements.pristine || EditReplacements.errors.minlength\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('defaultReplacement')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditDefaultReplacement\">Default Replacement</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditDefaultReplacement\" [(ngModel)]=\"detail['defaultReplacement']\" name=\"EditDefaultReplacement\" #EditDefaultReplacement=\"ngModel\">\n                <div *ngIf=\"detail['defaultReplacement']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('defaultReplacement')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditDefaultReplacement.valid || EditDefaultReplacement.pristine || EditDefaultReplacement.errors.minlength\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n        </ng-template>\n        <div class=\"action-buttons-center\">\n          <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!editForm.form.valid\">Submit</button>\n          <button *ngIf=\"!options['disableCancel']\" class=\"btn btn-outline-success\" type=\"button\" (click)=\"editCancel()\">Cancel</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  EmailqueueListCustComponent\n} from '../../../emailing-cust/base/emailqueue/emailqueue-list.cust.component';\nimport {\n  ViewType\n} from '../emailqueue.component';\nimport {\n  EmailqueueService\n} from '../emailqueue.service';\n@Component({\n  selector: 'app-emailqueue-list',\n  templateUrl: './emailqueue-list.component.html',\n  styleUrls: ['./emailqueue-list.component.css']\n})\nexport class EmailqueueListComponent extends EmailqueueListCustComponent implements OnInit {\n  public minDate = {\n    year: (new Date()).getFullYear() - 100,\n    month: 1,\n    day: 1\n  };\n  // @Input() options: any; {disableCatetory: false, disablePagination: false, disbleActionButtons: false\n  //                        disableListSearch: false, disableTitle: false, disableRefs: false\n  //                        disableListHead: false, disableTitleRow: false}\n  // @Input()\n  // public inputData:any;\n  // @Input()\n  // public searchObj:any;\n  // @Input()\n  // public queryParams: any;  // {listSortField: 'a', listSortOrder: 'asc' / 'desc', perPage: 6}\n  // @Input()\n  // public categoryBy:string; //field name whose value is used as category\n  constructor(public emailqueueService: EmailqueueService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(emailqueueService, injector, router, route, location);\n    this.view = ViewType.LIST;\n    this.fieldDisplayNames = {\n      'subject': 'Subject',\n      'processed': 'Processed',\n      'number': 'Number',\n      'sent': 'Sent',\n      'createdAt': 'Created at',\n    };\n    this.stringFields.push('subject');\n    this.dateFields = ['createdAt', ];\n    this.numberFields = ['number', 'sent', ];\n    this.listViewFilter = 'list';\n    this.setListSort('createdAt', 'Created at', 'desc');\n    const listCategories = [];\n    this.listCategory1 = listCategories[0] || {};\n    this.listCategory2 = listCategories[1] || {};\n    this.clickItemAction = 'detail';\n    this.itemMultiSelect = true;\n    // initialize detail structure for search\n    let detail = {};\n    this.detail = this.formatDetail(detail);\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    this.adjustListViewForWindowSize();\n    this.clickItemAction = typeof this.options.clickItemAction === 'undefined' ? this.clickItemAction : this.options.clickItemAction;\n    this.itemMultiSelect = typeof this.options.itemMultiSelect === 'boolean' ? this.options.itemMultiSelect : this.itemMultiSelect;\n    if (!this.options) {\n      this.options = {};\n    }\n    if (this.options.disableCatetory) {\n      this.listCategory1 = {}; // no do query based on category for home view;\n      this.listCategory2 = {}; // no do query based on category for home view;\n    }\n    // this is to initialize the detail that will be used for search condition selection\n    let detail = {};\n    if (this.searchObj) {\n      this.searchDetailReady = true; // search provided from \"detail\", not from search bar.\n      detail = this.searchObj;\n    }\n    if (this.queryParams) {\n      this.listSortField = this.queryParams.listSortField;\n      this.listSortOrder = this.queryParams.listSortOrder;\n      if (this.queryParams.perPage) {\n        this.perPage = this.queryParams.perPage\n      }\n    }\n    this.detail = this.formatDetail(detail);\n    this.searchList();\n    // get editHintFields\n    this.searchHintFieldValues();\n  }\n  static getInstance() {\n    //used by others to call some common functions\n    return new EmailqueueListComponent(null, null, null, null, null);\n  }\n}","<div class=\"mt-4 mb-4 d-flex\" *ngIf=\"!options['disableTitleRow']\">\n</div>\n<ul *ngIf=\"listCategory1.listCategoryField\" class=\"nav nav-pills category-nav\">\n  <li *ngFor=\"let ele of categoryDisplays; let idx = index;\" class=\"nav-item\">\n    <a *ngIf=\" listCategory1.showEmptyCategory || (!listCategory1.showEmptyCategory && categoriesCounts[idx] > 0)\" class=\"nav-link\" [ngClass]=\"{'active': idx === selectedCategory }\" [routerLink]=\"['.']\" queryParamsHandling=\"preserve\" (click)=\"categorySelected(idx)\">\n      {{ele}} <span *ngIf=\"listCategory1.showCategoryCounts\">({{categoriesCounts[idx]}})</span>\n    </a>\n  </li>\n</ul>\n<div>\n  <div *ngIf=\"!options['disableListHead']\" class=\"container search\">\n    <div class=\"row\" *ngIf=\"!options['disableListSearch']\">\n      <div class=\"col\">\n        <div class=\"input-group\">\n          <input type=\"search\" class=\"form-control border border-secondary\" id=\"emailqueueTextSearch\" #emailqueueTextSearch [(ngModel)]=\"searchText\" (search)=\"$event.target.blur();searchList();\" placeholder=\"Search for subject\">\n          <div *ngIf=\"searchText\" class=\"input-group-append icon-search-clear\">\n            <span>\n              <i class=\"fas fa-times-circle\" (click)=\"onSearchTextClear()\" title=\"Clear\"></i>\n            </span>\n          </div>\n          <div class=\"input-group-append\">\n            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"searchList()\"><i class=\"fas fa-search\"></i></button>\n          </div>\n        </div>\n        <div class=\"text-center\">\n          <span class=\"pointer\" (click)=\"toggleMoreSearch()\">\n            <span class=\"refine-search-text\">Refine Search &nbsp;</span>\n            <span>\n              <i *ngIf=\"!moreSearchOpened\" class=\"fas fa-plus-circle\" title=\"More\"></i>\n              <i *ngIf=\"moreSearchOpened\" class=\"fas fa-minus-circle\" title=\"Less\"></i>\n            </span>\n          </span>\n        </div>\n        <div class=\"shadow\" *ngIf=\"moreSearchOpened\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <div class=\"d-flex flex-wrap align-items-center\">\n                <div class=\"container two-column-search small\">\n                  <div class=\"row col-gutter align-items-center\">\n                    <div class=\"col-12 col-sm-3\">\n                      <label for=\"emailqueueEditProcessed\"> Processed </label>\n                    </div>\n                    <div class=\"col-11 col-sm-8\">\n                      <div class=\"form-check-inline\">\n                        <input type=\"radio\" name=\"emailqueueEditProcessed\" class=\"form-check-input\" id=\"emailqueueEditProcessedYes\" [value]=\"true\" [(ngModel)]=\"detail['processed']\" #emailqueueEditProcessed=\"ngModel\">\n                        <span class=\"form-check-label\">Yes</span>\n                      </div>\n                      <div class=\"form-check-inline\">\n                        <input type=\"radio\" name=\"emailqueueEditProcessed\" class=\"form-check-input\" id=\"emailqueueEditProcessedNo\" [value]=\"false\" [(ngModel)]=\"detail['processed']\" #emailqueueEditProcessed=\"ngModel\">\n                        <span class=\"form-check-label\">No</span>\n                      </div>\n                    </div>\n                    <div class=\"col-1\">\n                      <div class=\"pointer\" (click)=\"clearValueFromDetail('processed')\" *ngIf=\"checkValueDefinedFromDetail('processed')\"><i class=\"fas fa-times-circle\" title=\"Clear\"></i></div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"container two-column-search small\">\n                  <div class=\"row col-gutter align-items-center\">\n                    <div class=\"col-12 col-sm-3\">\n                      <label for=\"emailqueueEditNumber\"> Number </label>\n                    </div>\n                    <div class=\"col-11 col-sm-8\">\n                      <div class=\"input-group input-group-sm align-items-center\">\n                        <input type=\"number\" class=\"form-control form-control-sm\" id=\"emailqueueEditNumber\" [(ngModel)]=\"detail['__mra_number_from']\" name=\"emailqueueEditNumber\" #emailqueueEditNumber=\"ngModel\">\n                        <span>&nbsp; ~ &nbsp;</span>\n                        <input type=\"number\" class=\"form-control form-control-sm\" id=\"emailqueueEditNumber\" [(ngModel)]=\"detail['__mra_number_to']\" name=\"emailqueueEditNumber\" #emailqueueEditNumber=\"ngModel\">\n                      </div>\n                    </div>\n                    <div class=\"col-1\">\n                      <div class=\"pointer\" (click)=\"clearValueFromDetail('number')\" *ngIf=\"checkValueDefinedFromDetail('number')\"><i class=\"fas fa-times-circle\" title=\"Clear\"></i></div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"container two-column-search small\">\n                  <div class=\"row col-gutter align-items-center\">\n                    <div class=\"col-12 col-sm-3\">\n                      <label for=\"emailqueueEditSent\"> Sent </label>\n                    </div>\n                    <div class=\"col-11 col-sm-8\">\n                      <div class=\"input-group input-group-sm align-items-center\">\n                        <input type=\"number\" class=\"form-control form-control-sm\" id=\"emailqueueEditSent\" [(ngModel)]=\"detail['__mra_sent_from']\" name=\"emailqueueEditSent\" #emailqueueEditSent=\"ngModel\">\n                        <span>&nbsp; ~ &nbsp;</span>\n                        <input type=\"number\" class=\"form-control form-control-sm\" id=\"emailqueueEditSent\" [(ngModel)]=\"detail['__mra_sent_to']\" name=\"emailqueueEditSent\" #emailqueueEditSent=\"ngModel\">\n                      </div>\n                    </div>\n                    <div class=\"col-1\">\n                      <div class=\"pointer\" (click)=\"clearValueFromDetail('sent')\" *ngIf=\"checkValueDefinedFromDetail('sent')\"><i class=\"fas fa-times-circle\" title=\"Clear\"></i></div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"container one-column-search small\">\n                  <div class=\"row col-gutter align-items-center\">\n                    <div class=\"col-12 col-lg-3\">\n                      <label for=\"emailqueueEditCreatedAt\"> Created at </label>\n                    </div>\n                    <div class=\"col-11 col-lg-8\">\n                      <div class=\"row\">\n                        <div class=\"input-group input-group-sm col-12 col-md-6 align-items-center\">\n                          <span class=\"small mx-1\" style=\"width:2rem\">From</span>\n                          <input class=\"form-control form-control-sm\" id=\"emailqueueEditCreatedAtFrom\" placeholder=\"{{dateFormat}}\" [(ngModel)]=\"detail['createdAt']['from']\" name=\"emailqueueEditCreatedAt\" ngbDatepicker [minDate]=\"minDate\" #emailqueueEditCreatedAt=\"ngModel\">\n                          <div class=\"input-group-append\">\n                            <button class=\"btn btn-outline-secondary\" (click)=\"onDateSelectionToggle('createdAt')\" type=\"button\">\n                              <i class=\"fas fa-calendar-alt\"></i>\n                            </button>\n                          </div>\n                        </div>\n                        <div class=\"input-group input-group-sm col-12 col-md-6 align-items-center\">\n                          <span class=\"small mx-1\" style=\"width:2rem\">to</span>\n                          <input class=\"form-control form-control-sm\" id=\"emailqueueEditCreatedAtTo\" placeholder=\"{{dateFormat}}\" [(ngModel)]=\"detail['createdAt']['to']\" name=\"emailqueueEditCreatedAt\" ngbDatepicker [minDate]=\"minDate\" #emailqueueEditCreatedAt=\"ngModel\">\n                          <div class=\"input-group-append\">\n                            <button class=\"btn btn-outline-secondary\" (click)=\"onDateSelectionToggle('createdAt')\" type=\"button\">\n                              <i class=\"fas fa-calendar-alt\"></i>\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"date-selection-pop\" *ngIf=\"detail['createdAt']['pop']\">\n                        <ngb-datepicker #dp [minDate]=\"minDate\" (select)=\"onDateSelection('createdAt', $event)\" [displayMonths]=\"datePickerDisplayMonths\" [dayTemplate]=\"emailqueueEditCreatedAtT\">\n                        </ngb-datepicker>\n                        <ng-template #emailqueueEditCreatedAtT let-emailqueueEditCreatedAtDate=\"date\" let-emailqueueEditCreatedAtFocused=\"focused\">\n                          <span class=\"custom-day\" [class.focused]=\"emailqueueEditCreatedAtFocused\" [class.range]=\"isRange('createdAt', emailqueueEditCreatedAtDate)\" [class.faded]=\"isHovered('createdAt', emailqueueEditCreatedAtDate) || isInside('createdAt', emailqueueEditCreatedAtDate)\" (mouseenter)=\"hoveredDate = emailqueueEditCreatedAtDate\" (mouseleave)=\"hoveredDate = null\">\n                            {{ emailqueueEditCreatedAtDate.day }}\n                          </span>\n                        </ng-template>\n                      </div>\n                    </div>\n                    <div class=\"col-1\">\n                      <div class=\"pointer\" (click)=\"clearValueFromDetail('createdAt')\" *ngIf=\"checkValueDefinedFromDetail('createdAt')\"><i class=\"fas fa-times-circle\" title=\"Clear\"></i></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"action-buttons\">\n                <button type=\"button\" class=\"btn btn-outline-success\" (click)=\"onSearchClear()\">Reset</button>\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"searchList()\">Search</button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div *ngIf=\"!moreSearchOpened\" style=\"text-align: left;\">\n          <span class=\"badge badge-pill badge-info\" *ngFor=\"let value of searchMoreDetail\">\n            <a (click)=\"toggleMoreSearch()\" class=\"pointer\"> {{value[0]}}: {{value[1]}}</a>\n            <i class=\"fas fa-times-circle icon-clear-badge\" (click)=\"clearValueFromDetailAndSearchList(value[2])\" title=\"Clear\"></i>\n          </span>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"!options['disableActionButtions']\">\n      <div class=\"col\">\n        <div class=\"action-buttons\">\n        </div>\n      </div>\n    </div>\n    <hr />\n    <div *ngIf=\"!options['disablePagination']\">\n      <div class=\"row justify-content-end mt-3\">\n        <div *ngIf=\"list.length > 2\" class=\"sort-selection mr-5\">\n          <div class=\"dropdown\" style=\"width: 100%;\">\n            <button class=\"sort-dropdown btn btn-light btn-sm dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> Sort: <span *ngIf=\"listSortField && !viewHiddenFields.includes(listSortField)\">{{listSortFieldDisplay}}\n                <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up\"></i>\n                <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down\"></i>\n              </span>\n            </button>\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('subject', 'Subject', 'asc')\">Subject<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('subject', 'Subject', 'desc')\">Subject<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('processed', 'Processed', 'asc')\">Processed<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('processed', 'Processed', 'desc')\">Processed<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('number', 'Number', 'asc')\">Number<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('number', 'Number', 'desc')\">Number<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('sent', 'Sent', 'asc')\">Sent<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('sent', 'Sent', 'desc')\">Sent<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('createdAt', 'Created at', 'asc')\">Created at<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('createdAt', 'Created at', 'desc')\">Created at<i class=\"fas fa-arrow-down\"></i></a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-between\">\n        <div>\n          <div *ngIf=\"list.length > 0\">\n            <input type=\"radio\" name=\"view-filter\" id=\"list-view\" class=\"view-radio\" (click)=\"setListViewFilter('list')\" [checked]=\"isShowListView('list')\">\n            <label for=\"list-view\"><i class=\"fa fa-th-list\"></i></label>\n            <input type=\"radio\" name=\"view-filter\" id=\"grid-view\" class=\"view-radio\" (click)=\"setListViewFilter('grid')\" [checked]=\"isShowListView('grid')\">\n            <label for=\"grid-view\"><i class=\"fa fa-th\"></i></label>\n            <input type=\"radio\" name=\"view-filter\" id=\"table-view\" class=\"view-radio\" (click)=\"setListViewFilter('table')\" [checked]=\"isShowListView('table')\">\n            <label for=\"table-view\"><i class=\"fa fa-list-alt\"></i></label>\n          </div>\n        </div>\n        <div>\n          <div class=\"total_counts\">\n            <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n            <a class=\"ml-3\" routerLink=\".\" (click)=\"onRefresh()\"><i class=\"fa fa-sync-alt\"></i></a>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n        <div *ngIf=\"totalPages > 1\">\n          <ul class=\"pagination justify-content-center\">\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n                <span aria-hidden=\"true\">&laquo;</span>\n                <span class=\"sr-only\">Previous</span>\n              </a>\n            </li>\n            <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n            </li>\n            <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n                <span class=\"sr-only\">Next</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n          <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-records\" *ngIf=\"list.length === 0\">\n    <span *ngIf=\"loaded\">No records found.</span>\n    <span *ngIf=\"!loaded\">Loading...</span>\n  </div>\n  <div *ngIf=\"list.length > 0\">\n    <div class=\"listview\" *ngIf=\"isShowListView('list')\">\n      <div class=\"list-block\" *ngFor=\"let detail of list;  let i = index; let list_index = index;\">\n        <hr *ngIf=\"i==0\" class=\"list-devider\">\n        <div class=\"list-card text-left\" [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i],\n\t\t\t\t\t\t\t'clickable-card': clickItemAction}\">\n          <div class=\"list-fields\" [ngClass]=\"{pointer: clickItemAction}\" (click)=\"clickOneItem(i)\">\n            <div class=\"list-body-fields\">\n              <h5>\n                <div class=\"mr-1 d-inline-block\">\n                  {{detail['subject']}}\n                </div>\n              </h5>\n              <div>\n                <div *ngIf=\"fieldHasValue(detail['processed'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Processed:</label></div>\n                  <div class=\"ml-3\">{{detail['processed']}}\n                  </div>\n                </div>\n                <div *ngIf=\"fieldHasValue(detail['number'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Number:</label></div>\n                  <div class=\"ml-3\">\n                    {{detail['number']}}\n                  </div>\n                </div>\n                <div *ngIf=\"fieldHasValue(detail['sent'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Sent:</label></div>\n                  <div class=\"ml-3\">\n                    {{detail['sent']}}\n                  </div>\n                </div>\n                <div *ngIf=\"fieldHasValue(detail['createdAt'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Created at:</label></div>\n                  <div class=\"ml-3\"> {{detail['createdAt']? (detail['createdAt']['originalValue'] | date:'medium') : ''}}\n                  </div>\n                </div>\n              </div>\n              <div class=\"d-flex flex-row mt-1\">\n              </div>\n            </div>\n          </div>\n          <div class=\"card-action-icons\">\n            <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n          </div>\n        </div>\n        <hr class=\"list-devider\">\n      </div>\n    </div>\n    <div class=\"gridview\" *ngIf=\"isShowListView('grid')\">\n      <div class=\"grid-block\" *ngFor=\"let detail of list;  let i = index; let list_index = index;\">\n        <div class=\"card text-left h-100\" [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i],\n\t\t\t\t\t\t\t'clickable-card': clickItemAction}\">\n          <div class=\"grid-fields\" [ngClass]=\"{pointer: clickItemAction}\" (click)=\"clickOneItem(i)\">\n            <div class=\"card-header grid-head\">\n              <div>\n                <h5>\n                  <div class=\"mr-1 d-inline-block\">\n                    {{detail['subject']}}\n                  </div>\n                </h5>\n              </div>\n            </div>\n            <div class=\"card-body\">\n              <div *ngIf=\"fieldHasValue(detail['processed'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>Processed:</label></div>\n                <div class=\"ml-3\">{{detail['processed']}} </div>\n              </div>\n              <div *ngIf=\"fieldHasValue(detail['number'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>Number:</label></div>\n                <div class=\"ml-3\">\n                  {{detail['number']}}</div>\n              </div>\n              <div *ngIf=\"fieldHasValue(detail['sent'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>Sent:</label></div>\n                <div class=\"ml-3\">\n                  {{detail['sent']}}</div>\n              </div>\n              <div *ngIf=\"fieldHasValue(detail['createdAt'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>Created at:</label></div>\n                <div class=\"ml-3\"> {{detail['createdAt']? (detail['createdAt']['originalValue'] | date:'medium') : ''}}</div>\n              </div>\n            </div>\n          </div>\n          <div class=\"card-action-icons\">\n            <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n          </div>\n        </div>\n      </div>\n    </div>\n    <table *ngIf=\"isShowListView('table')\" class=\"table table-bordered table-hover\">\n      <thead class=\"thead-light\">\n        <tr>\n          <th scope=\"col\">#</th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('subject', 'Subject')\"> Subject <span *ngIf=\"listSortField === 'subject'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('processed', 'Processed')\"> Processed <span *ngIf=\"listSortField === 'processed'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('number', 'Number')\"> Number <span *ngIf=\"listSortField === 'number'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('sent', 'Sent')\"> Sent <span *ngIf=\"listSortField === 'sent'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('createdAt', 'Created at')\"> Created at <span *ngIf=\"listSortField === 'createdAt'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th scope=\"col\" style=\"width:3.8rem;\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        <ng-template ngFor let-detail [ngForOf]=\"list\" let-i=\"index\">\n          <tr [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i]}\">\n            <td scope=\"row\" (click)=\"clickOneItem(i)\" class=\"pointer read-more mt-3\">\n              {{(page-1)*perPage+i+1}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['subject']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['processed']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['number']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['sent']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['createdAt']? (detail['createdAt']['originalValue'] | date:'medium') : ''}}\n            </td>\n            <td>\n              <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n            </td>\n          </tr>\n        </ng-template>\n      </tbody>\n    </table>\n  </div>\n  <div class=\"container\">\n    <div *ngIf=\"!options['disablePagination']\">\n      <div class=\"row justify-content-end mt-3\">\n      </div>\n      <div class=\"d-flex justify-content-between\">\n        <div>\n        </div>\n        <div>\n          <div class=\"total_counts\">\n            <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n        <div *ngIf=\"totalPages > 1\">\n          <ul class=\"pagination justify-content-center\">\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n                <span aria-hidden=\"true\">&laquo;</span>\n                <span class=\"sr-only\">Previous</span>\n              </a>\n            </li>\n            <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n            </li>\n            <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n                <span class=\"sr-only\">Next</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n          <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import {\n  HttpClient\n} from '@angular/common/http';\nimport {\n  MddsBaseService\n} from '@hicoder/angular-core';\nconst servicePath = '/emailqueue/';\nexport class EmailqueueBaseService extends MddsBaseService {\n  constructor(http: HttpClient, serverRootUrl: string) {\n    const serviceUrl = serverRootUrl + servicePath;\n    super(http, serviceUrl);\n  }\n}","import {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  MddsBaseComponent,\n  ViewType\n} from '@hicoder/angular-core';\nimport {\n  Component,\n  OnInit,\n  Injector,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  EmailqueueService\n} from './emailqueue.service';\nconst itemCamelName = 'email Queue';\nexport {\n  ViewType\n};\n@Component({\n  template: '',\n})\nexport class EmailqueueComponent extends MddsBaseComponent implements OnInit {\n  // *** common input fields\n  @Input()\n  public style: any; // {}\n  @Input()\n  public options: any; // {} uiOptions\n  @Input()\n  public searchObj: any;\n  // *** list component\n  @Input()\n  public inputData: any;\n  @Input()\n  public queryParams: any; // {listSortField: 'a', listSortOrder: 'asc' / 'desc', perPage: 6}\n  @Input()\n  public categoryBy: string; //field name whose value is used as category\n  // list-asso component\n  @Input('asso') public associationField: string;\n  // list select component\n  @Output() outputData: any;\n  // *** edit / create component\n  @Input()\n  public id: string;\n  @Input()\n  public cid: string; // copy id\n  @Input()\n  public initData: any; // some fields has data already. eg: {a: b}. Used for add\n  @Input()\n  public embeddedView: boolean;\n  @Input()\n  public embedMode: string; // parent to tell the action - create\n  @Output()\n  public doneData = new EventEmitter < boolean > ();\n  @Output()\n  public done = new EventEmitter < any > ();\n  // *** detail component\n  // @Input() \n  // public id:string;\n  @Input()\n  public disableActionButtions: boolean;\n  @Output()\n  public eventEmitter: EventEmitter < any > = new EventEmitter();\n  // detail sub component\n  // @Input() inputData;\n  // detail show field component\n  // @Input() id: string;\n  @Input() detailObj: any;\n  @Input() showFieldsStr: string;\n  // detail sel component\n  //@Input() inputData;\n  //@Output() outputData;\n  // detail pop component\n  // @Input() inputData;\n  // @Output() outputData;\n  constructor(public emailqueueService: EmailqueueService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(emailqueueService, injector, router, route, location);\n    this.setItemNames(itemCamelName);\n    this.briefFieldsInfo = [];\n    this.briefFieldsInfo.push(['subject', 'Subject']);\n    this.briefFieldsInfo.push(['processed', 'Processed']);\n    this.briefFieldsInfo.push(['number', 'Number']);\n    this.briefFieldsInfo.push(['sent', 'Sent']);\n    this.briefFieldsInfo.push(['createdAt', 'Created at']);\n    this.schemaName = 'emailqueue';\n    this.dateFormat = 'MM-DD-YYYY';\n    this.timeFormat = 'hh:mm:ss';\n    this.modulePath = 'emailing';\n    this.indexFields = ['subject', ];\n  }\n  ngOnInit() {\n    this.style = this.style || {};\n    this.options = this.options || {};\n  }\n}","import {\n  Injectable,\n  Inject,\n  OnDestroy,\n  SkipSelf\n} from '@angular/core';\nimport {\n  HttpClient\n} from '@angular/common/http';\nimport {\n  EmailqueueBaseService\n} from './emailqueue.base.service';\nimport {\n  Emailing_SERVER_ROOT_URI\n} from '../emailing.tokens';\n@Injectable({\n  providedIn: 'root',\n})\nexport class EmailqueueService extends EmailqueueBaseService implements OnDestroy {\n  constructor(http: HttpClient, @Inject(Emailing_SERVER_ROOT_URI) private emailingServerRootUri: string) {\n    super(http, emailingServerRootUri);\n  }\n  ngOnDestroy() {}\n}","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  EmailsettingsComponent,\n  ViewType\n} from '../emailsettings.component';\nimport {\n  EmailsettingsService\n} from '../emailsettings.service';\n@Component({\n  selector: 'app-emailsettings-detail-field',\n  templateUrl: './emailsettings-detail-field.component.html',\n  styleUrls: ['./emailsettings-detail.component.css']\n})\nexport class EmailsettingsDetailFieldComponent extends EmailsettingsComponent\nimplements OnInit {\n  // @Input() id: string;\n  // @Input() detailObj: any;\n  // @Input() showFieldsStr: string;\n  showFields: string[];\n  constructor(public emailsettingsService: EmailsettingsService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(emailsettingsService, injector, router, route, location);\n    this.view = ViewType.DETAIL;\n    this.fieldDisplayNames = {\n      'settingName': 'Setting Name',\n      'defaultSender': 'Default Sender Email Address',\n    };\n    this.stringFields.push('settingName');\n    this.stringFields.push('defaultSender');\n  }\n  ngOnInit() {\n    if (!this.showFieldsStr) {\n      console.error(\"A field has to be given to show it.\");\n      return;\n    }\n    this.showFields = this.showFieldsStr.match(/\\S+/g);\n    if (this.detailObj) {\n      this.onDetailReturned(this.detailObj, null);\n    } else {\n      if (!this.id) this.id = this.id;\n      if (this.id) this.populateDetail(this.id);\n      else {\n        console.error(\"No id provided to show info\");\n        return;\n      }\n    }\n  }\n}","<div *ngIf=\"detail && showFields.includes('settingName')\">\n  {{detail['settingName']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('defaultSender')\">\n  {{detail['defaultSender']}}\n</div>","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  EmailsettingsDetailCustComponent\n} from '../../../emailing-cust/base/emailsettings/emailsettings-detail.cust.component';\nimport {\n  ViewType\n} from '../emailsettings.component';\nimport {\n  EmailsettingsService\n} from '../emailsettings.service';\n@Component({\n  selector: 'app-emailsettings-detail',\n  templateUrl: './emailsettings-detail.component.html',\n  styleUrls: ['./emailsettings-detail.component.css']\n})\nexport class EmailsettingsDetailComponent extends EmailsettingsDetailCustComponent implements OnInit, AfterViewInit {\n  // @Input() \n  // public id:string;\n  // @Input()\n  // public searchObj:any;\n  // @Input()\n  // public disableActionButtions:boolean;\n  // @Output()\n  // public eventEmitter: EventEmitter<any> = new EventEmitter();\n  constructor(public emailsettingsService: EmailsettingsService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(emailsettingsService, injector, router, route, location);\n    this.view = ViewType.DETAIL;\n    this.fieldDisplayNames = {\n      'settingName': 'Setting Name',\n      'defaultSender': 'Default Sender Email Address',\n    };\n    this.stringFields.push('settingName');\n    this.stringFields.push('defaultSender');\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    if (!this.id) this.id = this.route.snapshot.paramMap.get('id');\n    if (this.id) {\n      this.populateDetail(this.id);\n    } else if (this.searchObj) {\n      // search item based on the unique value\n      this.populateDetailByFields(this.searchObj);\n    } else {\n      console.error(\"Routing error for detail view... no id...\");\n      return;\n    }\n  }\n  ngAfterViewInit() {}\n}","<div class=\"detail\" *ngIf=\"detail\">\n  <div *ngIf=\"!options['disableActionButtions']\">\n    <div *ngIf=\"!disableActionButtions && !options['disableActionButtions']\" class=\"action-buttons\">\n      <a *ngIf=\"!options['disableActionList']\" routerLink=\"../../list\" class=\"action-go-list\"><i class=\"fas fa-list\" title=\"List\"></i><!--  span>&nbsp;&nbsp;{{ItemCamelName}} List</span--></a>\n      <a *ngIf=\"!options['disableActionEdit']\" [routerLink]=\"['../../edit', detail['_id'] ]\" [skipLocationChange]=\"false\" class=\"btn btn-outline-primary\">Edit</a>\n    </div>\n  </div>\n  <div class=\"card text-left transparent-border \">\n    <div class=\"grid-fields\">\n      <div class=\"card-header grid-head\">\n        <div class=\"ml-1\">\n          <h5>\n            <div class=\"mr-1 d-inline-block\">\n              {{detail['settingName']}}\n            </div>\n          </h5>\n        </div>\n      </div>\n      <div class=\"card-body\">\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Default Sender Email Address:</label></div>\n            <div class=\"ml-3\">\n              {{detail['defaultSender']}}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"!options['disablePipeline']\">\n  </div>\n  <div *ngIf=\"!options['disableRefLink']\">\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  Directive,\n  EventEmitter\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\ndeclare const $: any;\nimport {\n  EmailsettingsEditCustComponent\n} from '../../../emailing-cust/base/emailsettings/emailsettings-edit.cust.component';\nimport {\n  ViewType\n} from '../emailsettings.component';\nimport {\n  EmailsettingsService\n} from '../emailsettings.service';\n@Component({\n  selector: 'app-emailsettings-edit',\n  templateUrl: './emailsettings-edit.component.html',\n  styleUrls: ['./emailsettings-edit.component.css']\n})\nexport class EmailsettingsEditComponent extends EmailsettingsEditCustComponent implements OnInit, AfterViewInit {\n  // @Input() \n  // public id: string;\n  // @Input()\n  // public cid: string; // copy id\n  // @Input()\n  // public initData: any; // some fields has data already. eg: {a: b}. Used for add\n  // @Output()\n  // public doneData = new EventEmitter<boolean>();\n  // @Output()\n  // public done = new EventEmitter<any>();\n  // @Input()\n  // public embeddedView: boolean;\n  // @Input()\n  // public embedMode: string; // parent to tell the action - create\n  public action: string;\n  public minDate = {\n    year: (new Date()).getFullYear() - 100,\n    month: 1,\n    day: 1\n  };\n  constructor(public emailsettingsService: EmailsettingsService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(emailsettingsService, injector, router, route, location);\n    this.view = ViewType.EDIT;\n    this.fieldDisplayNames = {\n      'defaultSender': 'Default Sender Email Address',\n    };\n    this.stringFields.push('defaultSender');\n    const detail = {};\n    this.detail = this.formatDetail(detail);\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.embedMode == 'create') { // parent ask to create\n      this.action = 'Create';\n      this.getDetailData();\n    } else {\n      if (!this.id) this.id = this.route.snapshot.paramMap.get('id');\n      if (this.id) {\n        this.action = 'Edit';\n        this.populateDetailForAction(this.id, 'edit'); //populate with action as 'edit'\n      } else {\n        this.action = 'Create';\n        if (!this.cid) this.cid = this.route.snapshot.queryParamMap.get('cid');\n        if (this.cid) {\n          this.populateDetailFromCopy(this.cid);\n        } else {\n          this.getDetailData();\n        }\n      }\n    }\n    // get editHintFields\n    this.searchHintFieldValues();\n  }\n  ngAfterViewInit() {\n    // Initialize all tooltips\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n  getDetailData() {\n    if (this.initData) {\n      this.action = 'Add';\n      let detail = {};\n      for (let prop of Object.keys(this.initData)) {\n        detail[prop] = this.initData[prop];\n        this.hiddenFields.push(prop);\n      }\n      this.detail = this.formatDetail(detail);\n    } else {\n      let detail = {};\n      this.detail = this.formatDetail(detail);\n    }\n  }\n}","<div class=\"edit\" *ngIf=\"detail\">\n  <div class=\"card\" style=\"text-align: left;\">\n    <div class=\"card-body\">\n      <h4 class=\"card-title\" *ngIf=\"!embeddedView && !options['title']\">{{action}} Email Settings</h4>\n      <h4 class=\"card-title\" *ngIf=\"options['title']\" [ngStyle]=\"style['card-title']\">\n        {{options['title']}}\n      </h4>\n      <p *ngIf=\"options['subtitle']\" [ngStyle]=\"style['card-subtitle']\">\n        {{options['subtitle']}}\n      </p>\n      <form (ngSubmit)=\"onSubmit()\" #editForm=\"ngForm\">\n        <ng-template [ngIf]=\"action == 'Edit'\">\n          <ng-template [ngIf]=\"!hiddenFields.includes('defaultSender')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditDefaultSender\">Default Sender Email Address</label><span><i data-toggle=\"tooltip\" title=\"Default sender email address. Must be validated by email service for it to take effect.\" class=\"far fa-question-circle\"></i></span>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditDefaultSender\" required [(ngModel)]=\"detail['defaultSender']\" name=\"EditDefaultSender\" #EditDefaultSender=\"ngModel\">\n                <div *ngIf=\"detail['defaultSender']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('defaultSender')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditDefaultSender.valid || EditDefaultSender.pristine || EditDefaultSender.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditDefaultSender.errors && EditDefaultSender.errors.required\"> DefaultSender is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n        </ng-template>\n        <ng-template [ngIf]=\"action == 'Create' || action == 'Add' \">\n          <ng-template [ngIf]=\"!hiddenFields.includes('settingName')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditSettingName\">Setting Name</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditSettingName\" required [(ngModel)]=\"detail['settingName']\" name=\"EditSettingName\" #EditSettingName=\"ngModel\">\n                <div *ngIf=\"detail['settingName']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('settingName')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditSettingName.valid || EditSettingName.pristine || EditSettingName.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditSettingName.errors && EditSettingName.errors.required\"> SettingName is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('defaultSender')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditDefaultSender\">Default Sender Email Address</label>\n              <span><i data-toggle=\"tooltip\" title=\"Default sender email address. Must be validated by email service for it to take effect.\" class=\"far fa-question-circle\"></i></span>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditDefaultSender\" required [(ngModel)]=\"detail['defaultSender']\" name=\"EditDefaultSender\" #EditDefaultSender=\"ngModel\">\n                <div *ngIf=\"detail['defaultSender']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('defaultSender')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditDefaultSender.valid || EditDefaultSender.pristine || EditDefaultSender.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditDefaultSender.errors && EditDefaultSender.errors.required\"> DefaultSender is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n        </ng-template>\n        <div class=\"action-buttons-center\">\n          <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!editForm.form.valid\">Submit</button>\n          <button *ngIf=\"!options['disableCancel']\" class=\"btn btn-outline-success\" type=\"button\" (click)=\"editCancel()\">Cancel</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  EmailsettingsListCustComponent\n} from '../../../emailing-cust/base/emailsettings/emailsettings-list.cust.component';\nimport {\n  ViewType\n} from '../emailsettings.component';\nimport {\n  EmailsettingsService\n} from '../emailsettings.service';\n@Component({\n  selector: 'app-emailsettings-list',\n  templateUrl: './emailsettings-list.component.html',\n  styleUrls: ['./emailsettings-list.component.css']\n})\nexport class EmailsettingsListComponent extends EmailsettingsListCustComponent implements OnInit {\n  // @Input() options: any; {disableCatetory: false, disablePagination: false, disbleActionButtons: false\n  //                        disableListSearch: false, disableTitle: false, disableRefs: false\n  //                        disableListHead: false, disableTitleRow: false}\n  // @Input()\n  // public inputData:any;\n  // @Input()\n  // public searchObj:any;\n  // @Input()\n  // public queryParams: any;  // {listSortField: 'a', listSortOrder: 'asc' / 'desc', perPage: 6}\n  // @Input()\n  // public categoryBy:string; //field name whose value is used as category\n  constructor(public emailsettingsService: EmailsettingsService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(emailsettingsService, injector, router, route, location);\n    this.view = ViewType.LIST;\n    this.fieldDisplayNames = {\n      'settingName': 'Setting Name',\n      'defaultSender': 'Default Sender Email Address',\n    };\n    this.stringFields.push('settingName');\n    this.stringFields.push('defaultSender');\n    this.listViewFilter = 'list';\n    const listCategories = [];\n    this.listCategory1 = listCategories[0] || {};\n    this.listCategory2 = listCategories[1] || {};\n    this.clickItemAction = 'detail';\n    this.itemMultiSelect = true;\n    // initialize detail structure for search\n    let detail = {};\n    this.detail = this.formatDetail(detail);\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    this.adjustListViewForWindowSize();\n    this.clickItemAction = typeof this.options.clickItemAction === 'undefined' ? this.clickItemAction : this.options.clickItemAction;\n    this.itemMultiSelect = typeof this.options.itemMultiSelect === 'boolean' ? this.options.itemMultiSelect : this.itemMultiSelect;\n    if (!this.options) {\n      this.options = {};\n    }\n    if (this.options.disableCatetory) {\n      this.listCategory1 = {}; // no do query based on category for home view;\n      this.listCategory2 = {}; // no do query based on category for home view;\n    }\n    // this is to initialize the detail that will be used for search condition selection\n    let detail = {};\n    if (this.searchObj) {\n      this.searchDetailReady = true; // search provided from \"detail\", not from search bar.\n      detail = this.searchObj;\n    }\n    if (this.queryParams) {\n      this.listSortField = this.queryParams.listSortField;\n      this.listSortOrder = this.queryParams.listSortOrder;\n      if (this.queryParams.perPage) {\n        this.perPage = this.queryParams.perPage\n      }\n    }\n    this.detail = this.formatDetail(detail);\n    this.searchList();\n    // get editHintFields\n    this.searchHintFieldValues();\n  }\n  static getInstance() {\n    //used by others to call some common functions\n    return new EmailsettingsListComponent(null, null, null, null, null);\n  }\n}","<div class=\"mt-4 mb-4 d-flex\" *ngIf=\"!options['disableTitleRow']\">\n</div>\n<ul *ngIf=\"listCategory1.listCategoryField\" class=\"nav nav-pills category-nav\">\n  <li *ngFor=\"let ele of categoryDisplays; let idx = index;\" class=\"nav-item\">\n    <a *ngIf=\" listCategory1.showEmptyCategory || (!listCategory1.showEmptyCategory && categoriesCounts[idx] > 0)\" class=\"nav-link\" [ngClass]=\"{'active': idx === selectedCategory }\" [routerLink]=\"['.']\" queryParamsHandling=\"preserve\" (click)=\"categorySelected(idx)\">\n      {{ele}} <span *ngIf=\"listCategory1.showCategoryCounts\">({{categoriesCounts[idx]}})</span>\n    </a>\n  </li>\n</ul>\n<div>\n  <div *ngIf=\"!options['disableListHead']\" class=\"container search\">\n    <div class=\"row\" *ngIf=\"!options['disableListSearch']\">\n      <div class=\"col\">\n        <div class=\"input-group\">\n          <input type=\"search\" class=\"form-control border border-secondary\" id=\"emailsettingsTextSearch\" #emailsettingsTextSearch [(ngModel)]=\"searchText\" (search)=\"$event.target.blur();searchList();\" placeholder=\"Search for setting name, default sender email address\">\n          <div *ngIf=\"searchText\" class=\"input-group-append icon-search-clear\">\n            <span>\n              <i class=\"fas fa-times-circle\" (click)=\"onSearchTextClear()\" title=\"Clear\"></i>\n            </span>\n          </div>\n          <div class=\"input-group-append\">\n            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"searchList()\"><i class=\"fas fa-search\"></i></button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"!options['disableActionButtions']\">\n      <div class=\"col\">\n        <div class=\"action-buttons\">\n        </div>\n      </div>\n    </div>\n    <hr />\n    <div *ngIf=\"!options['disablePagination']\">\n      <div class=\"row justify-content-end mt-3\">\n        <div *ngIf=\"list.length > 2\" class=\"sort-selection mr-5\">\n          <div class=\"dropdown\" style=\"width: 100%;\">\n            <button class=\"sort-dropdown btn btn-light btn-sm dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> Sort: <span *ngIf=\"listSortField && !viewHiddenFields.includes(listSortField)\">{{listSortFieldDisplay}}\n                <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up\"></i>\n                <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down\"></i>\n              </span>\n            </button>\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('settingName', 'Setting Name', 'asc')\">Setting Name<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('settingName', 'Setting Name', 'desc')\">Setting Name<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('defaultSender', 'Default Sender Email Address', 'asc')\">Default Sender Email Address<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('defaultSender', 'Default Sender Email Address', 'desc')\">Default Sender Email Address<i class=\"fas fa-arrow-down\"></i></a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-between\">\n        <div>\n          <div *ngIf=\"list.length > 0\">\n            <input type=\"radio\" name=\"view-filter\" id=\"list-view\" class=\"view-radio\" (click)=\"setListViewFilter('list')\" [checked]=\"isShowListView('list')\">\n            <label for=\"list-view\"><i class=\"fa fa-th-list\"></i></label>\n            <input type=\"radio\" name=\"view-filter\" id=\"grid-view\" class=\"view-radio\" (click)=\"setListViewFilter('grid')\" [checked]=\"isShowListView('grid')\">\n            <label for=\"grid-view\"><i class=\"fa fa-th\"></i></label>\n            <input type=\"radio\" name=\"view-filter\" id=\"table-view\" class=\"view-radio\" (click)=\"setListViewFilter('table')\" [checked]=\"isShowListView('table')\">\n            <label for=\"table-view\"><i class=\"fa fa-list-alt\"></i></label>\n          </div>\n        </div>\n        <div>\n          <div class=\"total_counts\">\n            <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n            <a class=\"ml-3\" routerLink=\".\" (click)=\"onRefresh()\"><i class=\"fa fa-sync-alt\"></i></a>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n        <div *ngIf=\"totalPages > 1\">\n          <ul class=\"pagination justify-content-center\">\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n                <span aria-hidden=\"true\">&laquo;</span>\n                <span class=\"sr-only\">Previous</span>\n              </a>\n            </li>\n            <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n            </li>\n            <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n                <span class=\"sr-only\">Next</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n          <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-records\" *ngIf=\"list.length === 0\">\n    <span *ngIf=\"loaded\">No records found.</span>\n    <span *ngIf=\"!loaded\">Loading...</span>\n  </div>\n  <div *ngIf=\"list.length > 0\">\n    <div class=\"listview\" *ngIf=\"isShowListView('list')\">\n      <div class=\"list-block\" *ngFor=\"let detail of list;  let i = index; let list_index = index;\">\n        <hr *ngIf=\"i==0\" class=\"list-devider\">\n        <div class=\"list-card text-left\" [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i],\n\t\t\t\t\t\t\t'clickable-card': clickItemAction}\">\n          <div class=\"list-fields\" [ngClass]=\"{pointer: clickItemAction}\" (click)=\"clickOneItem(i)\">\n            <div class=\"list-body-fields\">\n              <h5>\n                <div class=\"mr-1 d-inline-block\">\n                  {{detail['settingName']}}\n                </div>\n              </h5>\n              <div>\n                <div *ngIf=\"fieldHasValue(detail['defaultSender'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Default Sender Email Address:</label></div>\n                  <div class=\"ml-3\">\n                    {{detail['defaultSender']}}\n                  </div>\n                </div>\n              </div>\n              <div class=\"d-flex flex-row mt-1\">\n              </div>\n            </div>\n          </div>\n          <div class=\"card-action-icons\">\n            <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n          </div>\n        </div>\n        <hr class=\"list-devider\">\n      </div>\n    </div>\n    <div class=\"gridview\" *ngIf=\"isShowListView('grid')\">\n      <div class=\"grid-block\" *ngFor=\"let detail of list;  let i = index; let list_index = index;\">\n        <div class=\"card text-left h-100\" [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i],\n\t\t\t\t\t\t\t'clickable-card': clickItemAction}\">\n          <div class=\"grid-fields\" [ngClass]=\"{pointer: clickItemAction}\" (click)=\"clickOneItem(i)\">\n            <div class=\"card-header grid-head\">\n              <div>\n                <h5>\n                  <div class=\"mr-1 d-inline-block\">\n                    {{detail['settingName']}}\n                  </div>\n                </h5>\n              </div>\n            </div>\n            <div class=\"card-body\">\n              <div *ngIf=\"fieldHasValue(detail['defaultSender'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>Default Sender Email Address:</label></div>\n                <div class=\"ml-3\">\n                  {{detail['defaultSender']}}</div>\n              </div>\n            </div>\n          </div>\n          <div class=\"card-action-icons\">\n            <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n          </div>\n        </div>\n      </div>\n    </div>\n    <table *ngIf=\"isShowListView('table')\" class=\"table table-bordered table-hover\">\n      <thead class=\"thead-light\">\n        <tr>\n          <th scope=\"col\">#</th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('settingName', 'Setting Name')\"> Setting Name <span *ngIf=\"listSortField === 'settingName'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('defaultSender', 'Default Sender Email Address')\"> Default Sender Email Address <span *ngIf=\"listSortField === 'defaultSender'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th scope=\"col\" style=\"width:3.8rem;\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        <ng-template ngFor let-detail [ngForOf]=\"list\" let-i=\"index\">\n          <tr [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i]}\">\n            <td scope=\"row\" (click)=\"clickOneItem(i)\" class=\"pointer read-more mt-3\">\n              {{(page-1)*perPage+i+1}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['settingName']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['defaultSender']}}\n            </td>\n            <td>\n              <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n            </td>\n          </tr>\n        </ng-template>\n      </tbody>\n    </table>\n  </div>\n  <div class=\"container\">\n    <div *ngIf=\"!options['disablePagination']\">\n      <div class=\"row justify-content-end mt-3\">\n      </div>\n      <div class=\"d-flex justify-content-between\">\n        <div>\n        </div>\n        <div>\n          <div class=\"total_counts\">\n            <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n        <div *ngIf=\"totalPages > 1\">\n          <ul class=\"pagination justify-content-center\">\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n                <span aria-hidden=\"true\">&laquo;</span>\n                <span class=\"sr-only\">Previous</span>\n              </a>\n            </li>\n            <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n            </li>\n            <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n                <span class=\"sr-only\">Next</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n          <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import {\n  HttpClient\n} from '@angular/common/http';\nimport {\n  MddsBaseService\n} from '@hicoder/angular-core';\nconst servicePath = '/emailsettings/';\nexport class EmailsettingsBaseService extends MddsBaseService {\n  constructor(http: HttpClient, serverRootUrl: string) {\n    const serviceUrl = serverRootUrl + servicePath;\n    super(http, serviceUrl);\n  }\n}","import {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  MddsBaseComponent,\n  ViewType\n} from '@hicoder/angular-core';\nimport {\n  Component,\n  OnInit,\n  Injector,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  EmailsettingsService\n} from './emailsettings.service';\nconst itemCamelName = 'email Settings';\nexport {\n  ViewType\n};\n@Component({\n  template: '',\n})\nexport class EmailsettingsComponent extends MddsBaseComponent implements OnInit {\n  // *** common input fields\n  @Input()\n  public style: any; // {}\n  @Input()\n  public options: any; // {} uiOptions\n  @Input()\n  public searchObj: any;\n  // *** list component\n  @Input()\n  public inputData: any;\n  @Input()\n  public queryParams: any; // {listSortField: 'a', listSortOrder: 'asc' / 'desc', perPage: 6}\n  @Input()\n  public categoryBy: string; //field name whose value is used as category\n  // list-asso component\n  @Input('asso') public associationField: string;\n  // list select component\n  @Output() outputData: any;\n  // *** edit / create component\n  @Input()\n  public id: string;\n  @Input()\n  public cid: string; // copy id\n  @Input()\n  public initData: any; // some fields has data already. eg: {a: b}. Used for add\n  @Input()\n  public embeddedView: boolean;\n  @Input()\n  public embedMode: string; // parent to tell the action - create\n  @Output()\n  public doneData = new EventEmitter < boolean > ();\n  @Output()\n  public done = new EventEmitter < any > ();\n  // *** detail component\n  // @Input() \n  // public id:string;\n  @Input()\n  public disableActionButtions: boolean;\n  @Output()\n  public eventEmitter: EventEmitter < any > = new EventEmitter();\n  // detail sub component\n  // @Input() inputData;\n  // detail show field component\n  // @Input() id: string;\n  @Input() detailObj: any;\n  @Input() showFieldsStr: string;\n  // detail sel component\n  //@Input() inputData;\n  //@Output() outputData;\n  // detail pop component\n  // @Input() inputData;\n  // @Output() outputData;\n  constructor(public emailsettingsService: EmailsettingsService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(emailsettingsService, injector, router, route, location);\n    this.setItemNames(itemCamelName);\n    this.briefFieldsInfo = [];\n    this.briefFieldsInfo.push(['settingName', 'Setting Name']);\n    this.briefFieldsInfo.push(['defaultSender', 'Default Sender Email Address']);\n    this.requiredFields = ['defaultSender', 'settingName', ];\n    this.schemaName = 'emailsettings';\n    this.modulePath = 'emailing';\n    this.indexFields = ['settingName', ];\n  }\n  ngOnInit() {\n    this.style = this.style || {};\n    this.options = this.options || {};\n  }\n}","import {\n  Injectable,\n  Inject,\n  OnDestroy,\n  SkipSelf\n} from '@angular/core';\nimport {\n  HttpClient\n} from '@angular/common/http';\nimport {\n  EmailsettingsBaseService\n} from './emailsettings.base.service';\nimport {\n  Emailing_SERVER_ROOT_URI\n} from '../emailing.tokens';\n@Injectable({\n  providedIn: 'root',\n})\nexport class EmailsettingsService extends EmailsettingsBaseService implements OnDestroy {\n  constructor(http: HttpClient, @Inject(Emailing_SERVER_ROOT_URI) private emailingServerRootUri: string) {\n    super(http, emailingServerRootUri);\n  }\n  ngOnDestroy() {}\n}","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  EmailtemplateComponent,\n  ViewType\n} from '../emailtemplate.component';\nimport {\n  EmailtemplateService\n} from '../emailtemplate.service';\n@Component({\n  selector: 'app-emailtemplate-detail-field',\n  templateUrl: './emailtemplate-detail-field.component.html',\n  styleUrls: ['./emailtemplate-detail.component.css']\n})\nexport class EmailtemplateDetailFieldComponent extends EmailtemplateComponent\nimplements OnInit {\n  // @Input() id: string;\n  // @Input() detailObj: any;\n  // @Input() showFieldsStr: string;\n  showFields: string[];\n  constructor(public emailtemplateService: EmailtemplateService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(emailtemplateService, injector, router, route, location);\n    this.view = ViewType.DETAIL;\n    this.fieldDisplayNames = {\n      'templateName': 'Template Name',\n      'fromEmail': 'From Email',\n      'subject': 'Subject',\n      'content': 'Content',\n      'tag': 'Tag',\n    };\n    this.stringFields.push('templateName');\n    this.stringFields.push('fromEmail');\n    this.stringFields.push('subject');\n    this.stringFields.push('content');\n    this.stringFields.push('tag');\n  }\n  ngOnInit() {\n    if (!this.showFieldsStr) {\n      console.error(\"A field has to be given to show it.\");\n      return;\n    }\n    this.showFields = this.showFieldsStr.match(/\\S+/g);\n    if (this.detailObj) {\n      this.onDetailReturned(this.detailObj, null);\n    } else {\n      if (!this.id) this.id = this.id;\n      if (this.id) this.populateDetail(this.id);\n      else {\n        console.error(\"No id provided to show info\");\n        return;\n      }\n    }\n  }\n}","<div *ngIf=\"detail && showFields.includes('templateName')\">\n  {{detail['templateName']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('fromEmail')\">\n  {{detail['fromEmail']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('subject')\">\n  {{detail['subject']}}\n</div>\n<div *ngIf=\"detail && showFields.includes('content')\">\n  <div libMddsRichtextShow=\"emailtemplateDetailContent\" [content]=\"detail['content']\"></div>\n</div>\n<div *ngIf=\"detail && showFields.includes('tag')\">\n  {{detail['tag']}}\n</div>","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  EmailtemplateDetailCustComponent\n} from '../../../emailing-cust/base/emailtemplate/emailtemplate-detail.cust.component';\nimport {\n  ViewType\n} from '../emailtemplate.component';\nimport {\n  EmailtemplateService\n} from '../emailtemplate.service';\n@Component({\n  selector: 'app-emailtemplate-detail',\n  templateUrl: './emailtemplate-detail.component.html',\n  styleUrls: ['./emailtemplate-detail.component.css']\n})\nexport class EmailtemplateDetailComponent extends EmailtemplateDetailCustComponent implements OnInit, AfterViewInit {\n  // @Input() \n  // public id:string;\n  // @Input()\n  // public searchObj:any;\n  // @Input()\n  // public disableActionButtions:boolean;\n  // @Output()\n  // public eventEmitter: EventEmitter<any> = new EventEmitter();\n  constructor(public emailtemplateService: EmailtemplateService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(emailtemplateService, injector, router, route, location);\n    this.view = ViewType.DETAIL;\n    this.fieldDisplayNames = {\n      'templateName': 'Template Name',\n      'fromEmail': 'From Email',\n      'subject': 'Subject',\n      'content': 'Content',\n      'tag': 'Tag',\n    };\n    this.stringFields.push('templateName');\n    this.stringFields.push('fromEmail');\n    this.stringFields.push('subject');\n    this.stringFields.push('content');\n    this.stringFields.push('tag');\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    if (!this.id) this.id = this.route.snapshot.paramMap.get('id');\n    if (this.id) {\n      this.populateDetail(this.id);\n    } else if (this.searchObj) {\n      // search item based on the unique value\n      this.populateDetailByFields(this.searchObj);\n    } else {\n      console.error(\"Routing error for detail view... no id...\");\n      return;\n    }\n  }\n  ngAfterViewInit() {}\n}","<div class=\"detail\" *ngIf=\"detail\">\n  <div *ngIf=\"!options['disableActionButtions']\">\n    <div *ngIf=\"!disableActionButtions && !options['disableActionButtions']\" class=\"action-buttons\">\n      <a *ngIf=\"!options['disableActionList']\" routerLink=\"../../list\" class=\"action-go-list\"><i class=\"fas fa-list\" title=\"List\"></i><!--  span>&nbsp;&nbsp;{{ItemCamelName}} List</span--></a>\n      <a *ngIf=\"!options['disableActionEdit']\" [routerLink]=\"['../../edit', detail['_id'] ]\" [skipLocationChange]=\"false\" class=\"btn btn-outline-primary\">Edit</a>\n      <a *ngIf=\"!options['disableActionNew']\" [routerLink]=\"['../../new']\" [queryParams]=\"{cid: detail['_id']}\" [skipLocationChange]=\"false\" class=\"btn btn-outline-primary\">New</a>\n      <a *ngIf=\"!options['disableActionDelete']\" routerLink=\".\" class=\"btn btn-outline-primary\" (click)=\"onDelete(detail['_id'], null)\">Delete</a>\n      <a *ngIf=\"!options['disableActionArchive']\" routerLink=\".\" class=\"btn btn-outline-primary\" (click)=\"onArchive(detail['_id'], null, detail['archived'])\">\n        <ng-template [ngIf]=\"!detail['archived']\">Archive</ng-template>\n        <ng-template [ngIf]=\"detail['archived']\">Unarchive</ng-template>\n      </a>\n    </div>\n  </div>\n  <div class=\"card text-left transparent-border \">\n    <div class=\"grid-fields\">\n      <div class=\"card-header grid-head\">\n        <div class=\"ml-1\">\n          <h5>\n            <div class=\"mr-1 d-inline-block\">\n              {{detail['templateName']}}\n            </div>\n          </h5>\n        </div>\n      </div>\n      <div class=\"card-body\">\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>From Email:</label></div>\n            <div class=\"ml-3\">\n              {{detail['fromEmail']}}</div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Subject:</label></div>\n            <div class=\"ml-3\">\n              {{detail['subject']}}</div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Content:</label></div>\n            <div class=\"ml-3\">\n              <div libMddsRichtextShow=\"emailtemplateDetailContent\" [content]=\"detail['content']\"></div>\n            </div>\n          </div>\n        </div>\n        <div>\n          <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 160px;\">\n            <div><label>Tag:</label></div>\n            <div class=\"ml-3\">\n              {{detail['tag']}}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"!options['disablePipeline']\">\n  </div>\n  <div *ngIf=\"!options['disableRefLink']\">\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  Input,\n  Output,\n  Directive,\n  EventEmitter\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\ndeclare const $: any;\nimport {\n  EmailtemplateEditCustComponent\n} from '../../../emailing-cust/base/emailtemplate/emailtemplate-edit.cust.component';\nimport {\n  ViewType\n} from '../emailtemplate.component';\nimport {\n  EmailtemplateService\n} from '../emailtemplate.service';\n@Component({\n  selector: 'app-emailtemplate-edit',\n  templateUrl: './emailtemplate-edit.component.html',\n  styleUrls: ['./emailtemplate-edit.component.css']\n})\nexport class EmailtemplateEditComponent extends EmailtemplateEditCustComponent implements OnInit, AfterViewInit {\n  // @Input() \n  // public id: string;\n  // @Input()\n  // public cid: string; // copy id\n  // @Input()\n  // public initData: any; // some fields has data already. eg: {a: b}. Used for add\n  // @Output()\n  // public doneData = new EventEmitter<boolean>();\n  // @Output()\n  // public done = new EventEmitter<any>();\n  // @Input()\n  // public embeddedView: boolean;\n  // @Input()\n  // public embedMode: string; // parent to tell the action - create\n  public action: string;\n  public minDate = {\n    year: (new Date()).getFullYear() - 100,\n    month: 1,\n    day: 1\n  };\n  constructor(public emailtemplateService: EmailtemplateService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(emailtemplateService, injector, router, route, location);\n    this.view = ViewType.EDIT;\n    this.fieldDisplayNames = {\n      'templateName': 'Template Name',\n      'fromEmail': 'From Email',\n      'subject': 'Subject',\n      'content': 'Content',\n      'tag': 'Tag',\n    };\n    this.stringFields.push('templateName');\n    this.stringFields.push('fromEmail');\n    this.stringFields.push('subject');\n    this.stringFields.push('content');\n    this.stringFields.push('tag');\n    const detail = {};\n    this.detail = this.formatDetail(detail);\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.embedMode == 'create') { // parent ask to create\n      this.action = 'Create';\n      this.getDetailData();\n    } else {\n      if (!this.id) this.id = this.route.snapshot.paramMap.get('id');\n      if (this.id) {\n        this.action = 'Edit';\n        this.populateDetailForAction(this.id, 'edit'); //populate with action as 'edit'\n      } else {\n        this.action = 'Create';\n        if (!this.cid) this.cid = this.route.snapshot.queryParamMap.get('cid');\n        if (this.cid) {\n          this.populateDetailFromCopy(this.cid);\n        } else {\n          this.getDetailData();\n        }\n      }\n    }\n    // get editHintFields\n    this.searchHintFieldValues();\n  }\n  ngAfterViewInit() {\n    // Initialize all tooltips\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n  getDetailData() {\n    if (this.initData) {\n      this.action = 'Add';\n      let detail = {};\n      for (let prop of Object.keys(this.initData)) {\n        detail[prop] = this.initData[prop];\n        this.hiddenFields.push(prop);\n      }\n      this.detail = this.formatDetail(detail);\n    } else {\n      let detail = {};\n      this.detail = this.formatDetail(detail);\n    }\n  }\n}","<div class=\"edit\" *ngIf=\"detail\">\n  <div class=\"card\" style=\"text-align: left;\">\n    <div class=\"card-body\">\n      <h4 class=\"card-title\" *ngIf=\"!embeddedView && !options['title']\">{{action}} Email Template</h4>\n      <h4 class=\"card-title\" *ngIf=\"options['title']\" [ngStyle]=\"style['card-title']\">\n        {{options['title']}}\n      </h4>\n      <p *ngIf=\"options['subtitle']\" [ngStyle]=\"style['card-subtitle']\">\n        {{options['subtitle']}}\n      </p>\n      <form (ngSubmit)=\"onSubmit()\" #editForm=\"ngForm\">\n        <ng-template [ngIf]=\"action == 'Edit'\">\n          <ng-template [ngIf]=\"!hiddenFields.includes('templateName')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditTemplateName\">Template Name</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditTemplateName\" required [(ngModel)]=\"detail['templateName']\" name=\"EditTemplateName\" #EditTemplateName=\"ngModel\">\n                <div *ngIf=\"detail['templateName']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('templateName')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditTemplateName.valid || EditTemplateName.pristine || EditTemplateName.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditTemplateName.errors && EditTemplateName.errors.required\"> TemplateName is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('fromEmail')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditFromEmail\">From Email</label><span><i data-toggle=\"tooltip\" title=\"Leave it blank if default sender email address in email settings is used\" class=\"far fa-question-circle\"></i></span>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditFromEmail\" [(ngModel)]=\"detail['fromEmail']\" name=\"EditFromEmail\" #EditFromEmail=\"ngModel\">\n                <div *ngIf=\"detail['fromEmail']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('fromEmail')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditFromEmail.valid || EditFromEmail.pristine || EditFromEmail.errors.minlength\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('subject')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditSubject\">Subject</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditSubject\" required [(ngModel)]=\"detail['subject']\" name=\"EditSubject\" #EditSubject=\"ngModel\">\n                <div *ngIf=\"detail['subject']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('subject')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditSubject.valid || EditSubject.pristine || EditSubject.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditSubject.errors && EditSubject.errors.required\"> Subject is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('content')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditContent\">Content</label>\n              <lib-richtext-editor [(ngModel)]=\"detail['content']\" name=\"EditContent\" [required]=\"true\" #EditContent=\"ngModel\">\n              </lib-richtext-editor>\n              <div [hidden]=\"EditContent.valid\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditContent.errors && EditContent.errors.required\"> Content is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('tag')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditTag\">Tag</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditTag\" required [(ngModel)]=\"detail['tag']\" name=\"EditTag\" #EditTag=\"ngModel\">\n                <div *ngIf=\"detail['tag']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('tag')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditTag.valid || EditTag.pristine || EditTag.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditTag.errors && EditTag.errors.required\"> Tag is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n        </ng-template>\n        <ng-template [ngIf]=\"action == 'Create' || action == 'Add' \">\n          <ng-template [ngIf]=\"!hiddenFields.includes('templateName')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditTemplateName\">Template Name</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditTemplateName\" required [(ngModel)]=\"detail['templateName']\" name=\"EditTemplateName\" #EditTemplateName=\"ngModel\">\n                <div *ngIf=\"detail['templateName']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('templateName')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditTemplateName.valid || EditTemplateName.pristine || EditTemplateName.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditTemplateName.errors && EditTemplateName.errors.required\"> TemplateName is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('fromEmail')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditFromEmail\">From Email</label>\n              <span><i data-toggle=\"tooltip\" title=\"Leave it blank if default sender email address in email settings is used\" class=\"far fa-question-circle\"></i></span>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditFromEmail\" [(ngModel)]=\"detail['fromEmail']\" name=\"EditFromEmail\" #EditFromEmail=\"ngModel\">\n                <div *ngIf=\"detail['fromEmail']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('fromEmail')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditFromEmail.valid || EditFromEmail.pristine || EditFromEmail.errors.minlength\" class=\"alert alert-danger\">\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('subject')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditSubject\">Subject</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditSubject\" required [(ngModel)]=\"detail['subject']\" name=\"EditSubject\" #EditSubject=\"ngModel\">\n                <div *ngIf=\"detail['subject']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('subject')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditSubject.valid || EditSubject.pristine || EditSubject.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditSubject.errors && EditSubject.errors.required\"> Subject is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('content')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditContent\">Content</label>\n              <lib-richtext-editor [(ngModel)]=\"detail['content']\" name=\"EditContent\" [required]=\"true\" #EditContent=\"ngModel\">\n              </lib-richtext-editor>\n              <div [hidden]=\"EditContent.valid\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditContent.errors && EditContent.errors.required\"> Content is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n          <ng-template [ngIf]=\"!hiddenFields.includes('tag')\">\n            <fieldset class=\"form-group\">\n              <label for=\"EditTag\">Tag</label>\n              <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control rounded\" id=\"EditTag\" required [(ngModel)]=\"detail['tag']\" name=\"EditTag\" #EditTag=\"ngModel\">\n                <div *ngIf=\"detail['tag']\" class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('tag')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n                </div>\n              </div>\n              <div [hidden]=\"EditTag.valid || EditTag.pristine || EditTag.errors.minlength\" class=\"alert alert-danger\">\n                <div *ngIf=\"EditTag.errors && EditTag.errors.required\"> Tag is required. </div>\n              </div>\n            </fieldset>\n          </ng-template>\n        </ng-template>\n        <div class=\"action-buttons-center\">\n          <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!editForm.form.valid\">Submit</button>\n          <button *ngIf=\"!options['disableCancel']\" class=\"btn btn-outline-success\" type=\"button\" (click)=\"editCancel()\">Cancel</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  Injector\n} from '@angular/core';\nimport {\n  EmailtemplateListCustComponent\n} from '../../../emailing-cust/base/emailtemplate/emailtemplate-list.cust.component';\nimport {\n  ViewType\n} from '../emailtemplate.component';\nimport {\n  EmailtemplateService\n} from '../emailtemplate.service';\n@Component({\n  selector: 'app-emailtemplate-list',\n  templateUrl: './emailtemplate-list.component.html',\n  styleUrls: ['./emailtemplate-list.component.css']\n})\nexport class EmailtemplateListComponent extends EmailtemplateListCustComponent implements OnInit {\n  // @Input() options: any; {disableCatetory: false, disablePagination: false, disbleActionButtons: false\n  //                        disableListSearch: false, disableTitle: false, disableRefs: false\n  //                        disableListHead: false, disableTitleRow: false}\n  // @Input()\n  // public inputData:any;\n  // @Input()\n  // public searchObj:any;\n  // @Input()\n  // public queryParams: any;  // {listSortField: 'a', listSortOrder: 'asc' / 'desc', perPage: 6}\n  // @Input()\n  // public categoryBy:string; //field name whose value is used as category\n  constructor(public emailtemplateService: EmailtemplateService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(emailtemplateService, injector, router, route, location);\n    this.view = ViewType.LIST;\n    this.fieldDisplayNames = {\n      'templateName': 'Template Name',\n      'fromEmail': 'From Email',\n      'subject': 'Subject',\n      'tag': 'Tag',\n    };\n    this.stringFields.push('templateName');\n    this.stringFields.push('fromEmail');\n    this.stringFields.push('subject');\n    this.stringFields.push('tag');\n    this.listViewFilter = 'list';\n    const listCategories = [];\n    this.listCategory1 = listCategories[0] || {};\n    this.listCategory2 = listCategories[1] || {};\n    this.clickItemAction = 'detail';\n    this.itemMultiSelect = true;\n    // initialize detail structure for search\n    let detail = {};\n    this.detail = this.formatDetail(detail);\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    this.adjustListViewForWindowSize();\n    this.clickItemAction = typeof this.options.clickItemAction === 'undefined' ? this.clickItemAction : this.options.clickItemAction;\n    this.itemMultiSelect = typeof this.options.itemMultiSelect === 'boolean' ? this.options.itemMultiSelect : this.itemMultiSelect;\n    if (!this.options) {\n      this.options = {};\n    }\n    if (this.options.disableCatetory) {\n      this.listCategory1 = {}; // no do query based on category for home view;\n      this.listCategory2 = {}; // no do query based on category for home view;\n    }\n    // this is to initialize the detail that will be used for search condition selection\n    let detail = {};\n    if (this.searchObj) {\n      this.searchDetailReady = true; // search provided from \"detail\", not from search bar.\n      detail = this.searchObj;\n    }\n    if (this.queryParams) {\n      this.listSortField = this.queryParams.listSortField;\n      this.listSortOrder = this.queryParams.listSortOrder;\n      if (this.queryParams.perPage) {\n        this.perPage = this.queryParams.perPage\n      }\n    }\n    this.detail = this.formatDetail(detail);\n    this.searchList();\n    // get editHintFields\n    this.searchHintFieldValues();\n  }\n  static getInstance() {\n    //used by others to call some common functions\n    return new EmailtemplateListComponent(null, null, null, null, null);\n  }\n}","<div class=\"mt-4 mb-4 d-flex\" *ngIf=\"!options['disableTitleRow']\">\n</div>\n<ul *ngIf=\"listCategory1.listCategoryField\" class=\"nav nav-pills category-nav\">\n  <li *ngFor=\"let ele of categoryDisplays; let idx = index;\" class=\"nav-item\">\n    <a *ngIf=\" listCategory1.showEmptyCategory || (!listCategory1.showEmptyCategory && categoriesCounts[idx] > 0)\" class=\"nav-link\" [ngClass]=\"{'active': idx === selectedCategory }\" [routerLink]=\"['.']\" queryParamsHandling=\"preserve\" (click)=\"categorySelected(idx)\">\n      {{ele}} <span *ngIf=\"listCategory1.showCategoryCounts\">({{categoriesCounts[idx]}})</span>\n    </a>\n  </li>\n</ul>\n<div>\n  <div *ngIf=\"!options['disableListHead']\" class=\"container search\">\n    <div class=\"row\" *ngIf=\"!options['disableListSearch']\">\n      <div class=\"col\">\n        <div class=\"input-group\">\n          <input type=\"search\" class=\"form-control border border-secondary\" id=\"emailtemplateTextSearch\" #emailtemplateTextSearch [(ngModel)]=\"searchText\" (search)=\"$event.target.blur();searchList();\" placeholder=\"Search for template name, from email, subject, tag\">\n          <div *ngIf=\"searchText\" class=\"input-group-append icon-search-clear\">\n            <span>\n              <i class=\"fas fa-times-circle\" (click)=\"onSearchTextClear()\" title=\"Clear\"></i>\n            </span>\n          </div>\n          <div class=\"input-group-append\">\n            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"searchList()\"><i class=\"fas fa-search\"></i></button>\n          </div>\n        </div>\n        <div class=\"text-center\">\n          <span class=\"pointer\" (click)=\"toggleMoreSearch()\">\n            <span class=\"refine-search-text\">Refine Search &nbsp;</span>\n            <span>\n              <i *ngIf=\"!moreSearchOpened\" class=\"fas fa-plus-circle\" title=\"More\"></i>\n              <i *ngIf=\"moreSearchOpened\" class=\"fas fa-minus-circle\" title=\"Less\"></i>\n            </span>\n          </span>\n        </div>\n        <div class=\"shadow\" *ngIf=\"moreSearchOpened\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <div class=\"d-flex flex-wrap align-items-center\">\n              </div>\n              <hr>\n              <div class=\"container one-column-search mt-3 small\">\n                <div class=\"row col-gutter\">\n                  <div class=\"col-4 col-sm-3\"><label for=\"Archived\">Archived</label></div>\n                  <div class=\"col-8 col-sm-8\">\n                    <label class=\"mr-1\">No</label>\n                    <label class=\"switch\">\n                      <input type=\"checkbox\" [(ngModel)]=\"detail['archived']\" #EditArchived=\"ngModel\">\n                      <span class=\"slider round\"></span>\n                    </label>\n                    <label class=\"ml-1\">Yes</label>\n                  </div>\n                </div>\n              </div>\n              <hr>\n              <div class=\"action-buttons\">\n                <button type=\"button\" class=\"btn btn-outline-success\" (click)=\"onSearchClear()\">Reset</button>\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"searchList()\">Search</button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div *ngIf=\"!moreSearchOpened\" style=\"text-align: left;\">\n          <span class=\"badge badge-pill badge-info\" *ngFor=\"let value of searchMoreDetail\">\n            <a (click)=\"toggleMoreSearch()\" class=\"pointer\"> {{value[0]}}: {{value[1]}}</a>\n            <i class=\"fas fa-times-circle icon-clear-badge\" (click)=\"clearValueFromDetailAndSearchList(value[2])\" title=\"Clear\"></i>\n          </span>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"!options['disableActionButtions']\">\n      <div class=\"col\">\n        <div class=\"action-buttons\">\n          <a [routerLink]=\"['../new' ]\" [skipLocationChange]=\"false\" class=\"btn btn-outline-primary\">Create</a>\n          <a routerLink=\".\" class=\"btn btn-outline-primary\" (click)=\"onDeleteSelected()\" [ngClass]=\"{'disabled': !isItemSelected()}\">Delete</a>\n          <a routerLink=\".\" class=\"btn btn-outline-primary\" (click)=\"onArchiveSelected()\" [ngClass]=\"{'disabled': !isItemSelected()}\">\n            <span *ngIf=\"!archivedSearch\">Archive</span>\n            <span *ngIf=\"archivedSearch\">Unarchive</span>\n          </a>\n        </div>\n      </div>\n    </div>\n    <hr />\n    <div *ngIf=\"!options['disablePagination']\">\n      <div class=\"row justify-content-end mt-3\">\n        <div *ngIf=\"list.length > 2\" class=\"sort-selection mr-5\">\n          <div class=\"dropdown\" style=\"width: 100%;\">\n            <button class=\"sort-dropdown btn btn-light btn-sm dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> Sort: <span *ngIf=\"listSortField && !viewHiddenFields.includes(listSortField)\">{{listSortFieldDisplay}}\n                <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up\"></i>\n                <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down\"></i>\n              </span>\n            </button>\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('templateName', 'Template Name', 'asc')\">Template Name<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('templateName', 'Template Name', 'desc')\">Template Name<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('fromEmail', 'From Email', 'asc')\">From Email<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('fromEmail', 'From Email', 'desc')\">From Email<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('subject', 'Subject', 'asc')\">Subject<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('subject', 'Subject', 'desc')\">Subject<i class=\"fas fa-arrow-down\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('tag', 'Tag', 'asc')\">Tag<i class=\"fas fa-arrow-up\"></i></a>\n              <a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('tag', 'Tag', 'desc')\">Tag<i class=\"fas fa-arrow-down\"></i></a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-between\">\n        <div>\n          <div *ngIf=\"list.length > 0\">\n            <input type=\"radio\" name=\"view-filter\" id=\"list-view\" class=\"view-radio\" (click)=\"setListViewFilter('list')\" [checked]=\"isShowListView('list')\">\n            <label for=\"list-view\"><i class=\"fa fa-th-list\"></i></label>\n            <input type=\"radio\" name=\"view-filter\" id=\"grid-view\" class=\"view-radio\" (click)=\"setListViewFilter('grid')\" [checked]=\"isShowListView('grid')\">\n            <label for=\"grid-view\"><i class=\"fa fa-th\"></i></label>\n            <input type=\"radio\" name=\"view-filter\" id=\"table-view\" class=\"view-radio\" (click)=\"setListViewFilter('table')\" [checked]=\"isShowListView('table')\">\n            <label for=\"table-view\"><i class=\"fa fa-list-alt\"></i></label>\n          </div>\n        </div>\n        <div>\n          <div class=\"total_counts\">\n            <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n            <span *ngIf=\"list.length > 1\"><input type=\"checkbox\" class=\"ml-3 mr-1\" [(ngModel)]=\"checkAll\" (change)=\"onCheckAllChange()\">All</span>\n            <a class=\"ml-3\" routerLink=\".\" (click)=\"onRefresh()\"><i class=\"fa fa-sync-alt\"></i></a>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n        <div *ngIf=\"totalPages > 1\">\n          <ul class=\"pagination justify-content-center\">\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n                <span aria-hidden=\"true\">&laquo;</span>\n                <span class=\"sr-only\">Previous</span>\n              </a>\n            </li>\n            <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n            </li>\n            <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n                <span class=\"sr-only\">Next</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n          <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-records\" *ngIf=\"list.length === 0\">\n    <span *ngIf=\"loaded\">No records found.</span>\n    <span *ngIf=\"!loaded\">Loading...</span>\n  </div>\n  <div *ngIf=\"list.length > 0\">\n    <div class=\"listview\" *ngIf=\"isShowListView('list')\">\n      <div class=\"list-block\" *ngFor=\"let detail of list;  let i = index; let list_index = index;\">\n        <hr *ngIf=\"i==0\" class=\"list-devider\">\n        <div class=\"list-card text-left\" [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i],\n\t\t\t\t\t\t\t'clickable-card': clickItemAction}\">\n          <div class=\"list-fields\" [ngClass]=\"{pointer: clickItemAction}\" (click)=\"clickOneItem(i)\">\n            <div class=\"list-body-fields\">\n              <h5>\n                <div class=\"mr-1 d-inline-block\">\n                  {{detail['templateName']}}\n                </div>\n              </h5>\n              <div>\n                <div *ngIf=\"fieldHasValue(detail['fromEmail'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>From Email:</label></div>\n                  <div class=\"ml-3\">\n                    {{detail['fromEmail']}}\n                  </div>\n                </div>\n                <div *ngIf=\"fieldHasValue(detail['subject'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Subject:</label></div>\n                  <div class=\"ml-3\">\n                    {{detail['subject']}}\n                  </div>\n                </div>\n                <div *ngIf=\"fieldHasValue(detail['tag'])\" class=\"mr-3 d-inline-flex flex-wrap\">\n                  <div><label>Tag:</label></div>\n                  <div class=\"ml-3\">\n                    {{detail['tag']}}\n                  </div>\n                </div>\n              </div>\n              <div class=\"d-flex flex-row mt-1\">\n              </div>\n            </div>\n          </div>\n          <div class=\"card-action-icons\">\n            <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n            <a [routerLink]=\"['.']\" (click)=\"onDelete(detail['_id'], i)\"><i class=\"fas fa-trash-alt\" title=\"Delete\"></i></a>\n            <a [routerLink]=\"['.']\" (click)=\"onArchive(detail['_id'], i, archivedSearch)\">\n              <i *ngIf=\"!archivedSearch\" class=\"fa fa-archive\" title=\"Archive\"></i>\n              <i *ngIf=\"archivedSearch\" class=\"fas fa-trash-restore\" title=\"Unarchive\"></i>\n            </a>\n            <input class=\"list-check-box\" type=\"checkbox\" [ngModel]=\"checkedItem[i]\" (click)=\"selectOneItem(i)\" />\n          </div>\n        </div>\n        <hr class=\"list-devider\">\n      </div>\n    </div>\n    <div class=\"gridview\" *ngIf=\"isShowListView('grid')\">\n      <div class=\"grid-block\" *ngFor=\"let detail of list;  let i = index; let list_index = index;\">\n        <div class=\"card text-left h-100\" [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i],\n\t\t\t\t\t\t\t'clickable-card': clickItemAction}\">\n          <div class=\"grid-fields\" [ngClass]=\"{pointer: clickItemAction}\" (click)=\"clickOneItem(i)\">\n            <div class=\"card-header grid-head\">\n              <div>\n                <h5>\n                  <div class=\"mr-1 d-inline-block\">\n                    {{detail['templateName']}}\n                  </div>\n                </h5>\n              </div>\n            </div>\n            <div class=\"card-body\">\n              <div *ngIf=\"fieldHasValue(detail['fromEmail'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>From Email:</label></div>\n                <div class=\"ml-3\">\n                  {{detail['fromEmail']}}</div>\n              </div>\n              <div *ngIf=\"fieldHasValue(detail['subject'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>Subject:</label></div>\n                <div class=\"ml-3\">\n                  {{detail['subject']}}</div>\n              </div>\n              <div *ngIf=\"fieldHasValue(detail['tag'])\" class=\"d-flex flex-wrap\">\n                <div class=\"\"><label>Tag:</label></div>\n                <div class=\"ml-3\">\n                  {{detail['tag']}}</div>\n              </div>\n            </div>\n          </div>\n          <div class=\"card-action-icons\">\n            <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n            <a routerLink=\".\" (click)=\"onDelete(detail['_id'], i)\"><i class=\"fas fa-trash-alt\" title=\"Delete\"></i></a>\n            <a routerLink=\".\" (click)=\"onArchive(detail['_id'], i, archivedSearch)\">\n              <i *ngIf=\"!archivedSearch\" class=\"fa fa-archive\" title=\"Archive\"></i>\n              <i *ngIf=\"archivedSearch\" class=\"fas fa-trash-restore\" title=\"Unarchive\"></i>\n            </a>\n            <input class=\"list-check-box\" type=\"checkbox\" [ngModel]=\"checkedItem[i]\" (click)=\"selectOneItem(i)\" />\n          </div>\n        </div>\n      </div>\n    </div>\n    <table *ngIf=\"isShowListView('table')\" class=\"table table-bordered table-hover\">\n      <thead class=\"thead-light\">\n        <tr>\n          <th scope=\"col\">#</th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('templateName', 'Template Name')\"> Template Name <span *ngIf=\"listSortField === 'templateName'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('fromEmail', 'From Email')\"> From Email <span *ngIf=\"listSortField === 'fromEmail'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('subject', 'Subject')\"> Subject <span *ngIf=\"listSortField === 'subject'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('tag', 'Tag')\"> Tag <span *ngIf=\"listSortField === 'tag'\">\n              <i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n              <i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n            </span>\n          </th>\n          <th scope=\"col\" style=\"width:9.8rem;\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        <ng-template ngFor let-detail [ngForOf]=\"list\" let-i=\"index\">\n          <tr [ngClass]=\"{'clicked-row': clickedId==detail['_id'],\n\t\t\t\t\t\t\t'selected-row': clickItemAction === 'select' && checkedItem[i]}\">\n            <td scope=\"row\" (click)=\"clickOneItem(i)\" class=\"pointer read-more mt-3\">\n              {{(page-1)*perPage+i+1}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['templateName']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['fromEmail']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['subject']}}\n            </td>\n            <td (click)=\"clickOneItem(i)\" [ngClass]=\"{'pointer': clickItemAction}\">\n              {{detail['tag']}}\n            </td>\n            <td>\n              <a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n              <a routerLink=\".\" (click)=\"onDelete(detail['_id'], i)\"><i class=\"fas fa-trash-alt\" title=\"Delete\"></i></a>\n              <a routerLink=\".\" (click)=\"onArchive(detail['_id'], i, archivedSearch)\">\n                <i *ngIf=\"!archivedSearch\" class=\"fa fa-archive\" title=\"Archive\"></i>\n                <i *ngIf=\"archivedSearch\" class=\"fas fa-trash-restore\" title=\"Unarchive\"></i>\n              </a>\n              <input class=\"list-check-box\" type=\"checkbox\" [ngModel]=\"checkedItem[i]\" (click)=\"selectOneItem(i)\" />\n            </td>\n          </tr>\n        </ng-template>\n      </tbody>\n    </table>\n  </div>\n  <div class=\"container\">\n    <div *ngIf=\"!options['disablePagination']\">\n      <div class=\"row justify-content-end mt-3\">\n      </div>\n      <div class=\"d-flex justify-content-between\">\n        <div>\n        </div>\n        <div>\n          <div class=\"total_counts\">\n            <span *ngIf=\"totalCount > 2\">Total: <b>{{totalCount}}</b></span>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center flex-wrap mt-2\">\n        <div *ngIf=\"totalPages > 1\">\n          <ul class=\"pagination justify-content-center\">\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page<=1}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\" aria-label=\"Previous\">\n                <span aria-hidden=\"true\">&laquo;</span>\n                <span class=\"sr-only\">Previous</span>\n              </a>\n            </li>\n            <li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\" [ngClass]=\"{'active': p==page}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n            </li>\n            <li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n            <li class=\"page-item\" [ngClass]=\"{'disabled': page>=totalPages}\">\n              <a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\" aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n                <span class=\"sr-only\">Next</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"ml-3\" *ngIf=\"totalPages > 1\">\n          <small>Page</small>&nbsp;<input type=\"number\" class=\"page-control form-control\" [value]=\"page\" (input)=\"onGotoPage($event.target.value)\" />&nbsp;/&nbsp;{{totalPages}}\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import {\n  HttpClient\n} from '@angular/common/http';\nimport {\n  MddsBaseService\n} from '@hicoder/angular-core';\nconst servicePath = '/emailtemplate/';\nexport class EmailtemplateBaseService extends MddsBaseService {\n  constructor(http: HttpClient, serverRootUrl: string) {\n    const serviceUrl = serverRootUrl + servicePath;\n    super(http, serviceUrl);\n  }\n}","import {\n  Location\n} from '@angular/common';\nimport {\n  Router,\n  ActivatedRoute\n} from '@angular/router';\nimport {\n  MddsBaseComponent,\n  ViewType\n} from '@hicoder/angular-core';\nimport {\n  Component,\n  OnInit,\n  Injector,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {\n  EmailtemplateService\n} from './emailtemplate.service';\nconst itemCamelName = 'email Template';\nexport {\n  ViewType\n};\n@Component({\n  template: '',\n})\nexport class EmailtemplateComponent extends MddsBaseComponent implements OnInit {\n  // *** common input fields\n  @Input()\n  public style: any; // {}\n  @Input()\n  public options: any; // {} uiOptions\n  @Input()\n  public searchObj: any;\n  // *** list component\n  @Input()\n  public inputData: any;\n  @Input()\n  public queryParams: any; // {listSortField: 'a', listSortOrder: 'asc' / 'desc', perPage: 6}\n  @Input()\n  public categoryBy: string; //field name whose value is used as category\n  // list-asso component\n  @Input('asso') public associationField: string;\n  // list select component\n  @Output() outputData: any;\n  // *** edit / create component\n  @Input()\n  public id: string;\n  @Input()\n  public cid: string; // copy id\n  @Input()\n  public initData: any; // some fields has data already. eg: {a: b}. Used for add\n  @Input()\n  public embeddedView: boolean;\n  @Input()\n  public embedMode: string; // parent to tell the action - create\n  @Output()\n  public doneData = new EventEmitter < boolean > ();\n  @Output()\n  public done = new EventEmitter < any > ();\n  // *** detail component\n  // @Input() \n  // public id:string;\n  @Input()\n  public disableActionButtions: boolean;\n  @Output()\n  public eventEmitter: EventEmitter < any > = new EventEmitter();\n  // detail sub component\n  // @Input() inputData;\n  // detail show field component\n  // @Input() id: string;\n  @Input() detailObj: any;\n  @Input() showFieldsStr: string;\n  // detail sel component\n  //@Input() inputData;\n  //@Output() outputData;\n  // detail pop component\n  // @Input() inputData;\n  // @Output() outputData;\n  constructor(public emailtemplateService: EmailtemplateService, public injector: Injector, public router: Router, public route: ActivatedRoute, public location: Location) {\n    super(emailtemplateService, injector, router, route, location);\n    this.setItemNames(itemCamelName);\n    this.briefFieldsInfo = [];\n    this.briefFieldsInfo.push(['templateName', 'Template Name']);\n    this.briefFieldsInfo.push(['fromEmail', 'From Email']);\n    this.briefFieldsInfo.push(['subject', 'Subject']);\n    this.briefFieldsInfo.push(['tag', 'Tag']);\n    this.requiredFields = ['templateName', 'subject', 'content', 'tag', ];\n    this.schemaName = 'emailtemplate';\n    this.modulePath = 'emailing';\n    this.indexFields = ['templateName', ];\n  }\n  ngOnInit() {\n    this.style = this.style || {};\n    this.options = this.options || {};\n  }\n}","import {\n  Injectable,\n  Inject,\n  OnDestroy,\n  SkipSelf\n} from '@angular/core';\nimport {\n  HttpClient\n} from '@angular/common/http';\nimport {\n  EmailtemplateBaseService\n} from './emailtemplate.base.service';\nimport {\n  Emailing_SERVER_ROOT_URI\n} from '../emailing.tokens';\n@Injectable({\n  providedIn: 'root',\n})\nexport class EmailtemplateService extends EmailtemplateBaseService implements OnDestroy {\n  constructor(http: HttpClient, @Inject(Emailing_SERVER_ROOT_URI) private emailingServerRootUri: string) {\n    super(http, emailingServerRootUri);\n  }\n  ngOnDestroy() {}\n}"]}
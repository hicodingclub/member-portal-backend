{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/home.module.ts","webpack:///src/app/injection-tokens/auth.conf.ts","webpack:///src/app/injection-tokens/reuse-strategy.conf.ts","webpack:///src/app/users.conf.ts","webpack:///src/app/users/muser/muser-detail/muser-detail-field.component.ts","webpack:///src/app/users/muser/muser-detail/muser-detail-field.component.html","webpack:///src/app/users/muser/muser-detail/muser-detail.component.ts","webpack:///src/app/users/muser/muser-detail/muser-detail.component.html","webpack:///src/app/users/muser/muser-edit/muser-edit.component.ts","webpack:///src/app/users/muser/muser-edit/muser-edit.component.html","webpack:///src/app/users/muser/muser-edit/muser-pass.component.ts","webpack:///src/app/users/muser/muser-edit/muser-pass.component.html","webpack:///src/app/users/muser/muser-list/muser-list.component.ts","webpack:///src/app/users/muser/muser-list/muser-list.component.html","webpack:///src/app/users/muser/muser.base.service.ts","webpack:///src/app/users/muser/muser.component.ts","webpack:///src/app/users/muser/muser.service.ts","webpack:///src/app/users/users-routing.module.ts","webpack:///src/app/users/users-routing.path.ts","webpack:///src/app/users/users.component.ts","webpack:///src/app/users/users.component.html","webpack:///src/app/users/users.directive.ts","webpack:///src/app/users/users.module.ts","webpack:///src/app/users/users.tokens.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","canActivate","loadChildren","m","RolesModule","FilesModule","EmailingModule","AccessModule","MembershipModule","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useValue","useClass","declarations","providers","bootstrap","HomeComponent","HomeModule","entryComponents","authentication_page_root_uri","authentication_server_root_uri","authentication_interfaces","authentication_login_pipeline","undefined","authentication_dropdown_items","authentication_reg_required","firstName","lastName","phone","route_reuse_uris","UsersRoutes","children","data","mraLevel","item","users_server_root_uri","MuserDetailFieldComponent","muserService","injector","router","route","location","view","DETAIL","enums","stringFields","push","dateFields","showFieldsStr","console","error","showFields","match","detailObj","onDetailReturned","populateDetail","MuserDetailComponent","style","options","snapshot","paramMap","get","searchObj","populateDetailByFields","MuserEditComponent","done","minDate","year","Date","getFullYear","month","day","EDIT","detail","formatDetail","action","populateDetailForAction","cid","queryParamMap","populateDetailFromCopy","initData","status","prop","hiddenFields","PassswordEqualValidator","passwordField","c","v","value","root","passwordValidateEqual","useExisting","multi","MuserPassComponent","onSubmit","editCancel","$event","MuserListComponent","LIST","listViewFilter","listCategories","listCategory1","listCategory2","adjustListViewForWindowSize","populateList","target","blur","searchList","toggleMoreSearch","onRefresh","servicePath","MuserBaseService","http","serverRootUrl","serviceUrl","itemCamelName","MuserComponent","setItemNames","briefFieldsInfo","emailFields","schemaName","dateFormat","timeFormat","modulePath","indexFields","template","MuserService","usersServerRootUri","UsersRoutingModule","forChild","muserRoutingPath","UsersComponent","MraNgbDateFormatterService","date","UsersModule","Users_SERVER_ROOT_URI","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuard } from '@hicoder/angular-auth';\n\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full'},\n  { path: 'home',  component: HomeComponent, canActivate: [AuthGuard] },\n  { path: 'roles', loadChildren: () => import('./roles/roles.module').then(m => m.RolesModule) },\n  { path: 'files', loadChildren: () => import('./files/files.module').then(m => m.FilesModule) },\n  { path: 'emailing', loadChildren: () => import('./emailing/emailing.module').then(m => m.EmailingModule) },\n  { path: 'access', loadChildren: () => import('./access/access.module').then(m => m.AccessModule) },\n  { path: 'membership', loadChildren: () => import('./membership/membership.module').then(m => m.MembershipModule) },\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'front-new';\n}\n","<div class=\"header fixed-top\">\n    <nav class=\"navbar navbar-light navbar-expand-lg\">\n        <a class=\"navbar-brand\" routerLink=\"/home\">\n            <img src=\"assets/logo.png\" align=\"left\" class=\"logo  mt-1\">\n            <div class=\"d-none d-md-block logo-text mr-5\">\n                <div class=\"h4\">Hicoding Club Member Portal</div>\n                <div class=\"ml-3\">\n                    <small><i>Administration Portal</i></small>\n                </div>\n            </div>\n        </a>\n\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarItems\" aria-controls=\"navbarItems\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n\t\t<span class=\"navbar-toggler-icon\"></span>\n\t\t</button>\n\n        <div class=\"collapse navbar-collapse ml-auto mr-auto\" id=\"navbarItems\">\n            <ul class=\"navbar-nav\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/emailing\">Emails</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/membership\">Membership</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/users\">Users</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/files\">Pictures</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/access\">Public Access</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/roles\">Administrators</a>\n                </li>\n\n            </ul>\n        </div>\n    </nav>\n\n    <div class=\"auth-icon\">\n        <lib-auth-icon></lib-auth-icon>\n    </div>\n</div>\n\n<div class=\"content\">\n    <div>\n        <router-outlet></router-outlet>\n    </div>\n    <div class=\"container content-min-height\">\n    </div>\n</div>\n\n<nav class=\"footer footer-font navbar navbar-light\">\n    <div class=\"mx-auto mb-2\">\n        <div>© 2020 Hicoding Club, Inc. All rights reserved.</div>\n    </div>\n</nav>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { RouteReuseStrategy } from '@angular/router';\nimport { MddsCoreModule, MddsRouteReuseStrategy } from '@hicoder/angular-core';\n\nimport { AuthenticationModule, AUTHENTICATION_INTERFACES } from '@hicoder/angular-auth';\n\nimport { MDDS_ROUTE_REUSE_RUIs } from '@hicoder/angular-core';\nimport { route_reuse_uris } from './injection-tokens/reuse-strategy.conf';\n\nimport { UsersModule } from './users/users.module';\n\nimport { HomeModule } from './home/home.module';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { authentication_interfaces } from './injection-tokens/auth.conf';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n\n    AuthenticationModule,\n    UsersModule,\n    HomeModule,\n  ],\n  providers: [\n    { provide: AUTHENTICATION_INTERFACES, useValue: authentication_interfaces },\n    { provide: MDDS_ROUTE_REUSE_RUIs, useValue: route_reuse_uris },\n    { provide: RouteReuseStrategy, useClass: MddsRouteReuseStrategy },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n\n}\n","<div class=\"container\">\n    <div class=\"row mt-5\">\n        <div class=\"col-md-4\">\n            <div class=\"card text-white bg-secondary mb-3\" style=\"max-width: 18rem;\">\n                <a routerLink=\"/emailing\" class=\"card-link\"></a>\n                <div class=\"card-header\">Emails</div>\n                <div class=\"card-body\" style=\"height: 6rem;\">\n                    <p class=\"card-text\">Email templates, logs</p>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"col-md-4\">\n            <div class=\"card text-white bg-secondary mb-3\" style=\"max-width: 18rem;\">\n                <a routerLink=\"/membership\" class=\"card-link\"></a>\n                <div class=\"card-header\">Membership</div>\n                <div class=\"card-body\" style=\"height: 6rem;\">\n                    <p class=\"card-text\">Members, Board, Lead</p>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"row mt-5\">\n        <div class=\"col-md-4\">\n            <div class=\"card text-white bg-secondary mb-3\" style=\"max-width: 18rem;\">\n                <a routerLink=\"/users\" class=\"card-link\"></a>\n                <div class=\"card-header\">Users</div>\n                <div class=\"card-body\" style=\"height: 6rem;\">\n                    <p class=\"card-text\">User accounts and password.</p>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"col-md-4\">\n            <div class=\"card text-white bg-secondary mb-3\" style=\"max-width: 18rem;\">\n                <a routerLink=\"/files\" class=\"card-link\"></a>\n                <div class=\"card-header\">Files</div>\n                <div class=\"card-body\" style=\"height: 6rem;\">\n                    <p class=\"card-text\">Uploaded pictures, files</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row mt-5\">\n        <div class=\"col-md-4\">\n            <div class=\"card text-white bg-secondary mb-3\" style=\"max-width: 18rem;\">\n                <a routerLink=\"/access\" class=\"card-link\"></a>\n                <div class=\"card-header\">Public Access</div>\n                <div class=\"card-body\" style=\"height: 6rem;\">\n                    <p class=\"card-text\">Public access control to system resources.</p>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-4\">\n            <div class=\"card text-white bg-secondary mb-3\" style=\"max-width: 18rem;\">\n                <a routerLink=\"/roles\" class=\"card-link\"></a>\n                <div class=\"card-header\">Administrators</div>\n                <div class=\"card-body\" style=\"height: 6rem;\">\n                    <p class=\"card-text\">Administrator accounts, roles, and permissions.</p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router'\n\nimport { HomeComponent } from './home.component';\n\n@NgModule({\n  imports: [\n    RouterModule,\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n  ],\n  declarations: [\n    HomeComponent\n  ],\n  providers: [\n  ],\n\n  exports: [\n    HomeComponent\n  ],\n  entryComponents: [\n\n  ]\n})\nexport class HomeModule { }\n","import { DropdownItem } from '@hicoder/angular-auth';\n\nexport const authentication_page_root_uri: string = '/auth';\nexport const authentication_server_root_uri: string = '/api/auth';\nexport const authentication_interfaces: string = \"admin\";\nexport const authentication_login_pipeline = undefined;\n\nexport const authentication_dropdown_items: DropdownItem[] = [\n    // {displayName: 'My classes', routerLink: '/academics/class'},\n    // {displayName: 'Student Profile', routerLink: '/academics/student'},\n];\n\nexport const authentication_reg_required: any = {\n    firstName: true,\n    lastName: true,\n    phone: false,\n}","export const route_reuse_uris: Array<string> = [\n    '/',\n  ];","import { Routes } from '@angular/router';\n\nimport { UsersComponent } from './users/users.component';\n\n// Import routing paths\nimport {muserRoutingPath,  } from './users/users-routing.path';\n\nexport const UsersRoutes: Routes = [\n  { path: 'users',\n    component: UsersComponent,\n    children: [\n      {path: '',  redirectTo: 'muser', pathMatch: 'full'},\n\n      { path: 'muser',\n        children: muserRoutingPath,\n        data: {mraLevel: 1, item: 'muser'}\n      },\n    ]\n  }\n];\nexport const users_server_root_uri: string = '/api/users';\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router, ActivatedRoute }    from '@angular/router';\nimport { Injector } from '@angular/core';\n\nimport { MuserComponent, ViewType } from '../muser.component';\nimport { MuserService } from '../muser.service';\n\n@Component({\n  selector: 'app-muser-detail-field',\n  templateUrl: './muser-detail-field.component.html',\n  styleUrls: ['./muser-detail.component.css']\n})\nexport class MuserDetailFieldComponent extends MuserComponent\n        implements OnInit {\n    @Input() id: string;\n    @Input() detailObj: any;\n    @Input() showFieldsStr: string;\n    showFields: string[];\n    \n    constructor(\n        public muserService: MuserService,\n        public injector: Injector,\n        public router: Router,\n        public route: ActivatedRoute,\n        public location: Location) {\n          super(\n                muserService, injector, router, route, location);\n          this.view = ViewType.DETAIL;\n\n          this.enums['status'] = ['Enabled', 'Disabled', 'Pending', ];\n\n          this.stringFields.push('username');\n          this.stringFields.push('email');\n          this.stringFields.push('phone');\n          this.stringFields.push('status');\n\n\n          this.dateFields = ['since', ];\n\n\n\n\n\n\n    }\n\n    ngOnInit() {\n      if (!this.showFieldsStr) {\n        console.error(\"A field has to be given to show it.\");\n        return;\n      }\n      this.showFields = this.showFieldsStr.match(/\\S+/g);\n      if (this.detailObj) {\n        this.onDetailReturned(this.detailObj, null);\n      } else {\n        if (!this.id) this.id = this.id;\n        if (this.id) this.populateDetail(this.id);\n        else {\n          console.error(\"No id provided to show info\");\n          return;\n        }\n      }\n    }\n}\n","\n\n\t\t<div *ngIf=\"detail && showFields.includes('username')\">                \n                    {{detail['username']}}\n</div>\n\t\t<div *ngIf=\"detail && showFields.includes('email')\">                \n                    {{detail['email']}}\n</div>\n\t\t<div *ngIf=\"detail && showFields.includes('phone')\">                \n                    {{detail['phone']}}\n</div>\n\t\t<div *ngIf=\"detail && showFields.includes('since')\">                  {{detail['since']?detail['since']['value']:\"\"}}\n</div>\n\t\t<div *ngIf=\"detail && showFields.includes('status')\">                \n                    {{detail['status']}}\n</div>\n","import { Component, OnInit, AfterViewInit, Input } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router, ActivatedRoute }    from '@angular/router';\nimport { Injector } from '@angular/core';\n\nimport { MuserComponent, ViewType } from '../muser.component';\nimport { MuserService } from '../muser.service';\n\n\n\n\n@Component({\n  selector: 'app-muser-detail',\n  templateUrl: './muser-detail.component.html',\n  styleUrls: ['./muser-detail.component.css']\n})\nexport class MuserDetailComponent extends MuserComponent implements OnInit, AfterViewInit {\n  @Input() \n  public id:string;\n  @Input()\n  public searchObj:any;\n  @Input()\n  public disableActionButtions:boolean;\n  @Input()\n  public style: any; // {}\n  @Input()\n  public options: any; // {} uiOptions\n\n\n\n  constructor(\n      \n      public muserService: MuserService,\n      public injector: Injector,\n      public router: Router,\n      public route: ActivatedRoute,\n      public location: Location) {\n          super(\n                muserService, injector, router, route, location);\n          this.view = ViewType.DETAIL;\n\n          this.enums['status'] = ['Enabled', 'Disabled', 'Pending', ];\n\n          this.stringFields.push('username');\n          this.stringFields.push('email');\n          this.stringFields.push('phone');\n          this.stringFields.push('status');\n\n\n          this.dateFields = ['since', ];\n\n\n\n\n\n\n  }\n\n  ngOnInit() {\n      this.style = this.style || {};\n      this.options = this.options || {};\n      if (!this.id) this.id = this.route.snapshot.paramMap.get('id');\n      if (this.id) {\n        this.populateDetail(this.id);\n      } else if (this.searchObj) {\n        // search item based on the unique value\n        this.populateDetailByFields(this.searchObj);\n      } else {\n        console.error(\"Routing error for detail view... no id...\");\n        return;\n      }\n  }\n\n  ngAfterViewInit() {\n\n  }\n}\n","\n<div class=\"detail\" *ngIf=\"detail\">\n\t<div *ngIf=\"!options['disableActionButtions']\"><div *ngIf=\"!disableActionButtions\" class=\"action-buttons\">\n    <!--<a href=\"javascript:void(0)\" (click)=\"goBack()\"><i class=\"fas fa-angle-double-left\" title=\"Back\"></i></a>-->\n    <a [routerLink]=\"['../../list' ]\"><i class=\"fas fa-list\" title=\"List\"></i><!--  span>&nbsp;&nbsp;{{ItemCamelName}} List</span--></a>\n    <a [routerLink]=\"['../../edit', detail['_id'] ]\" [skipLocationChange]=\"false\" class=\"btn btn-outline-primary\">Edit</a>\n    <a [routerLink]=\"['../../password', detail['_id'] ]\" class=\"btn btn-outline-primary\">Change Password</a>\n</div>\n</div>\n\t<div class=\"card text-left transparent-border \">\n\t\t<div class=\"grid-fields\">\n\n      <div class=\"card-header grid-head\">\n        <div class=\"ml-1 d-inline-block\">\n          <h5>\n            <div class=\"mr-1 d-inline-block\">\n                              \n                    {{detail['username']}}\n\n            </div>\n          </h5>\n        </div>\n      </div>\n      <div class=\"card-body\">\n          <div>\n            <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 200px;\">\n                <div><label>Email:</label></div>\n                <div class=\"ml-3\">                \n                    {{detail['email']}}\n</div>\n            </div>\n          </div>\n          <div>\n            <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 200px;\">\n                <div><label>Phone:</label></div>\n                <div class=\"ml-3\">                \n                    {{detail['phone']}}\n</div>\n            </div>\n          </div>\n          <div>\n            <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 200px;\">\n                <div><label>Since:</label></div>\n                <div class=\"ml-3\">                  {{detail['since']?detail['since']['value']:\"\"}}\n</div>\n            </div>\n          </div>\n          <div>\n            <div class=\"d-inline-flex flex-wrap mr-5\" style=\"min-width: 200px;\">\n                <div><label>Status:</label></div>\n                <div class=\"ml-3\">                \n                    {{detail['status']}}\n</div>\n            </div>\n          </div>\n      </div>\n\n\t\t</div>\n\t</div>\n\t<div *ngIf=\"!options['disablePipeline']\">\n</div>\n\t<div *ngIf=\"!options['disableRefLink']\">\n</div>\n</div>\n\n","import { Component, OnInit, Input, Output, Directive, EventEmitter } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Injector } from '@angular/core';\n\nimport { MuserComponent, ViewType } from '../muser.component';\nimport { MuserService } from '../muser.service';\n\n\n\n\n\n\n\n@Component({\n  selector: 'app-muser-edit',\n  templateUrl: './muser-edit.component.html',\n  styleUrls: ['./muser-edit.component.css']\n})\nexport class MuserEditComponent extends MuserComponent implements OnInit {\n    @Input()\n    public id: string;\n    @Input()\n    public cid: string; // copy id\n    @Input()\n    public initData: any; // some fields has data already. eg: {a: b}. Used for add\n    @Output()\n    public done = new EventEmitter<boolean>();\n    @Input()\n    public embeddedView: boolean;\n\n    public action: string;\n    public minDate = {year: (new Date()).getFullYear() - 100, month: 1, day: 1};\n    public confirmPassword: string;\n\n\n    constructor(\n      public muserService: MuserService,\n      public injector: Injector,\n      public router: Router,\n      public route: ActivatedRoute,\n      public location: Location) {\n          super(\n                 muserService, injector, router, route, location);\n          this.view = ViewType.EDIT;\n\n          this.enums['status'] = ['Enabled', 'Disabled', 'Pending', ];\n\n          this.stringFields.push('username');\n          this.stringFields.push('email');\n          this.stringFields.push('phone');\n          this.stringFields.push('status');\n          this.stringFields.push('password');\n\n          const detail = {};\n          this.detail = this.formatDetail(detail);\n    }\n\n    ngOnInit() {\n        if (!this.id) this.id = this.route.snapshot.paramMap.get('id');\n        if (this.id) {\n            this.action=\"Edit\";\n            this.populateDetailForAction(this.id, \"edit\"); // populate with action as \"edit\"\n        }\n        else {\n            this.action=\"Create\";\n            if (!this.cid) this.cid = this.route.snapshot.queryParamMap.get('cid');\n            if (this.cid) {\n                this.populateDetailFromCopy(this.cid);\n            } else if (this.initData) {\n                this.action=\"Add\";\n                const detail = {\n                    status: \"Enabled\",\n                };\n                for (const prop in this.initData) {\n                    detail[prop] = this.initData[prop];\n                    this.hiddenFields.push(prop);\n                }\n                this.detail = this.formatDetail(detail);\n            } else {\n                const detail = {\n                    status: \"Enabled\",\n                };\n                this.detail = this.formatDetail(detail);\n            }\n        }\n    }\n\n}\n","<div class=\"edit\" *ngIf=\"detail\">\n\t<div *ngIf=\"!embeddedView\" class=\"action-buttons\">\n        <!-- <a href=\"javascript:void(0)\" (click)=\"goBack()\" ><i class=\"fas fa-angle-double-left\" title=\"Back\"></i></a> -->\n\t</div>\n\t\n\t<div class=\"card\" style=\"text-align: left;\">\n\t  <div class=\"card-body\">\n\t    <h4 class=\"card-title\" *ngIf=\"!embeddedView\">{{action}} User</h4>\n\t    <form (ngSubmit)=\"onSubmit()\" #editForm=\"ngForm\">\n\t    \n\t     <div *ngIf=\"action == 'Edit'\">\n<div *ngIf=\"!hiddenFields.includes('username')\">\n\n        <fieldset class=\"form-group\">\n          <label for=\"EditUsername\">Username</label>\n          \n\n          <div class=\"input-group\">\n            <input type=\"text\" class=\"form-control rounded\" id=\"EditUsername\" \n                    required\n                    \n                    \n                 \n                    [(ngModel)]=\"detail['username']\" name=\"EditUsername\"\n                    #EditUsername=\"ngModel\">\n            <div *ngIf=\"detail['username']\" \n                  class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('username')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n            </div>\n          </div>\n\n          <div [hidden]=\"EditUsername.valid || EditUsername.pristine || EditUsername.errors.minlength\"\n           class=\"alert alert-danger\">\n\n            <div *ngIf=\"EditUsername.errors && EditUsername.errors.required\">\n              Username is required.\n              </div>\n \n\n          </div>\n        \n        </fieldset>\n\n    \n</div>\n<div *ngIf=\"!hiddenFields.includes('email')\">\n\n        <fieldset class=\"form-group\">\n          <label for=\"EditEmail\">Email</label>\n          \n\n          <div class=\"input-group\">\n            <input type=\"text\" class=\"form-control rounded\" id=\"EditEmail\"\n                    required\n                    \n                    \n                    \n                 \n                    [(ngModel)]=\"detail['email']\" name=\"EditEmail\"\n                    #EditEmail=\"ngModel\">\n            <div *ngIf=\"detail['email']\" \n                  class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('email')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n            </div>\n          </div>\n\n          <div [hidden]=\"EditEmail.valid || EditEmail.pristine || EditEmail.errors.minlength\"\n           class=\"alert alert-danger\">\n\n           <div *ngIf=\"EditEmail.errors && EditEmail.errors.required\">\n            Email is required.\n            </div>\n\n          </div>\n        \n        </fieldset>\n\n    \n</div>\n<div *ngIf=\"!hiddenFields.includes('phone')\">\n\n        <fieldset class=\"form-group\">\n          <label for=\"EditPhone\">Phone</label>\n          \n\n          <div class=\"input-group\">\n            <input type=\"text\" class=\"form-control rounded\" id=\"EditPhone\" \n                    \n                    \n                    \n                 \n                    [(ngModel)]=\"detail['phone']\" name=\"EditPhone\"\n                    #EditPhone=\"ngModel\">\n            <div *ngIf=\"detail['phone']\" \n                  class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('phone')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n            </div>\n          </div>\n\n          <div [hidden]=\"EditPhone.valid || EditPhone.pristine || EditPhone.errors.minlength\"\n           class=\"alert alert-danger\">\n\n \n\n          </div>\n        \n        </fieldset>\n\n    \n</div>\n<div *ngIf=\"!hiddenFields.includes('status')\">\n\n        <fieldset class=\"form-group\">\n          <label for=\"EditStatus\">Status</label>\n          \n\n          <div class=\"form-check\"\n\n              [ngClass]=\"{'ng-valid': true} \"\n            >\n\n            <div class=\"form-check-inline\">\n              <input type=\"radio\" name=\"EditStatus\" \n                class=\"form-check-input\"\n                \n                id=\"EditStatusEnabled\" [value]=\"'Enabled'\"\n                 \n                [(ngModel)]=\"detail['status']\"\n                #EditStatus=\"ngModel\">\n              <label class=\"form-check-label\">Enabled</label>\n            </div>\n\n            <div class=\"form-check-inline\">\n              <input type=\"radio\" name=\"EditStatus\" \n                class=\"form-check-input\"\n                \n                id=\"EditStatusDisabled\" [value]=\"'Disabled'\"\n                 \n                [(ngModel)]=\"detail['status']\"\n                #EditStatus=\"ngModel\">\n              <label class=\"form-check-label\">Disabled</label>\n            </div>\n\n            <div class=\"form-check-inline\">\n              <input type=\"radio\" name=\"EditStatus\" \n                class=\"form-check-input\"\n                \n                id=\"EditStatusPending\" [value]=\"'Pending'\"\n                 \n                [(ngModel)]=\"detail['status']\"\n                #EditStatus=\"ngModel\">\n              <label class=\"form-check-label\">Pending</label>\n            </div>\n\n            <span *ngIf=\"enums['status'].includes(detail['status'])\" \n              class=\"icon-clear\" (click)=\"clearValueFromDetail('status')\">\n              <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n            </span> \n          </div>\n\n          <div [hidden]=\"EditStatus.valid || EditStatus.pristine || EditStatus.errors.minlength\"\n           class=\"alert alert-danger\">\n\n \n\n          </div>\n        \n        </fieldset>\n\n    \n</div>\n\n         </div>\t\n\t     <div *ngIf=\"action == 'Create' || action == 'Add' \">\n<div *ngIf=\"!hiddenFields.includes('username')\">\n\n        <fieldset class=\"form-group\">\n          <label for=\"EditUsername\">Username</label>\n          \n\n          <div class=\"input-group\">\n            <input type=\"text\" class=\"form-control rounded\" id=\"EditUsername\" \n                    required\n                    \n                    \n                 \n                    [(ngModel)]=\"detail['username']\" name=\"EditUsername\"\n                    #EditUsername=\"ngModel\">\n            <div *ngIf=\"detail['username']\" \n                  class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('username')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n            </div>\n          </div>\n\n          <div [hidden]=\"EditUsername.valid || EditUsername.pristine || EditUsername.errors.minlength\"\n           class=\"alert alert-danger\">\n\n            <div *ngIf=\"EditUsername.errors && EditUsername.errors.required\">\n              Username is required.\n              </div>\n \n\n          </div>\n        \n        </fieldset>\n\n    \n</div>\n<div *ngIf=\"!hiddenFields.includes('email')\">\n\n        <fieldset class=\"form-group\">\n          <label for=\"EditEmail\">Email</label>\n          \n\n          <div class=\"input-group\">\n            <input type=\"text\" class=\"form-control rounded\" id=\"EditEmail\" \n                    required\n                    \n                    \n                 \n                    [(ngModel)]=\"detail['email']\" name=\"EditEmail\"\n                    #EditEmail=\"ngModel\">\n            <div *ngIf=\"detail['email']\" \n                  class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('email')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n            </div>\n          </div>\n\n          <div [hidden]=\"EditEmail.valid || EditEmail.pristine || EditEmail.errors.minlength\"\n           class=\"alert alert-danger\">\n\n \n           <div *ngIf=\"EditEmail.errors && EditEmail.errors.required\">\n            Email is required.\n            </div>\n\n          </div>\n        \n        </fieldset>\n\n    \n</div>\n<div *ngIf=\"!hiddenFields.includes('phone')\">\n\n        <fieldset class=\"form-group\">\n          <label for=\"EditPhone\">Phone</label>\n          \n\n          <div class=\"input-group\">\n            <input type=\"text\" class=\"form-control rounded\" id=\"EditPhone\" \n                    \n                    \n                    \n                 \n                    [(ngModel)]=\"detail['phone']\" name=\"EditPhone\"\n                    #EditPhone=\"ngModel\">\n            <div *ngIf=\"detail['phone']\" \n                  class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('phone')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n            </div>\n          </div>\n\n          <div [hidden]=\"EditPhone.valid || EditPhone.pristine || EditPhone.errors.minlength\"\n           class=\"alert alert-danger\">\n\n \n\n          </div>\n        \n        </fieldset>\n\n    \n</div>\n<div *ngIf=\"!hiddenFields.includes('status')\">\n\n        <fieldset class=\"form-group\">\n          <label for=\"EditStatus\">Status</label>\n          \n\n          <div class=\"form-check\"\n\n              [ngClass]=\"{'ng-valid': true} \"\n            >\n\n            <div class=\"form-check-inline\">\n              <input type=\"radio\" name=\"EditStatus\" \n                class=\"form-check-input\"\n                \n                id=\"EditStatusEnabled\" [value]=\"'Enabled'\"\n                 \n                [(ngModel)]=\"detail['status']\"\n                #EditStatus=\"ngModel\">\n              <label class=\"form-check-label\">Enabled</label>\n            </div>\n\n            <div class=\"form-check-inline\">\n              <input type=\"radio\" name=\"EditStatus\" \n                class=\"form-check-input\"\n                \n                id=\"EditStatusDisabled\" [value]=\"'Disabled'\"\n                 \n                [(ngModel)]=\"detail['status']\"\n                #EditStatus=\"ngModel\">\n              <label class=\"form-check-label\">Disabled</label>\n            </div>\n\n            <div class=\"form-check-inline\">\n              <input type=\"radio\" name=\"EditStatus\" \n                class=\"form-check-input\"\n                \n                id=\"EditStatusPending\" [value]=\"'Pending'\"\n                 \n                [(ngModel)]=\"detail['status']\"\n                #EditStatus=\"ngModel\">\n              <label class=\"form-check-label\">Pending</label>\n            </div>\n\n            <span *ngIf=\"enums['status'].includes(detail['status'])\" \n              class=\"icon-clear\" (click)=\"clearValueFromDetail('status')\">\n              <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n            </span> \n          </div>\n\n          <div [hidden]=\"EditStatus.valid || EditStatus.pristine || EditStatus.errors.minlength\"\n           class=\"alert alert-danger\">\n\n \n\n          </div>\n        \n        </fieldset>\n\n    \n</div>\n<div *ngIf=\"!hiddenFields.includes('password')\">\n\n        <fieldset class=\"form-group\">\n          <label for=\"EditPassword\">Password</label>\n          \n\n          <div class=\"input-group\">\n            <input type=\"password\" class=\"form-control rounded\" id=\"EditPassword\" \n                    required\n                    \n                    \n                 \n                    [(ngModel)]=\"detail['password']\" name=\"EditPassword\"\n                    #EditPassword=\"ngModel\">\n            <div *ngIf=\"detail['password']\" \n                  class=\"input-group-append icon-clear-inside \" (click)=\"clearValueFromDetail('password')\">\n                  <i class=\"fas fa-times-circle\" title=\"Clear\"></i>\n            </div>\n          </div>\n\n          <div [hidden]=\"EditPassword.valid || EditPassword.pristine || EditPassword.errors.minlength\"\n           class=\"alert alert-danger\">\n\n            <div *ngIf=\"EditPassword.errors && EditPassword.errors.required\">\n              Password is required.\n            </div>\n \n\n          </div>\n        \n        </fieldset>\n\n        <fieldset class=\"form-group\">\n          <label for=\"muserEditConfirmPassword\">Confirm Password</label>\n\n          <input type=\"password\" class=\"form-control\" id=\"muserEditConfirmPassword\" \n                    required\n                    passwordValidateEqual=\"EditPassword\"\n                    [(ngModel)]=\"confirmPassword\" name=\"muserEditConfirmPassword\"\n                    #muserEditConfirmPassword=\"ngModel\">\n          <div [hidden]=\"muserEditConfirmPassword.valid || muserEditConfirmPassword.pristine || muserEditConfirmPassword.errors.minlength\"\n                    class=\"alert alert-danger\">\n            <div *ngIf=\"muserEditConfirmPassword.errors && muserEditConfirmPassword.errors.required\">\n              Confirm Password is required.\n            </div> \n            <div *ngIf=\"muserEditConfirmPassword.errors && muserEditConfirmPassword.errors.passwordValidateEqual\">\n              Password doesn't match.\n            </div> \n          </div>\n        </fieldset>\n    \n</div>\n\n         </div>\t\n         \n\t\t<div class=\"action-buttons-center\">\n\t     \t<button type=\"submit\" class=\"btn btn-success\" \n     \t\t\t[disabled]=\"!editForm.form.valid\">Submit</button>\n\t     \t<button class=\"btn btn-outline-success\" \n     \t\t\ttype=\"button\" (click)=\"editCancel()\">Cancel</button>\n\t\t</div>\n\t    </form>\n\t  </div>\n\t</div>\n</div>\n\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router, ActivatedRoute }    from '@angular/router';\nimport { Injector } from '@angular/core';\n\nimport { MuserEditComponent } from './muser-edit.component';\nimport { MuserService } from '../muser.service';\n\n\nimport { Directive, Attribute } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidationErrors, AbstractControl, FormGroup } from '@angular/forms';\n@Directive({\n  selector: '[passwordValidateEqual]',\n  providers: [{provide: NG_VALIDATORS, useExisting: PassswordEqualValidator, multi: true}]\n})\nexport class PassswordEqualValidator implements Validator {\n    constructor( @Attribute('passwordValidateEqual') public passwordField: string) {}\n\n    validate(c: AbstractControl): { [key: string]: any } {\n        // self value (e.g. retype password)\n        let v = c.value;\n\n        // control value (e.g. password)\n        let e = c.root.get(this.passwordField);\n\n        // value not equal\n        if (e && v !== e.value) return {\n            passwordValidateEqual: \"Passwords doesn't match\"\n        }\n        return null;\n    }\n}\n\n@Component({\n  selector: 'app-muser-pass',\n  templateUrl: './muser-pass.component.html',\n  styleUrls: ['./muser-edit.component.css']\n})\nexport class MuserPassComponent extends MuserEditComponent implements OnInit {        \n    @Input() \n    public id: string;\n    @Output() \n    public done = new EventEmitter<boolean>();\n    @Input()\n    public embeddedView: boolean;\n  \n    public tempString;\n\n    constructor(\n      public muserService: MuserService,\n      public injector: Injector,\n      public router: Router,\n      public route: ActivatedRoute,\n      public location: Location) {\n          super( \n                 muserService, injector, router, route, location);\n    }\n\n    ngOnInit() {\n        if (this.id) {\n        } else {\n            this.id = this.route.snapshot.paramMap.get('id');\n        }\n        this.action=\"Edit\";\n        this.populateDetailForAction(this.id, \"edit\");\n    }\n}\n","<div class=\"edit\">\n\t<div class=\"card\" style=\"text-align: left;\">\n\t  <div class=\"card-body\">\n\t    <h4 class=\"card-title\">Change Password</h4>    \n\t    <div class=\"card-text\">\n\n          <div *ngIf=\"detail['username']\" class=\"row\">\n\t\t\t<div class=\"col-3\"><label class=\"field-label\">Username</label></div>\n\t\t\t<div class=\"col-9\">  {{detail['username']}}</div>\n          </div>\n\n          <div *ngIf=\"detail['email']\" class=\"row\">\n\t\t\t<div class=\"col-3\"><label class=\"field-label\">Email</label></div>\n\t\t\t<div class=\"col-9\">  {{detail['email']}}</div>\n          </div>\n\n          <div *ngIf=\"detail['phone']\" class=\"row\">\n\t\t\t<div class=\"col-3\"><label class=\"field-label\">Phone</label></div>\n\t\t\t<div class=\"col-9\">  {{detail['phone']}}</div>\n          </div>\n\t\t</div>\n\t    <hr/>\n\t    <form (ngSubmit)=\"onSubmit()\" #passForm=\"ngForm\">\n\t        \n\t      <fieldset class=\"form-group\">\n\t        <label for=\"muserEditPassword\">Password</label>\n\n\t        <input type=\"password\" class=\"form-control\" id=\"muserEditPassword\" \n\t                required\n\t                [(ngModel)]=\"detail['password']\" name=\"muserEditPassword\"\n\t                #muserEditPassword=\"ngModel\">\n\t        <div [hidden]=\"muserEditPassword.valid || muserEditPassword.pristine || muserEditPassword.errors.minlength\"\n     \t\t\tclass=\"alert alert-danger\">\n\t          <div *ngIf=\"muserEditPassword.errors && muserEditPassword.errors.required\">\n    \t        Password is required.\n  \t          </div> \n\t        </div>\n\t      </fieldset>\n\n\t      <fieldset class=\"form-group\">\n\t        <label for=\"muserEditConfirmPassword\">Confirm Password</label>\n\n\t        <input type=\"password\" class=\"form-control\" id=\"muserEditConfirmPassword\" \n\t                required\n\t                passwordValidateEqual=\"muserEditPassword\"\n\t                [(ngModel)]=\"tempString\" name=\"muserEditConfirmPassword\"\n\t                #muserEditConfirmPassword=\"ngModel\">\n\t        <div [hidden]=\"muserEditConfirmPassword.valid || muserEditConfirmPassword.pristine || muserEditConfirmPassword.errors.minlength\"\n     \t\t\tclass=\"alert alert-danger\">\n\t          <div *ngIf=\"muserEditConfirmPassword.errors && muserEditConfirmPassword.errors.required\">\n    \t        Confirm Password is required.\n  \t          </div> \n\t          <div *ngIf=\"muserEditConfirmPassword.errors && muserEditConfirmPassword.errors.passwordValidateEqual\">\n    \t        Password doesn't match.\n  \t          </div> \n\t        </div>\n\t      </fieldset>\n\n    \n\t\t<div class=\"action-buttons-center\">\n\t     \t<button type=\"submit\" class=\"btn btn-success\" \n     \t\t\t[disabled]=\"!passForm.form.valid\">Submit</button>\n\t     \t<button class=\"btn btn-outline-success\" \n     \t\t\ttype=\"button\" (click)=\"editCancel()\">Cancel</button>\n\t\t</div>\n\t    </form>\n\t  </div>\n\t</div>\n</div>\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Injector } from '@angular/core';\n\nimport { MuserComponent, ViewType } from '../muser.component';\nimport { MuserService } from '../muser.service';\n\n\n\n  \n@Component({\n  selector: 'app-muser-list',\n  templateUrl: './muser-list.component.html',\n  styleUrls: ['./muser-list.component.css']\n})\nexport class MuserListComponent extends MuserComponent implements OnInit {\n\n  public minDate = {year: (new Date()).getFullYear() - 100, month: 1, day: 1};\n\n  @Input()\n  public inputData:any;\n  @Input()\n  public searchObj:any;\n  @Input()\n  public categoryBy:string; //field name whose value is used as category\n  \n\n  constructor(\n\n      public muserService: MuserService,\n      public injector: Injector,\n      public router: Router,\n      public route: ActivatedRoute,\n      public location: Location) {\n          super(\n                muserService, injector, router, route, location);\n          this.view = ViewType.LIST;\n\n          this.enums['status'] = ['Enabled', 'Disabled', 'Pending', ];\n\n          this.stringFields.push('username');\n          this.stringFields.push('email');\n          this.stringFields.push('phone');\n          this.stringFields.push('status');\n\n\n          this.dateFields = ['since', ];\n\n\n\n\n\n\n\n          this.listViewFilter = 'list';\n\n          const listCategories = [];\n          this.listCategory1 = listCategories[0] || {};\n          this.listCategory2 = listCategories[1] || {};\n  }\n\n  ngOnInit() {\n      this.adjustListViewForWindowSize();\n\n      // this is to initialize the detail that will be used for search condition selection\n      const detail = this.searchObj || {};\n      this.detail = this.formatDetail(detail);\n      this.populateList();\n  }\n\n  static getInstance() {\n    //used by others to call some common functions\n    return new MuserListComponent(null, null, null, null, null);\n  }\n}\n\n","\n\n\n<ul *ngIf=\"listCategory1.listCategoryField\" class=\"nav nav-pills category-nav\">\n\t<li *ngFor=\"let ele of categoryDisplays; let idx = index;\" class=\"nav-item\" >\n\t\t<a class=\"nav-link\" [ngClass]=\"{'active': idx === selectedCategory }\" [routerLink]=\"['.']\" [queryParamsHandling]=\"'preserve'\" (click)=\"categorySelected(idx)\">{{ele}}</a>\n\t</li>\n</ul>\n\n\n<div>\n\t<div class=\"container search\">\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-9\">\n\n\n\t\t\t    <div class=\"input-group\">\n\t              <input type=\"search\" class=\"form-control border border-secondary\" id=\"muserTextSearch\" \n\t\t\t\t\t\t#muserTextSearch [(ngModel)]=\"searchText\"\n\t\t\t\t\t\t(keyup.enter)=\"$event.target.blur();searchList();false\"\n\t\t\t\t\t    placeholder=\"Search for username, email, phone, status\"> \n\t\t\t\t  <div *ngIf=\"searchText\" class=\"input-group-append icon-clear-inside\">\n\t\t\t\t\t<span >\n\t\t\t\t\t    <i class=\"fas fa-times-circle\" (click)=\"onSearchTextClear()\" title=\"Clear\"></i>\n\t\t\t\t    </span>\n\t\t\t\t  </div>\n\t\t\t\t  <div class=\"input-group-append\">\n\t\t\t\t    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"searchList()\"><i class=\"fas fa-search\"></i></button>\n\t\t\t\t  </div>\n\t\t\t\t</div>\n\t\t\t\n\n\t\t\t\t<div class=\"text-center\">\n                    <span  class=\"pointer\" (click)=\"toggleMoreSearch()\">\n                        <span class=\"refine-search-text\">Refine Search &nbsp;</span>\n                        <span>\n                            <i *ngIf=\"!moreSearchOpened\"  class=\"fas fa-plus-circle\" title=\"More\"></i>\n                            <i *ngIf=\"moreSearchOpened\" class=\"fas fa-minus-circle\"  title=\"Less\"></i>\n                        </span>\n                    </span>\n\t\t\t\t</div>\n\t\t\t    <div class=\"shadow\" *ngIf=\"moreSearchOpened\">\n\t\t\t\t\t<div class=\"card\">\n\t\t\t\t\t\t<div class=\"card-body\">\n\t    <div class=\"single-line-edit\">\n\t      <div class=\"row\">\n\t        <div class=\"col-3\"><label for=\"muserEditSince\">Since</label></div>\n\t        <div class=\"col-8\">\n\n \n\t        <div class=\"input-group\">\n\t\t      <input class=\"form-control\" id=\"muserEditSince\" placeholder=\"{{dateFormat}}\"\n\t\t             [(ngModel)]=\"detail['since']['from']\" name=\"muserEditSince\"\n\t\t             ngbDatepicker [minDate]=\"minDate\" #muserEditSince=\"ngModel\">\n\t\t      <span>&nbsp; ~ &nbsp;</span>\n\t\t      <input class=\"form-control\" id=\"muserEditSince\" placeholder=\"{{dateFormat}}\"\n\t\t             [(ngModel)]=\"detail['since']['to']\" name=\"muserEditSince\"\n\t\t             ngbDatepicker [minDate]=\"minDate\" #muserEditSince=\"ngModel\">\n\n\t\t      <div class=\"input-group-append\">\n\t\t        <button class=\"btn btn-outline-secondary\" (click)=\"onDateSelectionToggle('since')\" type=\"button\">\n\t\t          <i class=\"fas fa-calendar-alt\"></i>\n\t\t        </button>\n\t\t      </div>\n\t\t    </div><!-- input group --> \n\t\t    <div class=\"date-selection-pop\" *ngIf=\"detail['since']['pop']\">\n\t\t\t    <ngb-datepicker #dp [minDate]=\"minDate\" (select)=\"onDateSelection('since', $event)\" [displayMonths]=\"2\" [dayTemplate]=\"muserEditSinceT\">\n\t\t\t\t</ngb-datepicker>\n\t\t\t\t<ng-template #muserEditSinceT let-muserEditSinceDate=\"date\" let-muserEditSinceFocused=\"focused\">\n\t\t\t\t  <span class=\"custom-day\"\n\t\t\t\t        [class.focused]=\"muserEditSinceFocused\"\n\t\t\t\t        [class.range]=\"isRange('since', muserEditSinceDate)\"\n\t\t\t\t        [class.faded]=\"isHovered('since', muserEditSinceDate) || isInside('since', muserEditSinceDate)\"\n\t\t\t\t        (mouseenter)=\"hoveredDate = muserEditSinceDate\"\n\t\t\t\t        (mouseleave)=\"hoveredDate = null\">\n\t\t\t\t    {{ muserEditSinceDate.day }}\n\t\t\t\t  </span>\n\t\t\t\t</ng-template>\n\t\t    </div>      \n\n\t      </div>\n\t      \n\t      <div class=\"col-1\">\n\t\t    <div class=\"icon-clear\" (click)=\"clearValueFromDetail('since')\"\n\t\t        *ngIf=\"checkValueDefinedFromDetail('since')\"\n\t\t        ><i class=\"fas fa-times-circle\" title=\"Clear\"></i></div>\n\t      </div>\n\t    </div>\n      </div>\n      \n \n\n\t\t\t\t\t\t  <div class=\"action-buttons\" style=\"margin-top: 10px;\">\n\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-outline-success\" (click)=\"onSearchClear()\">Reset</button>\n\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" (click)=\"searchList()\">Search</button>\n\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t        </div>\n\t\t        <div *ngIf=\"!moreSearchOpened\" style=\"text-align: left;\">\n\t\t\t\t\t<span class=\"badge badge-pill badge-info\" *ngFor=\"let value of searchMoreDetail\">\n\t\t\t\t\t    <a (click)=\"toggleMoreSearch()\" class=\"pointer\"> {{value[0]}}: {{value[1]}}</a>\n\t\t\t\t\t    <i class=\"fas fa-times-circle icon-clear-badge\" (click)=\"clearValueFromDetailAndSearchList(value[0])\" title=\"Clear\"></i>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t    \n\t\t\t\n\n\t\t    </div>\n\t\t</div>\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col\">\n\t\t        <div class=\"action-buttons\">\n\t\t\t\t\t<lib-mdds-action-email *ngIf=\"emailFields.length > 0\" [emailFields]=\"emailFields\" (componentEvents)=\"onActionBaseEvent($event)\"></lib-mdds-action-email>\n\n\t\t\t\t\t<a [routerLink]=\"['../new' ]\" [skipLocationChange]=\"false\" class=\"btn btn-outline-primary\">Create</a>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<hr/>\n\t\t<div class=\"row justify-content-end mt-3\">\n\t\t\n\t\t\t<div *ngIf=\"list.length > 2\" class=\"sort-selection mr-5\">\n\t\t\t\t\t<div class=\"dropdown\" style=\"width: 100%;\">\n\t\t\t\t\t\t<button class=\"sort-dropdown btn btn-light btn-sm dropdown-toggle\"\n\t\t\t\t\t\t\ttype=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\t\t\t\t\t\t\tSort: <span *ngIf=\"listSortField && !viewHiddenFields.includes(listSortField)\">{{listSortFieldDisplay}}\n\t\t\t\t\t\t\t\t\t<i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up\"></i>\n\t\t\t\t\t\t\t\t\t<i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down\"></i>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n\t\t\t\t\t\t\t<a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('username', 'Username', 'asc')\">Username<i class=\"fas fa-arrow-up\"></i></a>\n\t\t\t\t\t\t\t<a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('username', 'Username', 'desc')\">Username<i class=\"fas fa-arrow-down\"></i></a>\n\t\t\t\t\t\t\t<a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('email', 'Email', 'asc')\">Email<i class=\"fas fa-arrow-up\"></i></a>\n\t\t\t\t\t\t\t<a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('email', 'Email', 'desc')\">Email<i class=\"fas fa-arrow-down\"></i></a>\n\t\t\t\t\t\t\t<a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('phone', 'Phone', 'asc')\">Phone<i class=\"fas fa-arrow-up\"></i></a>\n\t\t\t\t\t\t\t<a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('phone', 'Phone', 'desc')\">Phone<i class=\"fas fa-arrow-down\"></i></a>\n\t\t\t\t\t\t\t<a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('since', 'Since', 'asc')\">Since<i class=\"fas fa-arrow-up\"></i></a>\n\t\t\t\t\t\t\t<a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('since', 'Since', 'desc')\">Since<i class=\"fas fa-arrow-down\"></i></a>\n\t\t\t\t\t\t\t<a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('status', 'Status', 'asc')\">Status<i class=\"fas fa-arrow-up\"></i></a>\n\t\t\t\t\t\t\t<a class=\"dropdown-item pointer\" (click)=\"setListSortAndRefresh('status', 'Status', 'desc')\">Status<i class=\"fas fa-arrow-down\"></i></a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t</div>\n\t\t<div class=\"d-flex justify-content-between\">\n\t\t\t<div>\n\t\t\t\t<div *ngIf=\"list.length > 0\">\n\n\t\t\t\t\t<input type=\"radio\" name=\"view-filter\" id=\"list-view\" class=\"view-radio\"\n\t\t\t\t\t\t(click)=\"setListViewFilter('list')\" [checked]=\"isShowListView('list')\">\n\t\t\t\t\t<label for=\"list-view\"><i class=\"fa fa-th-list\"></i></label>\n\n\t\t\t\t\t<input type=\"radio\" name=\"view-filter\" id=\"grid-view\" class=\"view-radio\"\n\t\t\t\t\t\t(click)=\"setListViewFilter('grid')\" [checked]=\"isShowListView('grid')\">\n\t\t\t\t\t\t<label for=\"grid-view\"><i class=\"fa fa-th\"></i></label>\n\n\t\t\t\t\t<input type=\"radio\" name=\"view-filter\" id=\"table-view\" class=\"view-radio\"\n\t\t\t\t\t\t(click)=\"setListViewFilter('table')\" [checked]=\"isShowListView('table')\">\n\t\t\t\t\t\t<label for=\"table-view\"><i class=\"fa fa-list-alt\"></i></label>\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<div class=\"total_counts\">\n\t\t\t\t\t<span *ngIf=\"list.length > 2\">Total: <b>{{totalCount}}</b></span>\n\t\t\t\t\t<a class=\"ml-3\" routerLink=\".\" (click)=\"onRefresh()\"><i class=\"fa fa-sync-alt\"></i></a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"d-flex justify-content-center mt-2\">\n\t\t\t\t<div *ngIf=\"totalPages > 1\">\n\t\t\t\t\t<ul class=\"pagination justify-content-center\">\n\t\t\t\t\t\t<li class=\"page-item\"\n\t\t\t\t\t\t\t\t[ngClass]=\"{'disabled': page<=1}\">\n\t\t\t\t\t\t<a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\"\n\t\t\t\t\t\t\taria-label=\"Previous\">\n\t\t\t\t\t\t\t<span aria-hidden=\"true\">&laquo;</span>\n\t\t\t\t\t\t\t<span class=\"sr-only\">Previous</span>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\n\t\t\t\t\t\t<li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n\n\t\t\t\t\t\t<li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\"\n\t\t\t\t\t\t\t\t[ngClass]=\"{'active': p==page}\">\n\t\t\t\t\t\t\t<a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n\t\t\t\t\t\t</li>\n\n\t\t\t\t\t\t<li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n\t\t\t\t\t\t<li class=\"page-item\"\n\t\t\t\t\t\t\t\t[ngClass]=\"{'disabled': page>=totalPages}\">\n\t\t\t\t\t\t<a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\"\n\t\t\t\t\t\t\taria-label=\"Next\">\n\t\t\t\t\t\t\t<span aria-hidden=\"true\">&raquo;</span>\n\t\t\t\t\t\t\t<span class=\"sr-only\">Next</span>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t</div>\n\n\t</div>\n\t<div class=\"no-records\" *ngIf=\"list.length === 0\">\n\t\t<span *ngIf=\"loaded\">No records found.</span>\n\t\t<span *ngIf=\"!loaded\">Loading...</span>\n\t</div>\n\t<div *ngIf=\"list.length > 0\">\n\t<div class=\"listview\" *ngIf=\"isShowListView('list')\">\n\t\t<div class=\"list-block\" *ngFor=\"let detail of list;  let i = index; let list_index = index;\">\n\t\t\t<hr *ngIf=\"i==0\" class=\"list-diverder\">\n\t\t\t<div class=\"list-card text-left clickable-card \"\n\t\t\t\t[ngClass]=\"{'clicked-row': clickedId==detail['_id']}\" >\n\t\t\t\t<div class=\"list-fields pointer\" (click)=\"onDetailLinkClicked(detail['_id'])\" >\n\n      <div class=\"list-body-fields ml-1 d-inline-block\">\n        <h5>\n          <div class=\"mr-1 d-inline-block\">\n                            \n                    {{detail['username']}}\n\n          </div>\n        </h5>\n        <div *ngIf=\"detail['email']\" class=\"mr-3 d-inline-flex flex-wrap\">\n          <div><label>Email:</label></div>\n          <div class=\"ml-3\">                \n                    {{detail['email']}}\n\n          </div>\n        </div>\n        <div *ngIf=\"detail['phone']\" class=\"mr-3 d-inline-flex flex-wrap\">\n          <div><label>Phone:</label></div>\n          <div class=\"ml-3\">                \n                    {{detail['phone']}}\n\n          </div>\n        </div>\n        <div *ngIf=\"detail['since']\" class=\"mr-3 d-inline-flex flex-wrap\">\n          <div><label>Since:</label></div>\n          <div class=\"ml-3\">                  {{detail['since']?detail['since']['value']:\"\"}}\n\n          </div>\n        </div>\n        <div *ngIf=\"detail['status']\" class=\"mr-3 d-inline-flex flex-wrap\">\n          <div><label>Status:</label></div>\n          <div class=\"ml-3\">                \n                    {{detail['status']}}\n\n          </div>\n        </div>\n      </div>\n\n\t\t\t\t</div>\n\t\t\t\t<div class=\"card-action-icons d-inline-block\">\n\t\t\t\t\t    <a [routerLink]=\"['../password', detail['_id'] ]\" ><i class=\"fas fa-key\" title=\"Change Password\"></i></a>\n\n\t\t\t\t\t\t<a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<hr class=\"list-diverder\">\n\t\t</div>\n\t</div>\n\n\n\n\t<div class=\"gridview\" *ngIf=\"isShowListView('grid')\">\n\t\t<div class=\"grid-block\" *ngFor=\"let detail of list;  let i = index; let list_index = index;\">\n\t\t\t<div class=\"card text-left h-100 clickable-card \"\n\t\t\t\t[ngClass]=\"{'clicked-row': clickedId==detail['_id']}\" >\n\t\t\t\t<div class=\"grid-fields pointer\" (click)=\"onDetailLinkClicked(detail['_id'])\" >\n\n      <div class=\"card-header grid-head\">\n        <div class=\"ml-1 d-inline-block\">\n          <h5>\n            <div class=\"mr-1 d-inline-block\">\n                              \n                    {{detail['username']}}\n\n            </div>\n          </h5>\n        </div>\n      </div>\n      <div class=\"card-body\">\n          <div *ngIf=\"detail['email']\" class=\"d-flex flex-wrap\">\n            <div class=\"\"><label>Email:</label></div>\n            <div class=\"ml-3\">                \n                    {{detail['email']}}\n</div>\n          </div>\n          <div *ngIf=\"detail['phone']\" class=\"d-flex flex-wrap\">\n            <div class=\"\"><label>Phone:</label></div>\n            <div class=\"ml-3\">                \n                    {{detail['phone']}}\n</div>\n          </div>\n          <div *ngIf=\"detail['since']\" class=\"d-flex flex-wrap\">\n            <div class=\"\"><label>Since:</label></div>\n            <div class=\"ml-3\">                  {{detail['since']?detail['since']['value']:\"\"}}\n</div>\n          </div>\n          <div *ngIf=\"detail['status']\" class=\"d-flex flex-wrap\">\n            <div class=\"\"><label>Status:</label></div>\n            <div class=\"ml-3\">                \n                    {{detail['status']}}\n</div>\n          </div>\n      </div>\n\n\t\t\t\t</div>\n\t\t\t\t<div class=\"card-action-icons\">\n\t\t\t\t\t\n\t\t\t\t\t\t<a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\n\t<table *ngIf=\"isShowListView('table')\" class=\"table table-bordered table-hover\">\n\t    <thead class=\"thead-light\">\n\t    \t<tr>\n\t\t        <th scope=\"col\">#</th>\n\n\t\t\t\t<th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('username', 'Username')\">\n\t\t\t\t\tUsername\n\t\t\t\t\t<span *ngIf=\"listSortField === 'username'\">\n\t\t\t\t\t\t<i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n\t\t\t\t\t\t<i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n\t\t\t\t\t</span>\n\t\t\t\t</th>\n\t\t\t\t<th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('email', 'Email')\">\n\t\t\t\t\tEmail\n\t\t\t\t\t<span *ngIf=\"listSortField === 'email'\">\n\t\t\t\t\t\t<i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n\t\t\t\t\t\t<i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n\t\t\t\t\t</span>\n\t\t\t\t</th>\n\t\t\t\t<th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('phone', 'Phone')\">\n\t\t\t\t\tPhone\n\t\t\t\t\t<span *ngIf=\"listSortField === 'phone'\">\n\t\t\t\t\t\t<i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n\t\t\t\t\t\t<i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n\t\t\t\t\t</span>\n\t\t\t\t</th>\n\t\t\t\t<th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('since', 'Since')\">\n\t\t\t\t\tSince\n\t\t\t\t\t<span *ngIf=\"listSortField === 'since'\">\n\t\t\t\t\t\t<i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n\t\t\t\t\t\t<i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n\t\t\t\t\t</span>\n\t\t\t\t</th>\n\t\t\t\t<th class=\"pointer\" scope=\"col\" (click)=\"toggleListSort('status', 'Status')\">\n\t\t\t\t\tStatus\n\t\t\t\t\t<span *ngIf=\"listSortField === 'status'\">\n\t\t\t\t\t\t<i *ngIf=\"listSortOrder === 'asc'\" class=\"fas fa-arrow-up th-sort-arrow\"></i>\n\t\t\t\t\t\t<i *ngIf=\"listSortOrder === 'desc'\" class=\"fas fa-arrow-down th-sort-arrow\"></i>\n\t\t\t\t\t</span>\n\t\t\t\t</th><th scope=\"col\" style=\"width:3.8rem;\"></th>\n\t    \t</tr>\n\t    </thead>\n\t    <tbody>\n\t        <tr *ngFor=\"let detail of list;  let i = index; let list_index = index;\" [ngClass]=\"{'clicked-row': clickedId==detail['_id']}\">\n\t            <td scope=\"row\" (click)=\"onDetailLinkClicked(detail['_id'])\"  class=\"pointer read-more\">\n\t            \t{{(page-1)*perPage+i+1}}\n\t            </td>\n\n\t            <td (click)=\"onDetailLinkClicked(detail['_id'])\"  class=\"pointer\">\n\t            \t                \n                    {{detail['username']}}\n\n\t            </td>\n\t            <td (click)=\"onDetailLinkClicked(detail['_id'])\"  class=\"pointer\">\n\t            \t                \n                    {{detail['email']}}\n\n\t            </td>\n\t            <td (click)=\"onDetailLinkClicked(detail['_id'])\"  class=\"pointer\">\n\t            \t                \n                    {{detail['phone']}}\n\n\t            </td>\n\t            <td (click)=\"onDetailLinkClicked(detail['_id'])\"  class=\"pointer\">\n\t            \t                  {{detail['since']?detail['since']['value']:\"\"}}\n\n\t            </td>\n\t            <td (click)=\"onDetailLinkClicked(detail['_id'])\"  class=\"pointer\">\n\t            \t                \n                    {{detail['status']}}\n\n\t            </td>\n\t            <td>\n\t\t\t\t\t\n\t\t\t\t\t\t<a [routerLink]=\"['../edit', detail['_id'] ]\" [skipLocationChange]=\"false\"><i class=\"fas fa-edit\" title=\"Edit\"></i></a>\n\t\t\t\t\t\n\t            \t\n\t\t\t\t\t\n\t\t\t\t\t\n\t            </td>\n\t        </tr>\n\t    </tbody>\n\t</table>\n\n\n\t</div>\n\t<div class=\"container\">\n\t\t<div class=\"row justify-content-end mt-3\">\n\t\t\n\t\t\t\n\t\t</div>\n\t\t<div class=\"d-flex justify-content-between\">\n\t\t\t<div>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<div class=\"total_counts\">\n\t\t\t\t\t<span *ngIf=\"list.length > 2\">Total: <b>{{totalCount}}</b></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"d-flex justify-content-center mt-2\">\n\t\t\t\t<div *ngIf=\"totalPages > 1\">\n\t\t\t\t\t<ul class=\"pagination justify-content-center\">\n\t\t\t\t\t\t<li class=\"page-item\"\n\t\t\t\t\t\t\t\t[ngClass]=\"{'disabled': page<=1}\">\n\t\t\t\t\t\t<a class=\"page-link\" routerLink=\".\" (click)=\"onPreviousPage()\"\n\t\t\t\t\t\t\taria-label=\"Previous\">\n\t\t\t\t\t\t\t<span aria-hidden=\"true\">&laquo;</span>\n\t\t\t\t\t\t\t<span class=\"sr-only\">Previous</span>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\n\t\t\t\t\t\t<li *ngIf=\"leftMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n\n\t\t\t\t\t\t<li *ngFor=\"let p of pages;  let i = index\" class=\"page-item\"\n\t\t\t\t\t\t\t\t[ngClass]=\"{'active': p==page}\">\n\t\t\t\t\t\t\t<a class=\"page-link\" routerLink=\".\" (click)=\"onGotoPage(p)\">{{p}}</a>\n\t\t\t\t\t\t</li>\n\n\t\t\t\t\t\t<li *ngIf=\"rightMore\" class=\"page-item\"><a class=\"page-link\">...</a></li>\n\t\t\t\t\t\t<li class=\"page-item\"\n\t\t\t\t\t\t\t\t[ngClass]=\"{'disabled': page>=totalPages}\">\n\t\t\t\t\t\t<a class=\"page-link\" routerLink=\".\" (click)=\"onNextPage()\"\n\t\t\t\t\t\t\taria-label=\"Next\">\n\t\t\t\t\t\t\t<span aria-hidden=\"true\">&raquo;</span>\n\t\t\t\t\t\t\t<span class=\"sr-only\">Next</span>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t</div>\n\n\t</div>\n\t\n</div>\n\n\n","import { HttpClient } from '@angular/common/http';\nimport { MddsBaseService } from '@hicoder/angular-core';\n\nconst servicePath = '/muser/';\n\nexport class MuserBaseService extends MddsBaseService {\n    constructor(http: HttpClient, serverRootUrl: string) {\n        const serviceUrl = serverRootUrl + servicePath;\n        super(http, serviceUrl);\n    }\n}\n","import { Location } from '@angular/common';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MddsBaseComponent, ViewType } from '@hicoder/angular-core';\nimport { Injector, Component } from '@angular/core';\nimport { MuserService } from './muser.service';\n\nconst itemCamelName = 'user';\n\nexport { ViewType };\n\n\n\n@Component({\n  template: '',\n})\nexport class MuserComponent extends MddsBaseComponent {\n    constructor(\n      \n      public muserService: MuserService,\n      public injector: Injector,\n      public router: Router,\n      public route: ActivatedRoute,\n      public location: Location) {\n\n        super(muserService, injector, router, route, location);\n        this.setItemNames(itemCamelName);\n        \n        this.briefFieldsInfo = [];\n        this.briefFieldsInfo.push(['username', 'Username']);this.briefFieldsInfo.push(['email', 'Email']);this.briefFieldsInfo.push(['phone', 'Phone']);this.briefFieldsInfo.push(['since', 'Since']);this.briefFieldsInfo.push(['status', 'Status']);\n\n\n\n        this.emailFields = [['Email','email'],];\n\n\n        this.schemaName = 'muser';\n        this.dateFormat = 'MM-DD-YYYY';\n        this.timeFormat = 'hh:mm:ss';\n        this.modulePath = 'users';\n        this.indexFields = ['username', ];\n    }\n}\n","import { Injectable, Inject, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MuserBaseService } from './muser.base.service';\nimport { Users_SERVER_ROOT_URI } from '../users.tokens';\n\n@Injectable()\nexport class MuserService extends MuserBaseService implements OnDestroy {\n    constructor(\n        http: HttpClient,\n        @Inject(Users_SERVER_ROOT_URI) private usersServerRootUri: string) {\n        super(http, usersServerRootUri);\n    }\n    ngOnDestroy() { }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { MddsRouteReuseStrategy } from '@hicoder/angular-core';\n\nimport { UsersComponent } from './users.component';\nimport { UsersRoutes } from '../users.conf';\n\n@NgModule({\n  imports: [RouterModule.forChild(UsersRoutes)],\n  exports: [RouterModule],\n  providers: [// only use these providers in component scope\n    { provide: RouteReuseStrategy, useClass: MddsRouteReuseStrategy },\n  ],\n\n})\nexport class UsersRoutingModule { }\n","// Import components for each schema\n\nimport { MuserListComponent } from './muser/muser-list/muser-list.component';\nimport { MuserDetailComponent } from './muser/muser-detail/muser-detail.component';\nimport { MuserEditComponent } from './muser/muser-edit/muser-edit.component';\nimport { MuserPassComponent } from './muser/muser-edit/muser-pass.component';\n\nimport { AuthGuard } from '@hicoder/angular-auth';\n\nexport const muserRoutingPath = [\n    {path: 'list', component: MuserListComponent, canActivate: [AuthGuard]},\n    {path: 'detail/:id', component: MuserDetailComponent, canActivate: [AuthGuard]},\n    {path: 'edit/:id', component: MuserEditComponent, canActivate: [AuthGuard]},\n    {path: 'password/:id', component: MuserPassComponent, canActivate: [AuthGuard]},\n    {path: 'new', component: MuserEditComponent, canActivate: [AuthGuard]},\n    \n    {path: '**', redirectTo: 'list', pathMatch: 'full'}\n];\n\n","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css'],\n})\nexport class UsersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n","<div class=\"container\">\n\t\t<div class=\"card component-main-card\">\n\t\t  <div class=\"card-header\">\n\t\t\t  <nav class=\"nav nav-pills\">\n\n\t\t\t    <a class=\"nav-item nav-link\" routerLink=\"./muser\" \n\t\t\t    \trouterLinkActive=\"active\">User</a>\n\n\t\t\t  </nav>\n\t\t  </div>\n\t\t  <div class=\"card-body\">\n\t\t\t<router-outlet></router-outlet>\n\t\t  </div>\n\t\t</div>\n</div>\n","\n\nimport { NgbDateParserFormatter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { dateStructureToString, stringToDateStructure } from '@hicoder/angular-core';\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class MraNgbDateFormatterService extends NgbDateParserFormatter {\n    private dateFormat = 'MM-DD-YYYY';\n    private timeFormat = 'hh:mm:ss';\n\n    // from input -> internal model\n    parse(value: string): NgbDateStruct {\n        return stringToDateStructure(value, this.dateFormat);\n    }\n    // from internal model -> string\n    format(date: NgbDateStruct): string {\n        return dateStructureToString(date, this.dateFormat);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { NgbModule, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport { MraNgbDateFormatterService } from './users.directive';\n\n\n\n\n\nimport { ActionEmailModule } from '@hicoder/angular-action-email';\n\nimport { MddsCoreModule } from '@hicoder/angular-core';\n\nimport { UsersRoutingModule } from './users-routing.module';\nimport { UsersComponent } from './users.component';\n\n\nimport { Users_SERVER_ROOT_URI } from './users.tokens';\nimport { users_server_root_uri } from '../users.conf';\n\n// Import components for each schema\n\nimport { MuserListComponent } from './muser/muser-list/muser-list.component';\n\n\n\nimport { MuserDetailComponent } from './muser/muser-detail/muser-detail.component';\nimport { MuserDetailFieldComponent } from './muser/muser-detail/muser-detail-field.component';\nimport { MuserEditComponent } from './muser/muser-edit/muser-edit.component';\n\nimport { MuserService } from './muser/muser.service';\n\nimport { MuserPassComponent } from './muser/muser-edit/muser-pass.component';\nimport { PassswordEqualValidator } from './muser/muser-edit/muser-pass.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    NgbModule,\n    MddsCoreModule,\n    ActionEmailModule,\n\n    UsersRoutingModule\n  ],\n  declarations: [\n    UsersComponent,\n    \n\n    MuserListComponent,\n    \n    \n    MuserDetailComponent,\n    MuserDetailFieldComponent,\n    MuserEditComponent,\n\n\n    MuserPassComponent,\n    PassswordEqualValidator,\n\n  ],\n  exports: [\n    UsersComponent,\n\n    MuserListComponent,\n    \n    \n    \n    MuserDetailComponent,\nMuserDetailFieldComponent,\n    MuserEditComponent,\n\n\n\n  ],\n  providers: [\n    { provide: Users_SERVER_ROOT_URI, useValue: users_server_root_uri },\n\n    {provide: NgbDateParserFormatter, useClass: MraNgbDateFormatterService},\n\n    MuserService,\n  ],\n  entryComponents: [MuserEditComponent,\n  ]\n})\nexport class UsersModule { }\n","import { InjectionToken } from '@angular/core';\n\nexport const Users_SERVER_ROOT_URI = new InjectionToken('Users_SERVER_ROOT_URI');\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}